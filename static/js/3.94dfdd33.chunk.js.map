{"version":3,"sources":["Utils/Animatior.js","Components/ColumnMiddle/StickerPreview.js","Assets/Icons/Smile.js","Notifications.js","Components/Player/PipPlayer.js","Assets/Icons/Saved.js","Components/Tile/OnlineStatus.js","Components/Tile/ChatTile.js","Components/Tile/ForwardTargetChat.js","Utils/Text.js","Utils/Language.js","Components/Popup/ForwardDialog.js","Assets/Icons/Document2.js","Assets/Icons/SharedMedia.js","Assets/Icons/Verified.js","Components/Tile/DialogTitle.js","Components/Tile/DialogStatus.js","Components/Tile/Chat.js","Assets/Icons/Back.js","Components/ColumnRight/ChatDetailsHeader.js","Components/ColumnMiddle/Notifications.js","Components/ColumnRight/NotificationsListItem.js","Components/ColumnRight/SharedMedia/SharedMediaTabs.js","Assets/Icons/Delete.js","Assets/Icons/Share.js","Components/Tile/SharedMedia/ContextMenu.js","Components/Tile/SharedMedia/SharedPhoto.js","Components/Tile/SharedMedia/SharedDocument.js","Components/Tile/SharedMedia/SharedLinkTile.js","Components/Tile/SharedMedia/SharedLink.js","Components/Tile/SharedMedia/SharedVoiceNote.js","Components/Tile/SharedMedia/SharedVideo.js","Components/ColumnRight/SharedMedia/SharedMediaContent.js","Components/ColumnRight/ChatDetails.js","Components/ColumnRight/GroupsInCommonHeader.js","Components/ColumnRight/GroupsInCommon.js","Assets/Icons/Search.js","Components/ColumnRight/SharedMedia/SharedMediaHeader.js","Components/ColumnRight/SharedMedia/SharedMediaBase.js","Components/ColumnRight/SharedMedia/SharedAudios.js","Components/ColumnRight/SharedMedia/SharedDocuments.js","Components/ColumnRight/SharedMedia/SharedLinks.js","Components/ColumnRight/SharedMediaHeader.js","Components/ColumnRight/SharedMedia.js","Components/ColumnRight/SharedMedia/SharedPhotos.js","Components/ColumnRight/SharedMedia/SharedVideos.js","Components/ColumnRight/SharedMedia/SharedVoiceNotes.js","Components/ColumnRight/ChatInfo.js","Components/Tile/DialogContent.js","Assets/Icons/Pin.js","Stores/FilterStore.js","Components/Tile/DialogBadge.js","Assets/Icons/Error.js","Assets/Icons/Pending.js","Assets/Icons/Sent.js","Assets/Icons/Succeeded.js","Components/Message/Status.js","Components/Tile/DialogMeta.js","Assets/Icons/Archive.js","Assets/Icons/Broom.js","Assets/Icons/Unarchive.js","Assets/Icons/Pin2.js","Assets/Icons/Mute.js","Assets/Icons/Unmute.js","Assets/Icons/User.js","Assets/Icons/Group.js","Assets/Icons/Message.js","Assets/Icons/Unread.js","Components/Tile/Dialog.js","Actions/Message.js","Components/Tile/DialogPlaceholder.js","Components/Additional/VirtualizedList.js","Utils/DOM.js","Assets/Icons/Channel.js","Assets/Icons/Menu.js","Assets/Icons/Help.js","Assets/Icons/Settings.js","Workers/CacheManager.js","Stores/CacheStore.js","Components/ColumnLeft/MainMenuButton.js","Components/ColumnLeft/Search/SearchInput.js","Components/ColumnLeft/DialogsHeader.js","Components/ColumnLeft/Filters.js","Components/ColumnLeft/DialogsList.js","Components/ColumnLeft/Archive.js","Components/Tile/TopChat.js","Components/Tile/RecentlyFoundChat.js","Components/Tile/FoundPublicChat.js","Components/Tile/FoundMessage.js","Components/ColumnLeft/SectionHeader.js","Components/ColumnLeft/Search/Search.js","Components/ColumnLeft/SidebarPage.js","Assets/Icons/Folder.js","Assets/Icons/Edit.js","Assets/Icons/LogOut.js","Assets/Icons/More.js","Components/ColumnLeft/Settings/SettingsMenuButton.js","Assets/Icons/Data.js","Assets/Icons/Language.js","Components/ColumnLeft/Settings/Main.js","Assets/Icons/AddImage.js","Components/ColumnLeft/NewChatPhoto.js","Components/ColumnLeft/Settings/EditProfile.js","Assets/Icons/Add.js","Assets/Icons/NewPrivate.js","Assets/Icons/NonContacts.js","Assets/Icons/NewGroup.js","Assets/Icons/NewChannel.js","Assets/Icons/ReadChats.js","Assets/Icons/Bots.js","Assets/Icons/Done.js","Components/Tile/FilterChat.js","Components/Tile/FilterText.js","Components/Tile/Chip.js","Components/Tile/ChatChip.js","Components/ColumnLeft/Settings/EditFilterChats.js","Components/ColumnLeft/Settings/CreateFilter.js","Utils/Filter.js","Components/Tile/Filter.js","Components/Tile/RecommendedFilter.js","Components/ColumnLeft/Settings/Filters.js","Assets/Icons/Colorize.js","Components/Tile/Wallpaper.js","Components/ColumnLeft/Settings/ChatBackground.js","Components/ColumnLeft/ThemePicker.js","Components/ColumnLeft/Settings/General.js","Components/ColumnLeft/Language.js","Components/ColumnLeft/Settings/Notifications.js","Assets/Icons/Stop.js","Components/Tile/Session.js","Components/ColumnLeft/Settings/ActiveSessions.js","Assets/Icons/Unblock.js","Components/ColumnLeft/Settings/BlockedUsers.js","Assets/Icons/Device.js","Assets/Icons/RemoveMember.js","Components/ColumnLeft/Settings/PrivacySecurity.js","Components/ColumnLeft/Settings/Settings.js","Components/ColumnLeft/Contacts.js","Components/ColumnLeft/UpdatePanel.js","Components/ColumnLeft/NewChannel.js","Components/Tile/UserChip.js","Components/ColumnLeft/AddParticipants.js","Components/ColumnLeft/NewGroupParams.js","Components/ColumnLeft/NewGroup.js","Components/Popup/SidebarDialog.js","Utils/Archive.js","Components/ColumnLeft/Dialogs.js","Components/Popup/ChatInfoDialog.js","Assets/Icons/Send.js","Assets/Icons/Microphone.js","Assets/Icons/Attach.js","Components/ColumnMiddle/AttachButton.js","Utils/Component.js","Utils/Key.js","Components/Popup/CreatePollOption.js","Components/Popup/CreatePollDialog.js","Components/Popup/EditUrlDialog.js","Components/Tile/ReplyTile.js","Components/Message/Reply.js","Components/ColumnMiddle/InputBoxHeader.js","Components/Popup/PasteFilesDialog.js","Components/ColumnMiddle/RecordTimer.js","Components/Popup/EditMediaDialog.js","Utils/OutputTypingManager.js","Components/ColumnMiddle/InputBox.js","Components/ColumnMiddle/FooterCommand.js","Components/ColumnMiddle/NotificationsCommand.js","Components/ColumnMiddle/Footer.js","Components/ColumnMiddle/MainMenuButton.js","Components/Tile/HeaderChatSubtitle.js","Components/Tile/HeaderChat.js","Components/ColumnMiddle/HeaderCommand.js","Components/ColumnMiddle/PinnedMessage.js","Components/ColumnMiddle/Header.js","Components/Player/VolumeButton.js","Components/Player/RepeatButton.js","Components/Player/ShuffleButton.js","Components/Player/PlaybackRateButton.js","Components/Player/Time.js","Components/Player/Playlist.js","Actions/InstantView.js","Components/Player/HeaderPlayer.js","Components/ColumnMiddle/ActionBar.js","Assets/Icons/Copy.js","Assets/Icons/FrameCheck.js","Assets/Icons/RemoveCheck.js","Components/Message/MessageMenu.js","Components/Message/Meta.js","Components/Message/Album/AlbumItem.js","Components/Message/DayMeta.js","Components/Message/Forward.js","Components/Message/Album/GroupedMessages.js","Components/Message/UnreadSeparator.js","Components/Tile/EmptyTile.js","Components/Message/Album/Album.js","Components/ColumnMiddle/FilesDropTarget.js","Components/Message/StubMessage.js","Components/Message/Media/WebPage.js","Components/Message/Message.js","Components/Message/ServiceMessage.js","Components/ColumnMiddle/Placeholder.js","Components/ColumnMiddle/ScrollDownButton.js","Components/ColumnMiddle/StickersHint.js","Components/Message/Album/DocumentAlbum.js","Components/ColumnMiddle/MessagesList.js","Components/Popup/ShareStickerSetButton.js","Components/Popup/StickerSetDialog.js","Components/ColumnMiddle/DialogDetails.js","Components/InstantView/Article.js","Assets/Icons/Left.js","Components/Viewer/MediaCaption.js","Components/Viewer/InstantViewMediaViewerContent.js","Components/Viewer/MediaViewerButton.js","Components/Viewer/MediaViewerFooterText.js","Components/Viewer/MediaViewerFooterButton.js","Components/Viewer/MediaViewerDownloadButton.js","Components/Viewer/InstantViewMediaViewer.js","Components/InstantView/InstantViewer.js","Components/Tile/MediaInfo.js","Components/Viewer/MediaViewerContent.js","Components/Viewer/MediaViewer.js","Components/Viewer/ProfileMediaViewerContent.js","Components/Tile/ProfileMediaInfo.js","Components/Viewer/ProfileMediaViewer.js","Components/Popup/ClearHistoryDialog.js","Components/Popup/DeleteMessagesDialog.js","Components/Popup/LeaveChatDialog.js","Components/Additional/NotificationTimer.js","Components/Actions.js","Components/MainPage.js"],"names":["Animator","constructor","duration","options","start","this","stopped","id","requestAnimationFrame","startInternal","timeStamp","startTime","endTime","draw","now","every","x","to","last","time","Math","min","p","val","outSine","forEach","from","func","stop","cancelAnimationFrame","n","sin","PI","StickerPreview","React","Component","state","emoji","prevPropsSticker","loadStickerEmojis","sticker","TdLibController","send","then","result","props","setState","emojis","join","componentDidUpdate","prevProps","prevState","snapshot","componentDidMount","render","className","displaySize","STICKER_PREVIEW_DISPLAY_SIZE","source","StickerSourceEnum","PREVIEW","createSvgIcon","d","withSnackbarNotifications","WrappedComponent","NotificationsWrapper","maxSnack","MAX_SNACK","displayName","getDisplayName","PipPlayer","super","onClientUpdateMediaShortcut","update","event","onKeyDown","key","code","altKey","ctrlKey","metaKey","shiftKey","video","handled","handleClose","handleSeek","currentTime","PLAYER_SEEK_STEP_SMALL","PLAYER_SEEK_STEP_BIG","handleVolume","volume","PLAYER_VOLUME_STEP","handleClick","handleMute","handleFullScreen","progress","Number","replace","handleSeekProgress","handlePlaybackRate","playbackRate","PLAYER_PLAYBACKRATE_STEP","stopPropagation","preventDefault","clamp","PLAYER_VOLUME_MIN","PLAYER_VOLUME_MAX","showMediaHint","round","rate","PLAYER_PLAYBACKRATE_MIN","PLAYER_PLAYBACKRATE_MAX","onFullScreenChange","fullscreen","document","fullscreenElement","mozFullScreenElement","webkitFullscreenElement","getElementById","onWindowResize","player","oldLeft","parseInt","style","left","oldTop","top","normalizePosition","handleLoadedData","target","handleLoadedMetadata","buffered","waiting","handleCanPlay","play","pause","handlePlay","onPlay","hidden","clientUpdate","handlePause","onPause","handleEnded","onEnded","setCurrentTime","handleTimeUpdate","fileId","handleVolumeChange","onVolumeChange","handleProgress","handleWaiting","startStopPlayer","paused","handlePlayerMouseDown","pip","focus","mouseDownRoot","nativeEvent","which","offsetX","offsetY","onmousemove","handleMouseMove","onmouseup","handleMouseUp","windowDragging","clientX","clientY","handleMouseDown","dragging","draggingTime","handleChange","value","handleChangeCommitted","isFinite","handlePanelEnter","panelEnter","handlePanelLeave","handleMouseOver","clearTimeout","mouseOverTimeout","setTimeout","videoInfo","handleVolumeSliderChange","handleVolumeSliderChangeCommitted","activeElement","blur","prevVolume","root","exitFullscreen","requestFullscreen","getCurrentTime","file","FileStore","get","remote","unique_id","PlayerStore","clearCurrentTime","handlePanelDoubleClick","handleClickRoot","handleDoubleClick","handleFocus","KeyboardManager","add","keyboardHandler","handleBlur","remove","KeyboardHandler","prevVideo","connectPlayer","window","addEventListener","on","componentWillUnmount","disconnectPlayer","removeEventListener","off","text","pipPlayer","pipParams","container","onloadedmetadata","onloadeddata","oncanplay","onplay","onpause","onended","ontimeupdate","onvolumechange","onprogress","onwaiting","innerHTML","appendChild","checkGlue","playerWidth","clientWidth","playerHeight","clientHeight","documentWidth","documentElement","documentHeight","glueLeft","glueRight","PIP_PLAYER_BORDER_PRECISION","glueTop","glueBottom","element","method","mozRequestFullScreen","webkitRequestFullscreen","call","mozCancelFullScreen","webkitExitFullscreen","bufferedTime","Player","getBufferedTime","bufferedValue","timeString","getDurationString","floor","durationString","fullscreenEnabled","mozFullScreenEnabled","webkitFullscreenEnabled","classNames","onMouseDown","onMouseMove","onClick","onDoubleClick","onFocus","onBlur","tabIndex","Hint","e","Close","onMouseEnter","onMouseLeave","width","Slider","max","step","classes","rail","track","thumb","active","onChange","onChangeCommitted","Pause","getVolumeIcon","disabled","FullScreen","Progress","OnlineStatus","onUpdateUserStatus","userId","user_id","user","UserStore","online","isUserOnline","getChatUserId","chatId","size","borderSize","height","padding","defaultProps","ChatTile","onFastUpdatingComplete","forceUpdate","onClientUpdateChatBlob","loaded","chat","ChatStore","photo","src","getSrc","small","onUpdateChatPhoto","chat_id","store","getStore","loadChatContent","onUpdateChatTitle","t","letters","getChatLetters","handleSelect","onSelect","handleLoad","prevChatId","shouldComponentUpdate","nextProps","nextState","showOnline","showSavedMessages","dialog","big","isDeletedPrivateChat","pointer","DeletedAccount","fontSize","isMeChat","tileLoaded","typeId","getChatTypeId","tileColor","abs","onLoad","draggable","alt","isPrivateChat","withTranslation","ForwardTargetChat","selected","shortTitle","getChatShortTitle","copy","a","navigator","clipboard","writeText","console","error","copyOld","successful","createElement","contentEditable","readOnly","all","position","clip","whiteSpace","webkitUserSelect","MozUserSelect","msUserSelect","userSelect","body","select","execCommand","Error","removeChild","cyrillicInput","isCyrillicPackId","packId","getCyrillicInput","input","length","currentPackId","OptionStore","suggestedPackId","Map","output","i","has","latinInput","getLatinInput","ForwardDialog","loadContent","getPublicMessageLink","promises","getChatsPromise","offset_order","offset_chat_id","limit","push","savedMessagesPromise","getMyId","force","Promise","map","catch","chats","savedMessages","chatIds","chat_ids","loadChatsContent","messageIds","isSupergroup","getChatUsername","message_id","for_album","publicMessageLink","forward","handleCopyLink","link","handleScheduledAction","message","enqueueSnackbar","closeSnackbar","snackKey","autoHideDuration","NOTIFICATION_AUTO_HIDE_DURATION_MS","preventDuplicate","action","IconButton","aria-label","color","getForwardPhotoSize","MessageStore","can_be_forwarded","content","sizes","handleSend","clearSelection","inputMessageContent","getInnerText","messageRef","current","targetChats","targetChatId","caption","entities","reply_to_message_id","disable_notifications","from_background","reply_markup","input_message_content","disable_web_page_preview","clear_draft","thumbnail","added_sticker_file_ids","ttl","from_chat_id","message_ids","as_album","handleChangeSelection","delete","set","innerText","handleSearchKeyDown","keyCode","handleSearchKeyUp","searchRef","trim","searchText","searchResults","globalSearchResults","latinText","cyrillicText","chatsSource","concat","filter","canSendMessages","hasSearchText","query","handleSearchPaste","plainText","clipboardData","getData","handleMessageKeyUp","handleMessagePaste","getChatTitle","toLocaleLowerCase","indexOf","toLowerCase","setSearchFocus","createRef","searchResultsMap","filteredResults","foundChats","open","manager","modalManager","transitionDuration","onClose","aria-labelledby","aria-describedby","ref","suppressContentEditableWarning","placeholder","onKeyUp","onPaste","DialogActions","Button","autoFocus","enhance","compose","withSnackbar","DialogTitle","isVerified","isChatVerified","title","DialogStatus","type","updateSubtitle","fullInfo","BasicGroupStore","getFullInfo","basic_group_id","members","find","subtitle","getChatSubtitleWithoutTyping","isAccent","isAccentChatSubtitleWithoutTyping","onUpdateUserFullInfo","onUpdateBasicGroupFullInfo","onUpdateSupergroupFullInfo","supergroup_id","onUpdateBasicGroup","basic_group","onUpdateSupergroup","supergroup","SupergroupStore","externalSubtitle","Chat","onTileSelect","showStatus","showTitle","isSavedMessages","ChatDetailsHeader","backButton","info","isChannelChat","Notifications","onUpdateChatNotificationSettings","isMuted","isChatMuted","onUpdateScopeNotificationSettings","scope","handleSetChatNotifications","debouncedSetChatNotificationSettings","setChatNotificationSettings","toggleChatNotificationSettings","debounce","NOTIFICATION_DEBOUNCE_DELAY_MS","NotificationStore","ListItem","button","alignItems","ListItemIcon","Checkbox","edge","checked","disableRipple","ListItemText","primary","Typography","variant","noWrap","secondary","SharedMediaTabs","onUpdateMessageContent","selectedIndex","media","getMedia","setMediaState","onUpdateDeleteMessages","onUpdateNewMessage","hasObserver","setSelection","photoAndVideo","audio","url","voiceNote","groupsInCommon","hasPhotoAndVideo","hasDocument","hasAudio","hasUrl","hasVoiceNote","hasGroupsInCommon","index","onClientUpdateChatMedia","currentChatId","onClientUpdateMediaTab","transition","isSmallWidth","scroll","filtersRef","item","photoAndVideoFilter","filterRef","firstChild","offsetLeft","documentFilter","audioFilter","urlFilter","voiceNoteFilter","groupsInCommonFilter","filterSelection","filterSelectionRef","transitionStyle","cssText","scrollWidth","animator","scrollLeft","offsetWidth","handleFilterClick","throttle","observeResize","unobserveResize","filters","observer","ResizeObserver","observe","resizeObserver","unobserve","tabsCount","r","ContextMenu","handleOpenMessage","messageId","openChat","handleForward","forwardMessages","handleDelete","deleteMessages","anchorPosition","showOpenMessage","can_be_deleted_only_for_self","can_be_deleted_for_all_users","Popover","anchorReference","anchorOrigin","vertical","horizontal","transformOrigin","MenuList","MenuItem","Share","Delete","SharedPhoto","onClientUpdatePhotoBlob","photoSize","thumbSize","handleOpenContextMenu","contextMenu","handleCloseContextMenu","thumbnailSize","prevPhoto","getSize","minithumbnail","nextContext","openMedia","miniSrc","data","thumbSrc","isBlurredThumbnail","onContextMenu","backgroundImage","backgroundSize","PHOTO_SIZE","PHOTO_THUMBNAIL_SIZE","SharedDocument","i18n","date","dateString","Date","toLocaleDateString","language","day","month","year","hour","minute","hour12","SharedLinkTile","isBlurred","THUMBNAIL_BLURRED_SIZE_90","isVideoNote","hasVideoNote","hasSrc","Boolean","charCodeAt","SharedLink","webPage","entity","getTitleFromUrl","startsWith","decodedUrl","decodeURI","hostname","URL","split","domain","punycode","ToUnicode","description","animation","video_note","display_url","videoNote","album_cover_minithumbnail","album_cover_thumbnail","getPhotoSize","urlEntities","isValidEntity","showLinks","oneLinkText","offset","links","entityText","substring","mail","typeUrl","SafeLink","getFormattedText","getFirstLetter","SharedVoiceNote","sender_user_id","voice","VoiceNoteTile","MessageAuthor","AudioAction","MediaStatus","icon","SharedVideo","onClientUpdateVideoThumbnailBlob","SharedMediaContent","items","some","scrollTop","list","listRef","offsetTop","viewportHeight","offsetParent","offsetHeight","renderIds","getRenderIds","onUpdateMessageSend","getSource","isValidContent","slice","SHARED_MESSAGE_SLICE_LIMIT","rowHeight","getRowHeight","params","loading","completed","migrateCompleted","getFilter","handleScroll","onLoadNext","handleVirtScroll","setScrollPosition","isVisibleItem","prevScrollTop","loadIncomplete","lastMessages","messages","fromMessageId","requestId","from_message_id","finally","currentParams","total_count","isValidMessage","incompleteResults","setItems","loadMessageContents","onLoadMigratedNext","handleOpen","popup","isValidPhotoAndVideoContent","isValidDocumentContent","isValidAudioContent","isValidUrlContent","isValidVoiceNoteContent","web_page","renderIdsList","contentHeight","controls","itemHeight","getItemHeight","getItemTemplate","onOpen","voice_note","ChatDetails","loadChatContents","getGroupChatMembers","loadUsersContent","getChatFullInfo","handleUsernameHint","username","telegramUrlOption","handlePhoneHint","phoneNumber","getChatPhoneNumber","formatPhoneNumber","handleHeaderClick","handleOpenViewer","setProfileMediaViewerContent","handleOpenChat","handleOpenUser","openUser","getContentHeight","handleTabClick","divider","dividerRef","scrollTo","behavior","mediaRef","scrollHeight","SCROLL_PRECISION","getSnapshotBeforeUpdate","theme","counters","migratedCounters","el","groupInCommonCount","group_in_common_count","bio","getChatBio","isGroup","isGroupChat","isMe","users","member","sort","y","getUserStatusOrder","getUrlMentionHashtagEntities","bioText","bioEntities","onScroll","List","wordWrap","toUpperCase","paddingLeft","withSaveRef","withRestoreRef","GroupsInCommonHeader","GroupsInCommon","minHeight","SharedMediaHeader","handleSearch","searchInputRef","onSearch","onCloseSearch","openSearch","handleKeyDown","handleKeyUp","handlePaste","ANIMATION_DURATION_200MS","SpeedDialIcon","openIcon","SharedMediaBase","getListClassName","getSearchListClassName","TypeError","migratedChatId","migratedItems","new_content","old_content","between","findIndex","insertByOrder","messageComparatorDesc","callback","getSearchFilter","handleSearchScroll","searchListRef","searchParams","onSearchMigratedNext","onSearchNext","searchItems","searchMigratedItems","handleCloseSearch","hasSearch","getHeader","searchMessages","SharedAudios","propTypes","PropTypes","number","isRequired","bool","SharedDocuments","SharedLinks","close","SharedMedia","Tabs","indicatorColor","textColor","scrollable","scrollButtons","fullWidth","Tab","label","minWidth","SharedPhotos","SharedVideos","SharedVoiceNotes","ChatInfo","onClientUpdatePageWidth","handleCloseChatDetails","onClientUpdateChatId","nextChatId","sharedAudios","sharedDocuments","sharedLinks","sharedPhotos","sharedVideos","sharedVoiceNotes","userChatId","openGroupInCommon","openSharedAudios","openSharedDocuments","openSharedLinks","openSharedMedia","openSharedPhotos","openSharedVideos","openSharedVoiceNotes","getCounters","loadChatCounters","loadMigratedCounters","getPhotoFromChat","loadProfileMediaViewerContent","getChatCounters","setCounters","getSupergroupId","upgraded_from_basic_group_id","handleOpenSharedMedia","handleCloseSharedMedia","handleOpenGroupInCommon","handleCloseGroupsInCommon","changeChatDetailsVisibility","handleOpenSharedDocuments","handleCloseSharedDocuments","handleOpenSharedAudios","handleCloseSharedAudios","handleOpenSharedVoiceNotes","handleCloseSharedVoiceNotes","handleOpenSharedLinks","handleCloseSharedLinks","handleOpenSharedPhotos","handleCloseSharedPhotos","handleOpenSharedVideos","handleCloseSharedVideos","detailsRef","AppStore","dialogChatId","onOpenGroupInCommon","onOpenSharedAudios","onOpenSharedDocuments","onOpenSharedMedia","onOpenSharedLinks","onOpenSharedPhotos","onOpenSharedVideos","onOpenSharedVoiceNotes","DialogContent","onClientUpdateClearHistory","clearHistory","inProgress","onUpdateUser","last_message","onUpdate","contentControl","typingString","getChatTypingString","draft","getChatDraft","showChatDraft","getLastMessageContent","senderName","getLastMessageSenderName","strokeWidth","fill","fillRule","x1","y1","x2","y2","strokeLinecap","strokeLinejoin","FilterStore","EventEmitter","reset","chatList","authorization_state","chat_filters","emit","onClientUpdate","addTdLibListener","removeTdLibListener","DialogBadge","unread_count","isPinned","isChatPinned","showUnreadMentionCount","showChatUnreadMentionCount","showUnreadCount","showChatUnreadCount","Pin","stroke","transform","cx","cy","Status","old_message_id","sending_state","newMessageId","sendingState","onUpdateChatReadOutbox","last_read_outbox_message_id","unread","prevMessageId","isMessageUnread","viewBox","Pending","Sent","Succeeded","DialogMeta","getLastMessageDate","is_outgoing","Dialog","previousChatId","handleContextMenu","contextMenuId","canPinChats","canTogglePin","canToggleArchive","canAddChatToList","canMute","pinnedSumMaxOption","isChatArchived","isSecret","isChatSecret","chat_list","pinnedSum","reduce","handlePin","toggleChatIsPinned","handleArchive","addChatToList","handleViewInfo","handleRead","isChatUnread","is_marked_as_unread","forceRead","force_read","viewMessages","toggleChatIsMarkedAsUnread","handleDeleteChat","leaveChat","isLastPinned","ApplicationStore","deleteChat","canDeleteChat","deleteChatTitle","getDeleteChatTitle","isSelected","getChatId","isUnread","isArchived","Unarchive","Group","getViewInfoTitle","Unmute","Mute","Unread","DialogPlaceholder","titleWidth","contentWidth","cos","right","VirtualizedList","setViewportHeight","parseFloat","getComputedStyle","getPropertyValue","overScanCount","getListRenderIds","getListRef","renderItem","findLastTextNode","nodeType","Node","TEXT_NODE","childNodes","textNode","focusInput","range","createRange","setStart","collapse","selection","getSelection","removeAllRanges","addRange","load","localStorage","getItem","JSON","parse","save","setItem","stringify","removeItem","clear","CacheStore","archiveChatIds","meChat","cacheContacts","contacts","cache","CacheManager","clearDataUrls","saveInternal","files","user_ids","parseCache","archiveChats","basicGroups","supergroups","setDataUrl","OutputTypingManager","updateChatChatLists","option","getCache","fileMap","userMap","basicGroupMap","supergroupMap","blob","getBlob","basicGroup","values","entries","resolve","reject","fileReader","FileReader","readAsDataURL","onload","onerror","results","deleteDataUrl","MainMenuButton","onUpdateAuthorizationState","authorizationState","handleMenuOpen","isAuthorizationReady","anchorEl","currentTarget","handleMenuClose","handleCheckUpdates","handleNewChannel","handleNewGroup","handleContacts","handleArchived","openArchive","handleSaved","handleSettings","handleHelp","searchChat","getAuthorizationState","timeout","showClose","mainMenuControl","Menu","getContentAnchorEl","disableAutoFocusItem","disableRestoreFocus","Channel","Saved","Help","closeIcon","aria-owns","aria-haspopup","SearchInput","stopImmediatePropagation","onBackspace","handleInput","inputRef","hint","showIcon","onInput","DialogsHeader","handleSearchTextChange","onSearchTextChange","setInitQuery","searchInput","showBack","Filters","onClientUpdateLanguageChange","onClientUpdateCacheLoaded","cachedFilters","main","chat_filter_id","onUpdateChatFilters","handleMainClick","onClientUpdateChatList","handleWheel","deltaY","LocalizationStore","onWheel","DialogListItem","DialogsList","loadFirstSlice","onClientUpdateLeaveChat","hiddenChats","initDB","saveCache","onSaveCache","onUpdateChatPosition","chatListEquals","onUpdateChatOrder","hasChatList","order","getChatOrder","currentIndex","chatOrder","newChatIds","setChatId","reorderChats","SCROLL_CHATS_PRECISION","onLoadPrev","fistSliceLoaded","showArchive","archiveTitle","cacheItems","orderedChatIds","b","orderCompare","isDifferentOrder","oldChatIds","CHAT_SLICE_LIMIT","offsetOrder","offsetChatId","shift","replaceChats","appendChats","newChats","scrollToTop","Array","Archive","innerListRef","TopChat","PureComponent","onDelete","RecentlyFoundChat","FoundPublicChat","selectedChatId","FoundMessage","nextMessageId","getMessageId","previousMessageId","chatSearch","selectedMessageId","getMessageDate","getMessageSenderName","senderFullName","getMessageSenderFullName","getContent","tile","UserTile","SectionHeader","command","multiline","children","Search","modals","isComposing","concatSearchResults","arr","j","sessionId","localPromise","latinLocalPromise","cyrillicLocalPromise","local","savedMessagesStrings","includes","splice","recentlyFound","trimmedText","substr","USERNAME_LENGTH_MIN","globalPromises","globalPromise","latinTrimmedText","globalLatinPromise","globalResults","global","offset_date","offset_message_id","linkMessage","messageLinkInfo","log","keys","topPromise","category","recentlyFoundPromise","handleClearRecentlyFound","handleSelectMessage","addToRecent","keepOpen","onSelectMessage","onLoadPrevious","getOffset","concatMessages","filterDuplicateMessages","handleTopChatsScroll","handleDeleteRecentlyFoundChat","handleDeleteTopChat","searchOrLoadContent","topChats","recentlyFoundChats","localChats","globalChatsMap","globalChats","globalLinkChat","globalMessagesMap","globalMessages","globalLinkMessage","count","messagesCaption","SidebarPage","Slide","direction","in","mountOnEnter","unmountOnExit","cloneElement","SettingsMenuButton","handleLogOut","handleDone","logOut","More","LogOut","DialogContentText","Main","onEditProfile","onGeneral","onNotifications","onPrivacySecurity","onLanguage","onFilters","Edit","Data","packageJson","version","NewChatPhoto","handleCancel","cropper","cropperRef","getCroppedCanvas","toBlob","blobURL","createObjectURL","onChoose","handleAttach","attachPhotoRef","click","handleAttachComplete","readImageSize","fileURL","defaultURL","getFitSize","fitWidth","fitHeight","AddImage","multiple","accept","margin","aspectRatio","viewMode","guides","Check","EditProfile","handleUsernameChange","newUsername","usernameRef","usernameCheck","newUsername2","handleChoosePhoto","name","firstNameRef","lastNameRef","bioRef","userFullInfo","firstName","first_name","lastName","last_name","setName","setBio","setUsername","newFirstName","newLastName","newBio","hasError","usernameLabel","getSimpleMarkupEntities","formattedText","TextField","defaultValue","FilterChat","role","undefined","getChatType","Radio","FilterText","Chip","divRef","setStyleCSSText","div","ChatChip","EditFilterChats","handleChatChange","search","mode","handleBackspace","focusedItem","include_contacts","include_non_contacts","include_bots","include_groups","include_channels","included_chat_ids","lastItem","exclude_muted","exclude_read","exclude_archived","excluded_chat_ids","wrapPanelRef","itemsRef","prevFilter","include","prevItems","isDeleting","wrapPanel","prevHeight","prevOffsetHeight","prevCSSText","prevMap","panel","animatePanel","currentHeight","collapsed","scrollIntoView","animateItems","prevOffsets","doubleTransform","currentOffset","prevOffset","NonContacts","Bots","handleSearchClose","zIndex","scrollRef","marginTop","RLottie","lazy","CreateFilter","loadAnimationData","closeData","requests","fetch","onDone","editFilter","titleRef","isFilterValid","handleAnimationClick","lottie","lottieRef","isPaused","handleDeleteIncludeContacts","newEditFilter","handleDeleteIncludeNonContacts","handleDeleteIncludeGroups","handleDeleteIncludeChannels","handleDeleteIncludeBots","handleDeleteIncludedChat","handleDeleteExcludeMuted","handleDeleteExcludeRead","handleDeleteExcludeArchived","handleDeleteExcludedChat","handleOpenFilterChats","openFilterChats","handleCloseFilterChats","setDefaultFilterTitle","included","excluded","handleTitleChange","FILTER_TITLE_MAX_LENGTH","prevFilterId","shook","filterId","Done","Suspense","fallback","autoplay","loop","stringData","Add","Filter","handleOpenDialog","handleCloseDialog","handleDeleteCancel","handleDeleteConfirm","onEdit","getFilterSubtitle","RecommendedFilter","handleAdd","recommendedFilter","disableElevation","loadData","handleCreateFilter","FILTER_COUNT_MAX","openFilter","icon_name","pinned_chat_ids","handleCloseFilter","handleEditFilter","recommendedFilters","filtersMap","filterInfo","hasFilters","hasRecommendedFilters","startIcon","Wallpaper","onClientUpdateDocumentThumbnailBlob","wallpaper","backgroundPosition","FileProgress","cancelButton","ChatBackground","selectedId","loadBackgroundContent","backgrounds","loadBackgroundsContent","wallpapers","ThemePicker","getColor","handleAccentChange","getColorString","red","orange","amber","green","indigo","deepPurple","palette","FormControl","component","FormLabel","focused","RadioGroup","FormControlLabel","control","withTheme","General","handleAppearance","themePickerRef","for_dark_theme","openChatBackground","closeChatBackground","Colorize","Language","languages","language_packs","inputProps","native_name","handleMuteFor","property","settings","mute_for","newSettings","handleShowPreview","show_preview","handleContactJoined","contactJoined","contactJoinedOption","privateChatsSettings","groupChatsSettings","channelChatsSettings","setScopeNotificationSettings","setContactJoinedOption","oldSettings","oldMuteFor","oldShowPreview","notification_settings","isEnabled","showPreview","Session","session","is_current","handleTerminate","onTerminate","application_name","application_version","device_model","platform","system_version","ip","region","country","last_active_date","showDate","Stop","ActiveSessions","openAll","handleTerminateAllOther","handleCloseConfirmation","handleDoneConfirmation","sessions","session_id","handleCloseAllConfirmation","handleDoneAllConfirmation","other","primaryTypographyProps","BlockedUser","memo","onUnblock","useState","setContextMenu","setTop","setLeft","useTranslation","Unblock","BlockedUsers","handleUnblock","PrivacySecurity","openBlockedUsers","openActiveSessions","user_full_info","is_blocked","closeActiveSessions","closeBlockedUsers","sessionsCount","usersCount","RemoveMember","Device","Settings","openEditProfile","closeEditProfile","openGeneral","closeGeneral","openNotifications","closeNotifications","openPrivacySecurity","closePrivacySecurity","openLanguage","closeLanguage","openFilters","closeFilters","handleCloseSettings","setFullInfo","UserListItem","Contacts","handleDebounceScroll","handleThrottleScroll","loadRenderIdsContent","currentItems","userIds","getUserFullName","localeCompare","UpdatePanel","onClientUpdateNewContentAvailable","newContentAvailable","handleUpdate","location","reload","Download","NewChannel","defaultPhoto","defaultPhotoFile","descriptionRef","is_channel","defaultPhotoURL","file_type","priority","THUMBNAIL_PRIORITY","UserChip","getUserShortName","AddParticipants","newArray","selectedItems","array","newMap","newFocusedItem","selectedItemsMap","publicItems","publicChats","getUserIds","NewGroupParams","getTitle","onChoosePhoto","itemsCaption","NewGroup","openParams","addParticipantsRef","newGroupParamsRef","handleCloseParams","SidebarDialog","onClientUpdateSearchChat","searchChatId","handleDialogEnter","header","headerRef","onClientUpdateSettings","openSettings","meChatId","onClientUpdateContacts","openContacts","onClientUpdateNewGroup","openNewGroup","onClientUpdateNewChannel","openNewChannel","visible","paper","onEnter","getArchiveTitle","archive","chatsOrder","defaultTimeout","enter","enteringScreen","exit","leavingScreen","Dialogs","handleSaveCache","prevShowArchive","mainCurrent","dialogListRef","archiveCurrent","archiveListRef","archiveList","listCurrent","onClientUpdateArchive","onClientUpdateThemeChange","dialogsHeaderRef","handleCloseArchive","handleCloseContacts","handleCloseNewGroup","handleCloseNewChannel","mainItems","archiveItems","loadCache","mainChats","mainCacheItems","archiveCacheItems","CSSTransition","ChatInfoDialog","onClientUpdateMediaViewerContent","mediaViewerContent","onClientUpdateDialogChatId","AttachButton","handleMenuClick","handleAttachPhoto","onAttachPhoto","ANIMATION_DURATION_300MS","handleAttachDocument","onAttachDocument","handleAttachPoll","onAttachPoll","Attach","canSendMediaMessages","canSendPolls","focusNode","node","toEnd","lastNode","utils","special","navigational","isSpecial","isNavigational","CreatePollOption","getText","optionTextRef","dataset","maxLength","remainLength","hasSelection","toString","onFocusNext","isCollapsed","anchorNode","anchorOffset","onFocusPrev","lastChild","selectionString","pasteText","POLL_OPTION_MAX_LENGTH","is_chosen","data-length","POLL_OPTION_LENGTH","data-max-length","POLL_OPTION_HINT_LENGTH","align","CreatePollDialog","handleClientUpdateNewPoll","poll","PollStore","confirm","POLL_QUESTION_MAX_LENGTH","handleClientUpdatePollQuestion","questionRef","handleClientUpdatePoll","handleClientUpdateNewPollOption","optionsRefMap","handleFocusNextOption","question","handleAddOption","POLL_OPTIONS_MAX_COUNT","handleDeleteOption","backspace","handleDeleteByBackspace","prevIndex","deleteOption","prevNode","handleFocusPrevOption","nextIndex","nextNode","getHint","addCount","hasPollData","handleConfirmationDone","onSend","inputMessagePoll","getInputMessagePoll","handleConfirmationClose","handleChangeAnonymous","handleChangeAllowMultipleAnswers","handleChangeType","handleAllowMultipleAnswersClick","is_anonymous","allowMultipleAnswers","allow_multiple_answers","allowMultipleAnswersDisabled","quizPoll","canAddOption","flexGrow","POLL_QUESTION_LENGTH","POLL_QUESTION_HINT_LENGTH","Divider","disableTypography","FormGroup","background","isValidPoll","EditUrlDialog","handleTextKeyDown","urlInputRef","handleUrlKeyDown","handleTextChange","handleUrlChange","defaultText","defaultUrl","textError","textInputRef","validateUrl","urlError","onCancel","textRef","urlRef","prevOpen","display","flexDirection","autoComplete","ReplyTile","Reply","onGetMessageResult","isDeletedMessage","getReplyPhotoSize","getReplyMinithumbnail","InputBoxHeader","editMessageId","editMessage","replyMessage","PasteFilesDialog","onConfirm","RecordTimer","onClientUpdateRecordStart","timer","setInterval","diff","onClientUpdateRecordStop","onClientUpdateRecordError","normalizeM","msStr","normalizeS","msToTime","s","ms","secs","mins","hrs","EditMediaDialog","handleSelectionChange","captionRef","saveSelection","handleEnter","newItem","setFormattedText","editFile","editMedia","sendAsPhoto","getEntities","editMessageAction","performer","repeat","handleBold","handleItalic","handleMono","handleUrl","handleClear","handleUnderline","handleStrikeThrough","openEditUrlDialog","startContainer","endContainer","parentElement","nodeName","href","openEditUrl","closeEditUrlDialog","restoreSelection","clearInnerHtml","handleCancelEditUrl","handleDoneEditUrl","parentNode","textContent","setEnd","handleEditMedia","editMediaRef","handleEditMediaComplete","getMediaPhotoFromFile","handleSendAsPhoto","nodes","getNodes","rangeCount","getRangeAt","isEditing","isPhoto","doneLabel","lastAction","setTyping","setSeconds","getSeconds","TYPING_OUTPUT_INTERVAL_S","lastTypingDate","EmojiPickerButton","InputBox","selectionChangeListener","newMessageRef","onClientUpdateInputShake","onClientUpdateSendFiles","handleSendFiles","is_permanent","onClientUpdateEditMessage","recordingTime","saveDraftAndSelection","restoreDraftAndSelection","openEditMedia","isEditedMedia","setEditMessage","onClientUpdateFocusWindow","saveDraft","onUpdateChatDraftMessage","loadDraft","onClientUpdateAnimationSend","thumbnailWidth","thumbnailHeight","sendMessage","onClientUpdateStickerSend","onClientUpdateReply","replyToMessageId","setInputFocus","beforeEditText","getChatDraftReplyToMessageId","handleCancelRecord","setDraft","setChatDraftMessage","chatDraftMessage","draftMessage","draft_message","getDraftMessage","input_message_text","draftEquals","handleSubmit","startRecord","recordingReady","VOICENOTE_MIN_RECORD_DURATION","handleStopRecord","handleRecord","inputContent","editedMessage","editMessageText","editMessageCaption","handleAttachPhotoComplete","newFile","getNewItem","handleSendPhoto","attachDocumentRef","handleAttachDocumentComplete","handleSendDocument","charCode","cachedMessage","handleSendingMessage","uploadFile","handleSendPoll","handleSendAudio","handleSendVoiceNote","originalEvent","kind","getAsFile","handlePasteConfirm","handlePasteCancel","handleUpdateDraftConfirm","newDraft","handleUpdateDraftCancel","setBlob","updatePhotoBlob","clearDraft","invokeScheduledAction","alert","handleEmojiSelect","native","setHints","setRecordingReadyState","lastTextNode","handleCancelEditMedia","closeEditMediaDialog","editMessageMedia","editContent","sendPhoto","iSize","handleSendMedia","cancelled","recorder","stream","getAudioTracks","mediaDevices","getUserMedia","recordPermissionDenied","constraints","channelCount","sampleRate","applyConstraints","mimeType","audioBitsPerSecond","workerOptions","encoderWorkerFactory","Worker","process","OggOpusEncoderWasmPath","MediaRecorder","chunks","ondataavailable","onstart","onstop","Blob","audioURL","Audio","trunc","waveform","handleClosePermission","sendFile","AnimationStore","StickerStore","sendAsFile","getMediaDocumentFromFile","performance","match","emojiRegex","exec","timestamp","stickers","cancel","isMediaEditing","isTextMessage","Microphone","Send","FooterCommand","onCommand","Footer","hasBasicGroupId","hasSupergroupId","handleJoin","handleDeleteAndExit","remove_from_chat_list","status","is_member","permissions","can_send_messages","handleButtonClick","handleChatInfo","openChatDetails","handleClearHistory","handleUnpin","canClearHistory","unpinMessage","canUnpinMessage","Broom","HeaderChatSubtitle","onUpdateChatOnlineMemberCount","onUpdateUserChatAction","getChatSubtitle","isAccentSubtitle","isAccentChatSubtitle","HeaderChat","HeaderCommand","canBeDeleted","canBeForwarded","PinnedMessage","onClientUpdateUnpin","onClientUpdateDialogsReady","onClientUpdateSetChatClientData","clientData","onUpdateChatPinnedMessage","pinned_message_id","deletedMessage","canPinMessages","getClientData","Object","assign","unpinned_message_id","prevPropsChatId","Header","connectionState","getConnectionState","onClientUpdateMessageSelected","selectionCount","onUpdateConnectionState","handleSearchChat","localize","str","showProgressAnimation","HeaderProgress","VolumeButton","prevValue","buttonOver","popupOver","onClientUpdateMediaVolume","handlePopoverOpen","handlePopoverClose","handleMouseEnter","openPopover","handleMouseLeave","handlePopupMouseLeave","handleVoiceClick","nextValue","PLAYER_VOLUME_NORMAL","handleDragStart","handleDragEnd","visibility","onDragStart","onDragEnd","orientation","RepeatButton","onClientUpdateMediaRepeat","handleRepeat","nextRepeat","RepeatEnum","NONE","REPEAT","REPEAT_ONE","getIcon","ShuffleButton","onClientUpdateMediaShuffle","shuffle","handleShuffle","PlaybackRateButton","onClientUpdateMediaPlaybackRate","onClientUpdateMediaAudioPlaybackRate","audioPlaybackRate","nextRate","PLAYER_PLAYBACKRATE_NORMAL","PLAYER_PLAYBACKRATE_FAST","Time","onClientUpdateMediaTime","reverse","currentTimeString","handleReverse","Playlist","scrollToActive","playlist","block","playlistItemEquals","itemRefMap","ReactDOM","onClientUpdateMediaTitleMouseOver","over","playlistMouseOver","tryOpen","tryClose","onClientUpdateMediaActive","onClientUpdateMediaPlaylistLoading","isCurrentSource","onClientUpdateMediaPlaylist","openTimeout","titleMouseOver","getPageBlock","instantView","openInstantViewMedia","iv","getMediaFunc","ivCache","urlCache","openInstantView","force_full","loadInstantViewContent","setInstantViewContent","newWindow","opener","HeaderPlayer","handleSeekForward","videoRef","handleSeekBackward","handleSeekTo","seekTime","fadeOutVolume","pausedForRecord","fadeInVolume","useAudioPlaybackRate","onClientUpdateMediaSeek","currentValue","playingMediaViewer","onClientUpdateMediaViewerEnded","onClientUpdateMediaViewerPause","onClientUpdateMediaViewerPlay","startPlayingFile","prevSrc","getMediaSrc","getMediaMimeType","playing","srcSource","onClientUpdateMediaBlob","startPlaying","supportsStreaming","onClientUpdateMediaClose","handlePrev","handleNext","moveNext","handleVideoEnded","hasVoice","muted","videoWidth","videoHeight","captureStream","mozCaptureStream","handleVideoPlay","handleVideoPause","hasPrev","hasNext","handleTitleMouseEnter","handleTitleMouseLeave","handleTitleClick","openMediaInstantView","getMessageAudio","addMediaSessionHandlers","removeMediaSessionHandlers","mediaSession","setActionHandler","currentVolume","volumeInterval","clearInterval","useAudioRate","getMediaTitle","showPlaybackRate","getDateHint","getDate","showRepeat","showShuffle","autoPlay","disablePictureInPicture","onLoadedMetadata","onCanPlay","onTimeUpdate","onProgress","PlayArrow","ActionBar","onUpdateChatActionBar","handleReportSpam","reason","handleReportUnrelatedLocation","handleSharePhoneNumber","handleAddContact","phone_number","contact","vcard","share_phone_number","handleBlockUser","action_bar","points","MessageMenu","confirmStopPoll","handleConfirmStopPoll","handleCloseConfirm","handleStopPoll","stopPoll","handleUnvote","cancelPollAnswer","copyLink","handleCopyPublicMessageLink","httpUrl","handleReply","isMessagePinned","disableNotification","disable_notification","pinMessage","handleEdit","selectMessage","handleDownload","saveBlob","canBeUnvoted","canMessageBeUnvoted","canBeClosed","canMessageBeClosed","canBeReplied","canBePinned","canMessageBeForwarded","canMessageBeDeleted","canBeEdited","canMessageBeEdited","recording","canBeSelected","hasSelectedMessage","canCopyLink","canCopyPublicMessageLink","isPublicSupergroup","FrameCheck","Copy","RemoveCheck","Meta","onUpdateMessageEdited","editDate","edit_date","onUpdateMessageViews","views","isOutgoing","onDateClick","dateStr","dateHintStr","viewsStr","getViews","AlbumItem","getAlbumItem","Photo","Video","inlineMeta","getWebPage","Document","onClientUpdateClearSelection","highlighted","tagName","handleSelection","DayMeta","onClientUpdateLanguage","setMonth","getMonth","Forward","arrowRef","handleArrowRef","openForward","forwardInfo","origin","getForwardTitle","isForwardOriginHidden","MessageGroupedLayoutAttempt","lineCounts","heights","GroupedMessagePosition","minX","maxX","minY","maxY","w","h","flags","spanSize","getInfo","siblingHeights","leftSpanOffset","GroupedMessages","posArray","positions","maxSizeWidth","hasSibling","scale","multiHeight","end","sum","calculate","desiredWidth","totalWidth","totalHeight","paddingsWidth","maxSizeHeight","averageAspectRatio","proportions","forceCalc","getWidthHeight","isLast","maxAspectRation","firstLine","secondLine","thirdLine","fourthLine","croppedRatios","attempts","optimal","optimalDiff","maxHeight","attempt","minLineHeight","MAX_VALUE","c","lineHeight","spanLeft","posToFix","ratio","pos","position1","position2","POSITION_FLAG_LEFT","POSITION_FLAG_RIGHT","secondWidth","firstWidth","position3","thirdHeight","secondHeight","rightWidth","leftWidth","firstHeight","position4","h0","w0","w2","w1","h1","h2","side","byMinSize","lastSide","lastSize","currentSide","EmptyTile","Album","oldEmojiMatches","emojiMatches","grouped","albumHistoryEquals","prevMessageIds","showTail","showUnreadSeparator","forward_info","m","hasCaption","meta","handleDateClick","showForward","showMessageForward","showReply","suppressTitle","hasTitle","isChannel","isPrivate","handleSelectUser","handleSelectChat","withBubble","tailRounded","onMouseOver","onMouseOut","handleMouseOut","onAnimationEnd","handleAnimationEnd","handleReplyClick","PHOTO_DISPLAY_SIZE","showData","FilesDropTarget","onClientUpdateDragging","dragParams","handleDragEnter","handleDrop","dataTransfer","handleDragLeave","onDragEnter","onDragLeave","onDrop","StubMessage","WebPage","displaySmallSize","displayExtraSmallSize","site_name","Sticker","MESSAGE","VoiceNote","VideoNote","Animation","stretch","smallPhoto","extraSmallPhoto","float","marginLeft","handleInstantViewClick","instant_view_version","getTwitterInstagramEntities","e1","webPageContent","webPageMediaTop","webPageMediaBottom","webPageInstantView","outlinedPrimary","SvgIcon","PHOTO_DISPLAY_SMALL_SIZE","PHOTO_DISPLAY_EXTRA_SMALL_SIZE","Message","onClientUpdateMessageShake","onClientUpdateMessageHighlighted","getEmojiMatches","mouseDown","mouseOut","openReply","isMetaBubble","getMessageStyle","withRef","chatPhotoStyle","borderRadius","ServiceMessage","getServiceMessageContent","Placeholder","cacheLoaded","dialogsReady","ScrollDownButton","StickersHint","onClientUpdateRemoteStickersHint","currentHint","getItems","loadStickersContent","onClientUpdateLocalStickersHint","previewStickerId","cancelSend","loadPreviewContent","stickerId","loadStickerContent","stickersPerRow","hintsRef","STICKER_HINT_DISPLAY_SIZE","getNeighborStickers","indexes","row","column","prevRow","nextRow","prevColumn","nextColumn","ceil","getSticker","mouseDownStickerId","dict","foundStickers","stickerIndex","data-sticker-id","STICKER_SMALL_DISPLAY_SIZE","preview","HINTS","DocumentAlbum","lastSelected","ScrollBehaviorEnum","freeze","SCROLL_TO_BOTTOM","SCROLL_TO_UNREAD","SCROLL_TO_MESSAGE","SCROLL_TO_POSITION","KEEP_SCROLL_POSITION","MessagesList","onClientUpdateTryEditMessage","hasLastMessage","history","defferedActions","onClientUpdateOpenReply","replyHistory","playerOpened","onClientUpdateMediaEnding","udpate","onClientUpdateMediaEnd","onClientUpdateSelection","selectionActive","onUpdateMessageSendSucceeded","scrollBehavior","replaceMessage","handleScrollBehavior","updateItemsInView","newState","scrollDownVisible","scrollBehaviorNone","insertPrevious","filterMessages","deleteHistory","itemsInView","messageWrapper","loadIncompleteHistory","MAX_ITERATIONS","incomplete","MESSAGE_SLICE_LIMIT","loadMigratedHistory","onLoadMigratedHistory","insertNext","currentHistory","supergroupId","basicGroupChat","prevHistory","scrollToBottom","scrollToMessage","scrollToUnread","scrollToPosition","keepScrollPosition","scrolled","itemComponent","itemsMap","scrollToStart","separatorMessageId","handleListDragEnter","handleScrollDownClick","lastReply","pop","scrollDownButtonRef","historyEquals","previousChat","scrollPosition","last_read_inbox_message_id","highlightMessage","loadDraftContent","getChatMedia","scrollMessage","getScrollMessage","viewAction","hasFocus","cancelLoadMessageContents","getMessagePhoto","cancelGetRemoteFile","getMessageSticker","oldMessageId","showMessageTitle","prevMessage","isFirst","isFirstUnread","isServiceMessage","MESSAGE_SPLIT_MAX_TIME_S","showMessageDate","prevDate","getFullYear","media_album_id","albumAdded","album","ALBUM_MESSAGES_LIMIT","nextMessage","isNextFirstUnread","nextShowTitle","ShareStickerSetButton","getStickersLink","stickerSet","handleShare","disableEnforceFocus","StickerSetDialog","handleUpdateInstalledStickerSets","handleClientUpdateStickerSet","loadStickerSetContent","is_installed","set_id","contentRef","hasScroll","scrollBottom","handleInViewport","elementRect","contentRect","getBoundingClientRect","bottom","STICKER_SET","inViewportFunc","DialogDetails","onClientUpdateDocumentBlob","thumbnailTime","onClientUpdateChatBackground","onClientUpdateChatDetailsVisibility","messagesList","selectedCount","wallpaperSrc","articleRefs","Article","forwardedRef","page_blocks","is_rtl","blocks","dir","withIV","MediaCaption","InstantViewMediaViewerContent","onClientUpdatePictureInPicture","getViewerFile","onClientUpdateMediaThumbnailBlob","prevMedia","getViewerThumbnail","getViewerMinithumbnail","mime_type","speed","isPlaying","thumbnailSrc","MEDIA_VIEWER_VIDEO_MAX_SIZE","getThumb","poster","handleContentClick","isEmptyText","credit","Caption","MediaViewerButton","grow","MediaViewerFooterText","MediaViewerFooterButton","MediaViewerDownloadButton","onUpdateFile","is_downloading_completed","checkFileLoaded","saveDisabled","prevPropsFileId","getLocalFile","propsDisabled","InstantViewMediaViewer","getBlockMedia","handlePrevious","hasPreviousMedia","loadMedia","hasNextMedia","preloadIVMediaViewerContent","setInstantViewViewerContent","cancelPreloadIVMediaViewerContent","getInputMediaContent","handleSave","saveMedia","handleWrapperMouseDown","mouseDownTarget","handleWrapperClick","getValidBlocks","isValidMediaBlock","getBlockCaption","getBlockUrl","maxCount","InstantViewer","onClientUpdateInstantViewViewerContent","onClientUpdateInstantViewUrl","InstantViewStore","getCurrent","oldUrl","hash","scrollToHash","handleBack","instantViewerRef","articleRef","prevInstantView","mounted","scrollToBlock","findDOMNode","scrollToElement","details","finished","currentElement","getInnerBlocks","IVContext","Provider","IV_PHOTO_SIZE","MediaInfo","getSenderUserId","dateHint","tileControl","MediaViewerContent","getMediaFile","isVideoMessage","getMediaThumbnail","loadNextBuffer","getMediaMinithumbnail","isEmbed","isEmbedMessage","isVideo","isAnimation","isAnimationMessage","embed_url","frameBorder","allowFullScreen","scrolling","MediaViewer","currentMessageId","totalCount","loadMediaViewerContent","isMediaContent","firstSliceLoaded","inserted","oldHistory","filterMap","moveToNextMedia","accumulator","currentId","deletedCount","setMediaViewerContent","loadHistory","MEDIA_SLICE_LIMIT","preloadMediaViewerContent","cancelPreloadMediaViewerContent","handleDialogOpen","loadPrevious","loadNext","nextId","deleteConfirmationOpened","handleDialogClose","deleteForAll","revoke","handleChangeDeleteForAll","handleInvertColors","nextBackground","hasPrevousMedia","deleteConfirmationContent","deleteConfirmation","PHOTO_BIG_SIZE","ProfileMediaViewerContent","onClientUpdateUserBlob","handlePhotoClick","onPrevious","PROFILE_PHOTO_BIG_SIZE","getBlobUrl","ProfileMediaInfo","ProfileMediaViewer","photos","preloadProfileMediaViewerContent","getProfilePhoto","saveOrDownload","updateChatPhotoBlob","inputFile","chatPhoto","profile_photo_id","obj","prevFileId","currentFileId","inHistory","profilePhoto","profilePhotoBig","userProfilePhoto","getProfilePhotoDateHint","ClearHistoryDialog","handleRevokeChange","canBeDeletedForAllUsers","DeleteMessagesDialog","LeaveChatDialog","getDeleteDialogText","NotificationTimer","handleTimer","seconds","expire","timerId","onTimeout","setMilliseconds","getMilliseconds","toFixed","CircularProgress","Actions","onClientUpdateDeleteMessages","handleClearHistoryContinue","request","handleLeaveContinue","getLeaveChatNotification","isChatMember","isCreator","handleDeleteMessagesContinue","clientUpdateType","persist","MainPage","onClientUpdateInstantViewContent","instantViewContent","onClientUpdateOpenChat","onClientUpdateOpenUser","isChatDetailsVisible","onClientUpdateProfileMediaViewerContent","profileMediaViewerContent","onClientUpdateForward","currentDialogChatId","dialogDetailsRef","withLanguage"],"mappings":"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","file":"static/js/3.94dfdd33.chunk.js","sourcesContent":["/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nclass Animator {\n    constructor(duration, options = []) {\n        this.options = options;\n        this.duration = duration;\n    }\n\n    static outSine(n) {\n        return Math.sin((n * Math.PI) / 2);\n    }\n\n    start = () => {\n        this.stopped = false;\n        this.id = requestAnimationFrame(this.startInternal);\n    };\n\n    startInternal = timeStamp => {\n        const { startTime, duration } = this;\n\n        this.startTime = timeStamp;\n        this.endTime = startTime + duration;\n        this.draw(timeStamp);\n    };\n\n    draw = now => {\n        const { stopped, duration, startTime, options } = this;\n\n        if (now - startTime > duration && options.every(x => x.to === x.last)) {\n            this.stopped = true;\n        }\n\n        if (stopped) return;\n\n        const time = Math.min(now - startTime, duration);\n        const p = duration === 0 ? 1.0 : time / duration;\n        const val = Animator.outSine(p);\n\n        options.forEach(x => {\n            const { from, to, func } = x;\n            x.last = from + (to - from) * val;\n            func(x.last);\n        });\n\n        this.id = requestAnimationFrame(this.draw);\n    };\n\n    stop = () => {\n        this.stopped = true;\n        cancelAnimationFrame(this.id);\n    };\n}\n\nexport default Animator;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Sticker, { StickerSourceEnum } from '../Message/Media/Sticker';\nimport { STICKER_PREVIEW_DISPLAY_SIZE } from '../../Constants';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './StickerPreview.css';\n\nclass StickerPreview extends React.Component {\n    state = {\n        emoji: null,\n        prevPropsSticker: null\n    };\n\n    static getDerivedStateFromProps(props, state) {\n        const { sticker } = props;\n        const { prevPropsSticker } = state;\n\n        if (sticker && prevPropsSticker) {\n            return {\n                prevPropsSticker: sticker,\n                emoji: null\n            };\n        }\n\n        return null;\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { sticker } = this.props;\n\n        if (sticker && sticker !== prevProps.sticker) {\n            this.loadStickerEmojis(sticker);\n        }\n    }\n\n    componentDidMount() {\n        const { sticker } = this.props;\n\n        if (sticker) {\n            this.loadStickerEmojis(sticker);\n        }\n    }\n\n    loadStickerEmojis = sticker => {\n        const { sticker: file } = sticker;\n        const { id } = file;\n\n        TdLibController.send({\n            '@type': 'getStickerEmojis',\n            sticker: { '@type': 'inputFileId', id }\n        }).then(result => {\n            if (this.props.sticker === sticker) {\n                this.setState({\n                    emoji: result.emojis.join(' ')\n                });\n            }\n        });\n    };\n\n    render() {\n        const { sticker } = this.props;\n        const { emoji } = this.state;\n\n        if (!sticker) return null;\n\n        return (\n            <div className='sticker-preview'>\n                <div className='sticker-preview-emoji'>{emoji}</div>\n                <Sticker\n                    sticker={sticker}\n                    displaySize={STICKER_PREVIEW_DISPLAY_SIZE}\n                    source={StickerSourceEnum.PREVIEW}\n                />\n            </div>\n        );\n    }\n}\n\nStickerPreview.propTypes = {\n    sticker: PropTypes.object\n};\n\nexport default StickerPreview;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M12,1 C18.0751322,1 23,5.92486775 23,12 C23,18.0751322 18.0751322,23 12,23 C5.92486775,23 1,18.0751322 1,12 C1,5.92486775 5.92486775,1 12,1 Z M12,3 C7.02943725,3 3,7.02943725 3,12 C3,16.9705627 7.02943725,21 12,21 C16.9705627,21 21,16.9705627 21,12 C21,7.02943725 16.9705627,3 12,3 Z M6.66607426,13.6501686 C7.13342047,13.4117012 7.7055954,13.5972442 7.94406273,14.0645904 C8.71613228,15.5776856 10.2710663,16.5499921 12,16.5499921 C13.7262991,16.5499921 15.2792455,15.5806677 16.0525854,14.0711462 C16.2918118,13.6041881 16.8642875,13.419575 17.3312456,13.6588014 C17.7982037,13.8980278 17.9828168,14.4705034 17.7435904,14.9374615 C16.6482438,17.0755242 14.4462205,18.4499921 12,18.4499921 C9.55003677,18.4499921 7.34521255,17.0713067 6.2516524,14.928157 C6.01318507,14.4608108 6.19872805,13.8886359 6.66607426,13.6501686 Z M8.75,8 C9.44035594,8 10,8.67157288 10,9.5 C10,10.3284271 9.44035594,11 8.75,11 C8.05964406,11 7.5,10.3284271 7.5,9.5 C7.5,8.67157288 8.05964406,8 8.75,8 Z M15.25,8 C15.9403559,8 16.5,8.67157288 16.5,9.5 C16.5,10.3284271 15.9403559,11 15.25,11 C14.5596441,11 14,10.3284271 14,9.5 C14,8.67157288 14.5596441,8 15.25,8 Z' />,\n    'Smile'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { SnackbarProvider } from 'notistack';\nimport { getDisplayName } from './Utils/HOC';\nimport { MAX_SNACK } from './Constants';\n\nfunction withSnackbarNotifications(WrappedComponent) {\n    class NotificationsWrapper extends React.Component {\n        render() {\n            return (\n                <SnackbarProvider maxSnack={MAX_SNACK}>\n                    <WrappedComponent {...this.props} />\n                </SnackbarProvider>\n            );\n        }\n    }\n    NotificationsWrapper.displayName = `WithSnackbarNotifications(${getDisplayName(WrappedComponent)})`;\n\n    return NotificationsWrapper;\n}\n\nexport default withSnackbarNotifications;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport Slider from '@material-ui/core/Slider';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport PauseIcon from '../../Assets/Icons/Pause';\nimport PlayIcon from '../../Assets/Icons/PlayArrow';\nimport FullScreen from '../../Assets/Icons/FullScreen';\nimport Hint from './Hint';\nimport Player from './Player';\nimport Progress from './Progress';\nimport { clamp, getDurationString } from '../../Utils/Common';\nimport KeyboardManager, { KeyboardHandler } from '../Additional/KeyboardManager';\nimport {\n    PIP_PLAYER_BORDER_PRECISION, PLAYER_PLAYBACKRATE_MAX,\n    PLAYER_PLAYBACKRATE_MIN,\n    PLAYER_PLAYBACKRATE_STEP,\n    PLAYER_SEEK_STEP_BIG,\n    PLAYER_SEEK_STEP_SMALL,\n    PLAYER_VOLUME_MAX,\n    PLAYER_VOLUME_MIN,\n    PLAYER_VOLUME_STEP\n} from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './PipPlayer.css';\n\nclass PipPlayer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.keyboardHandler = new KeyboardHandler(this.onKeyDown);\n        this.state = { };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { video, duration, currentTime, volume, play, buffered, waiting } = props;\n        if (state.prevVideo !== video) {\n            return {\n                prevVideo: video,\n                duration,\n                currentTime,\n                volume,\n                play,\n                buffered,\n                waiting,\n                dragging: false,\n                hidden: false,\n                fullscreen: false\n            }\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        const { video } = this.props;\n        this.connectPlayer(video);\n        window.addEventListener('resize', this.onWindowResize);\n        document.addEventListener('fullscreenchange', this.onFullScreenChange);\n        PlayerStore.on('clientUpdateMediaShortcut', this.onClientUpdateMediaShortcut);\n    }\n\n    componentWillUnmount() {\n        const { video } = this.props;\n        this.disconnectPlayer(video);\n        window.removeEventListener('resize', this.onWindowResize);\n        document.removeEventListener('fullscreenchange', this.onFullScreenChange);\n        PlayerStore.off('clientUpdateMediaShortcut', this.onClientUpdateMediaShortcut);\n\n        KeyboardManager.remove(this.keyboardHandler);\n    }\n\n    onClientUpdateMediaShortcut = update => {\n        const { event } = update;\n        if (!event) return;\n\n        this.onKeyDown(event);\n    };\n\n    onKeyDown = event => {\n        const { key, code, altKey, ctrlKey, metaKey, shiftKey } = event;\n\n        const { video } = this.props;\n        if (!video) return;\n\n        let handled = false;\n        switch (code) {\n            case 'Escape': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    this.handleClose();\n                    handled = true;\n                }\n                break;\n            }\n            case 'ArrowLeft': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    this.handleSeek(video.currentTime - PLAYER_SEEK_STEP_SMALL);\n                    handled = true;\n                }\n                break;\n            }\n            case 'KeyJ': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    this.handleSeek(video.currentTime - PLAYER_SEEK_STEP_BIG);\n                    handled = true;\n                }\n                break;\n            }\n            case 'ArrowRight': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    this.handleSeek(video.currentTime + PLAYER_SEEK_STEP_SMALL);\n                    handled = true;\n                }\n                break;\n            }\n            case 'KeyL': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    this.handleSeek(video.currentTime + PLAYER_SEEK_STEP_BIG);\n                    handled = true;\n                }\n                break;\n            }\n            case 'ArrowUp': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    this.handleVolume(video.volume + PLAYER_VOLUME_STEP);\n                    handled = true;\n                }\n                break;\n            }\n            case 'ArrowDown': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    this.handleVolume(video.volume - PLAYER_VOLUME_STEP);\n                    handled = true;\n                }\n                break;\n            }\n            case 'Space':\n            case 'KeyK': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    this.handleClick();\n                    handled = true;\n                }\n                break;\n            }\n            case 'KeyM': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    this.handleMute();\n                    handled = true;\n                }\n                break;\n            }\n            case 'KeyF': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    this.handleFullScreen();\n                    handled = true;\n                }\n                break;\n            }\n            case 'KeyI': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    // this.handlePictureInPicture();\n                    handled = true;\n                }\n                break;\n            }\n            case 'Digit0':\n            case 'Digit1':\n            case 'Digit2':\n            case 'Digit3':\n            case 'Digit4':\n            case 'Digit5':\n            case 'Digit6':\n            case 'Digit7':\n            case 'Digit8':\n            case 'Digit9': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    const progress = new Number(key.replace('Digit', '')) / 10.0;\n                    this.handleSeekProgress(progress);\n                    handled = true;\n                }\n                break;\n            }\n            case 'Home': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    this.handleSeek(0);\n                    handled = true;\n                }\n                break;\n            }\n            case 'End': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    this.handleSeek(video.duration - 1.0);\n                    handled = true;\n                }\n                break;\n            }\n            case 'Comma': {\n                if (!altKey && !ctrlKey && !metaKey && shiftKey) {\n                    this.handlePlaybackRate(video.playbackRate - PLAYER_PLAYBACKRATE_STEP);\n                    handled = true;\n                }\n                break;\n            }\n            case 'Period': {\n                if (!altKey && !ctrlKey && !metaKey && shiftKey) {\n                    this.handlePlaybackRate(video.playbackRate + PLAYER_PLAYBACKRATE_STEP);\n                    handled = true;\n                }\n                break;\n            }\n        }\n\n        if (handled) {\n            event.stopPropagation();\n            event.preventDefault();\n        }\n    };\n\n    showMediaHint(text) {\n        const { fileId } = this.props;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaHint',\n            fileId,\n            text\n        });\n    }\n\n    handleVolume = volume => {\n        const { video } = this.props;\n        if (!video) return;\n\n        volume = clamp(volume, PLAYER_VOLUME_MIN, PLAYER_VOLUME_MAX);\n\n        video.volume = volume;\n        this.showMediaHint(`${Math.round(video.volume * 100)}%`);\n    };\n\n    handlePlaybackRate = rate => {\n        const { video } = this.props;\n        if (!video) return;\n\n        rate = clamp(rate, PLAYER_PLAYBACKRATE_MIN, PLAYER_PLAYBACKRATE_MAX)\n\n        video.playbackRate = rate;\n        this.showMediaHint(`${rate}x`);\n    };\n\n    handleSeekProgress = progress => {\n        const { video } = this.props;\n        if (!video) return;\n\n        this.handleSeek(progress * video.duration);\n    };\n\n    handleSeek = currentTime => {\n        const { video } = this.props;\n        if (!video) return;\n\n        currentTime = clamp(currentTime, 0, video.duration || 0);\n\n        video.currentTime = currentTime;\n        this.setState({ currentTime });\n    };\n\n    onFullScreenChange = () => {\n        const fullscreenElement = document.fullscreenElement || document.mozFullScreenElement || document.webkitFullscreenElement;\n        const fullscreenPlayer = document.getElementById('pip-player-wrapper');\n        const fullscreen = fullscreenElement === fullscreenPlayer;\n\n        this.setState({\n            fullscreen\n        });\n    };\n\n    onWindowResize = () => {\n\n        const fullscreenElement = document.fullscreenElement || document.mozFullScreenElement || document.webkitFullscreenElement;\n        if (fullscreenElement) return;\n\n        const player = document.getElementById('pip-player');\n\n        const oldLeft = parseInt(player.style.left, 10);\n        const oldTop = parseInt(player.style.top, 10);\n\n        const { left, top } = this.normalizePosition(oldLeft, oldTop, true);\n\n        if (oldLeft === left && oldTop === top) return;\n\n        // console.log('[pip] windowResize', left, top);\n        player.style.left = left + 'px';\n        player.style.top = top + 'px';\n    };\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { video } = this.props;\n\n        if (prevProps.video !== video) {\n            this.disconnectPlayer(prevProps.video)\n            this.connectPlayer(video);\n        }\n    }\n\n    connectPlayer(video) {\n        if (!video) return;\n\n        const pipPlayer = document.getElementById('pip-player');\n        const { left, top } = this.normalizePosition(PlayerStore.pipParams.left, PlayerStore.pipParams.top, false);\n        pipPlayer.style.left = left + 'px';\n        pipPlayer.style.top = top + 'px';\n\n        const pipPlayerWrapper = document.getElementById('pip-player-wrapper');\n        pipPlayerWrapper.focus();\n\n        // console.log('[pip] connect', PlayerStore.pipParams, pipPlayer.style.left, pipPlayer.style.top);\n\n        const container = document.getElementById('pip-player-container');\n        if (!container) return;\n\n        video.onloadedmetadata = this.handleLoadedMetadata;\n        video.onloadeddata = this.handleLoadedData;\n        video.oncanplay = this.handleCanPlay;\n        video.onplay = this.handlePlay;\n        video.onpause = this.handlePause;\n        video.onended = this.handleEnded;\n        video.ontimeupdate = this.handleTimeUpdate;\n        video.onvolumechange = this.handleVolumeChange;\n        video.onprogress = this.handleProgress;\n        video.onwaiting = this.handleWaiting;\n\n        container.innerHTML = '';\n        container.appendChild(video);\n    }\n\n    disconnectPlayer(video) {\n        if (!video) return;\n\n        video.onloadedmetadata = null;\n        video.onloadeddata = null;\n        video.oncanplay = null;\n        video.onplay = null;\n        video.onpause = null;\n        video.onended = null;\n        video.ontimeupdate = null;\n        video.onvolumechange = null;\n        video.onprogress = null;\n        video.onwaiting = null;\n    }\n\n    handleLoadedData = event => {\n        const { target: video } = event;\n        if (!video) return;\n    };\n\n    handleLoadedMetadata = event => {\n        const { target: video } = event;\n        if (!video) return;\n\n        const { currentTime } = this.state;\n        const { duration, volume, buffered } = video;\n        // const currentTime = this.getCurrentTime();\n\n        this.setState({\n            duration,\n            // currentTime,\n            volume,\n            waiting: true,\n            buffered\n        }, () => {\n            if (!currentTime) return;\n\n            video.currentTime = currentTime;\n        });\n    };\n\n    handleCanPlay = event => {\n        const { target: video } = event;\n\n        this.setState({\n            waiting: false\n        }, () => {\n            if (!video) return;\n\n            const { play } = this.state;\n            if (play) {\n                video.play();\n            } else {\n                video.pause();\n            }\n        });\n    };\n\n    handlePlay = event => {\n        const { onPlay } = this.props;\n\n        this.setState({\n            play: true,\n            hidden: true\n        });\n\n        TdLibController.clientUpdate({ '@type': 'clientUpdateMediaViewerPlay' });\n        onPlay && onPlay(event);\n    };\n\n    handlePause = event => {\n        const { onPause } = this.props;\n\n        this.setState({\n            play: false,\n            hidden: false\n        });\n\n        TdLibController.clientUpdate({ '@type': 'clientUpdateMediaViewerPause' });\n        onPause && onPause(event);\n    };\n\n    handleEnded = event => {\n        const { onEnded } = this.props;\n\n        TdLibController.clientUpdate({ '@type': 'clientUpdateMediaViewerEnded' });\n        onEnded && onEnded(event);\n\n        const { video } = this.props;\n        this.setCurrentTime({currentTime: 0, duration: video.duration });\n    };\n\n    handleTimeUpdate = event => {\n        const { target: video } = event;\n        if (!video) return;\n\n        const { fileId } = this.props;\n        const { currentTime, duration, volume, buffered } = video;\n\n        this.setState({\n            duration,\n            currentTime,\n            volume,\n            buffered\n        });\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaViewerTimeUpdate',\n            fileId,\n            currentTime,\n            duration,\n            volume,\n            buffered\n        });\n\n        this.setCurrentTime({ currentTime, duration });\n    };\n\n    handleVolumeChange = event => {\n        const { onVolumeChange } = this.props;\n\n        const { target: video } = event;\n        if (!video) return;\n\n        const { volume } = video;\n\n        this.setState({\n            volume\n        });\n\n        TdLibController.clientUpdate({ '@type' : 'clientUpdateMediaVolume', volume });\n        onVolumeChange && onVolumeChange(event);\n    };\n\n    handleProgress = event => {\n        const { target: video } = event;\n        if (!video) return;\n\n        const { fileId } = this.props;\n\n        const { buffered } = video;\n\n        this.setState({\n            buffered\n        });\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaViewerProgress',\n            fileId,\n            buffered\n        });\n    };\n\n    handleWaiting = () => {\n        this.setState({ waiting: true });\n    };\n\n    handleClick = () => {\n        this.startStopPlayer();\n    };\n\n    startStopPlayer = () => {\n        const { video } = this.props;\n        if (!video) return;\n\n        const { waiting } = this.state;\n        if (waiting) {\n            this.setState({\n                play: !this.state.play,\n                hidden: false\n            });\n        } else {\n            if (video.paused) {\n                video.play()\n            } else {\n                video.pause();\n            }\n        }\n    };\n\n    handlePlayerMouseDown = event => {\n        const pip = document.getElementById('pip-player-wrapper');\n        if (pip) pip.focus();\n\n        this.mouseDownRoot = true;\n        event.preventDefault();\n\n        if (event.nativeEvent.which !== 1) return;\n\n        this.offsetX = event.nativeEvent.offsetX;\n        this.offsetY = event.nativeEvent.offsetY;\n\n        document.onmousemove = this.handleMouseMove;\n        document.onmouseup = this.handleMouseUp;\n\n        this.setState({\n            windowDragging: true\n        });\n    };\n\n    handleMouseUp = event => {\n        event.preventDefault();\n\n        document.onmousemove = null;\n        document.onmouseup = null;\n\n        this.setState({\n            windowDragging: false\n        });\n    };\n\n    normalizePosition(left, top, checkGlue = true) {\n        const player = document.getElementById('pip-player');\n        const playerWidth = player ? player.clientWidth : 300;\n        const playerHeight = player ? player.clientHeight : 300;\n\n        const { clientWidth: documentWidth } = document.documentElement;\n        const { clientHeight: documentHeight } = document.documentElement;\n\n        if (checkGlue && this.glueLeft) {\n            left = 0;\n        } else if (checkGlue && this.glueRight) {\n            left = documentWidth - playerWidth;\n        } else {\n            // left = clamp(left - PIP_PLAYER_BORDER_PRECISION, 0, left);\n            // left = clamp(left + PIP_PLAYER_BORDER_PRECISION, left, documentWidth - playerWidth);\n            left = left < PIP_PLAYER_BORDER_PRECISION ? 0 : left;\n            left = left > documentWidth - playerWidth - PIP_PLAYER_BORDER_PRECISION ? documentWidth - playerWidth : left;\n            left = clamp(left, 0, documentWidth - playerWidth);\n        }\n\n        if (checkGlue && this.glueTop) {\n            top = 0;\n        } else if (checkGlue && this.glueBottom) {\n            top = documentHeight - playerHeight;\n        } else {\n            top = top < PIP_PLAYER_BORDER_PRECISION ? 0 : top;\n            top = top > documentHeight - playerHeight - PIP_PLAYER_BORDER_PRECISION ? documentHeight - playerHeight : top;\n            top = clamp(top, 0, documentHeight - playerHeight);\n        }\n\n        this.glueLeft = left === 0;\n        this.glueRight = left === documentWidth - playerWidth;\n        this.glueTop = top === 0;\n        this.glueBottom = top === documentHeight - playerHeight;\n\n        PlayerStore.pipParams = { left, top };\n\n        return { left, top };\n    }\n\n    handleMouseMove = event => {\n        event.preventDefault();\n\n        const { left, top } = this.normalizePosition(event.clientX - this.offsetX, event.clientY - this.offsetY, false);\n\n        const player = document.getElementById('pip-player');\n        player.style.left = left + 'px';\n        player.style.top = top + 'px';\n    };\n\n    handleMouseDown = event => {\n        event.stopPropagation();\n\n        const { video } = this.props;\n        if (!video) return;\n\n        this.setState({\n            dragging: true,\n            draggingTime: video.currentTime\n        });\n    };\n\n    handleChange = (event, value) => {\n        const { video } = this.props;\n        if (!video) return;\n\n        this.setState({\n            draggingTime: value * video.duration\n        });\n    };\n\n    handleChangeCommitted = () => {\n        const { dragging, draggingTime } = this.state;\n        if (!dragging) return;\n\n        this.setState({\n            dragging: false,\n            currentTime: draggingTime,\n            draggingTime: 0\n        }, () => {\n            const { video } = this.props;\n            if (!video) return;\n\n            if (Number.isFinite(draggingTime)) {\n                video.currentTime = draggingTime;\n            }\n        });\n    };\n\n    handlePanelEnter = () => {\n        this.panelEnter = true;\n    };\n\n    handlePanelLeave = () => {\n        this.panelEnter = false;\n    };\n\n    handleMouseOver = event => {\n        this.mouseDownRoot = false;\n        const { hidden } = this.state;\n\n        if (hidden) {\n            this.setState({\n                hidden: false\n            });\n        }\n\n        clearTimeout(this.mouseOverTimeout);\n        this.mouseOverTimeout = setTimeout(() => {\n            if (this.panelEnter) return;\n            if (!this.state.play) return;\n            if (!this.state.duration) return;\n\n            this.setState({\n                hidden: true\n            });\n        }, 1000);\n    }\n\n    handleClose = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdatePictureInPicture',\n            videoInfo: null\n        });\n    };\n\n    handleVolumeSliderChange = (event, volume) => {\n        if (volume === this.state.volume) return;\n\n        this.setState({\n            volume\n        }, () => {\n            const { video } = this.props;\n            if (!video) return;\n\n            video.volume = volume;\n        });\n    };\n\n    handleVolumeSliderChangeCommitted = event => {\n        const { video } = this.props;\n        if (!video) return;\n\n        document.activeElement.blur();\n    };\n\n    handleMute = () => {\n        const { video } = this.props;\n        if (!video) return;\n\n        if (video.volume === 0) {\n            video.volume = this.prevVolume || 0.5;\n        } else {\n            this.prevVolume = video.volume;\n            video.volume = 0;\n        }\n    }\n\n    handleFullScreen = event => {\n        event && event.stopPropagation();\n\n        const root = document.getElementById('pip-player-wrapper');\n        if (!root) return;\n\n        const fullscreenElement = document.fullscreenElement || document.mozFullScreenElement || document.webkitFullscreenElement;\n        if (fullscreenElement) {\n            this.exitFullscreen();\n            return;\n        }\n\n        this.requestFullscreen(root);\n    };\n\n    requestFullscreen(element) {\n        const method = element.requestFullscreen || element.mozRequestFullScreen || element.webkitRequestFullscreen;\n\n        method && method.call(element);\n    }\n\n    exitFullscreen() {\n        const method = document.exitFullscreen || document.mozCancelFullScreen || document.webkitExitFullscreen;\n\n        method && method.call(document);\n    }\n\n    getCurrentTime = () => {\n        const { fileId } = this.props;\n\n        const file = FileStore.get(fileId);\n        if (!file) return;\n\n        const { remote } = file;\n        if (!remote) return;\n\n        const { unique_id } = remote;\n        if (!unique_id) return;\n\n        return PlayerStore.getCurrentTime(unique_id);\n    };\n\n    setCurrentTime = currentTime => {\n        const { fileId } = this.props;\n\n        const file = FileStore.get(fileId);\n        if (!file) return;\n\n        const { remote } = file;\n        if (!remote) return;\n\n        const { unique_id } = remote;\n        if (!unique_id) return;\n\n        if (!currentTime) {\n            PlayerStore.clearCurrentTime(unique_id);\n        } else {\n            PlayerStore.setCurrentTime(unique_id, currentTime);\n        }\n    };\n\n    handlePanelDoubleClick = event => {\n        event.preventDefault();\n        event.stopPropagation();\n    };\n\n    handleClickRoot = event => {\n        event.stopPropagation();\n\n        const { mouseDownRoot } = this;\n        if (!mouseDownRoot) return;\n\n        this.startStopPlayer();\n    }\n\n    handleDoubleClick = event => {\n        event.stopPropagation();\n\n        const { mouseDownRoot } = this;\n        if (!mouseDownRoot) return;\n\n        this.handleFullScreen(event);\n    };\n\n    handleFocus = () => {\n        KeyboardManager.add(this.keyboardHandler);\n\n    };\n\n    handleBlur = () => {\n        KeyboardManager.remove(this.keyboardHandler);\n    };\n\n    render() {\n        const { fileId } = this.props;\n        const { windowDragging, dragging, draggingTime, currentTime, duration, play, waiting, buffered, hidden, volume, fullscreen } = this.state;\n\n        const time = dragging ? draggingTime : currentTime;\n        const value = duration > 0 ? time / duration : 0;\n        const bufferedTime = Player.getBufferedTime(time, buffered);\n        const bufferedValue = duration > 0 ? bufferedTime / duration : 0;\n\n        const timeString = getDurationString(Math.floor(time) || 0);\n        const durationString = getDurationString(Math.floor(duration) || 0);\n\n        const pictureInPictureEnabled = true;\n        const fullscreenEnabled = document.fullscreenEnabled || document.mozFullScreenEnabled || document.webkitFullscreenEnabled;\n\n        return (\n            <div\n                id='pip-player'\n                className={classNames('pip-player', { 'pip-player-dragging': windowDragging, 'pip-player-fullscreen': fullscreen })}\n                onMouseDown={this.handlePlayerMouseDown}\n                onMouseMove={this.handleMouseOver}\n                onClick={this.handleClickRoot}\n                onDoubleClick={this.handleDoubleClick}>\n                <div\n                    id='pip-player-wrapper'\n                    className={classNames({ 'pip-player-wrapper-hidden': hidden })}\n                    onFocus={this.handleFocus}\n                    onBlur={this.handleBlur}\n                    tabIndex={0}>\n                    <div id='pip-player-container'/>\n                    <Hint fileId={fileId}/>\n\n                    <button onMouseDown={e => e.stopPropagation()} className={classNames('player-button', 'player-button-close', { 'player-panel-hidden': hidden })} onClick={this.handleClose}>\n                        <CloseIcon/>\n                    </button>\n                    <div\n                        className={classNames('player-panel', { 'player-panel-hidden': hidden })}\n                        onClick={e => e.stopPropagation()}\n                        onMouseDown={e => e.stopPropagation()}\n                        onDoubleClick={this.handlePanelDoubleClick}\n                        onMouseEnter={this.handlePanelEnter}\n                        onMouseLeave={this.handlePanelLeave}>\n                        <div className='player-slider'>\n                            <span className='player-slider-buffer-track' style={{ width: bufferedValue * 100 + '%'}}/>\n                            <Slider\n                                value={value}\n                                min={0}\n                                max={1}\n                                step={0.001}\n                                classes={{\n                                    root: 'player-slider-root',\n                                    rail: 'player-slider-rail',\n                                    track: 'player-slider-track',\n                                    thumb: 'player-slider-thumb',\n                                    active: 'player-slider-active'\n                                }}\n                                onChange={this.handleChange}\n                                onChangeCommitted={this.handleChangeCommitted}\n                                onMouseDown={this.handleMouseDown}\n                            />\n                        </div>\n                        <div className='player-controls'>\n                            <button className='player-button' onClick={this.handleClick}>\n                                {play ? <PauseIcon/> : <PlayIcon/>}\n                            </button>\n                            <div className='player-time'>\n                                {`${timeString} / ${durationString}`}\n                            </div>\n                            <div className='player-volume'>\n                                <Slider\n                                    value={volume}\n                                    min={0}\n                                    max={1}\n                                    step={0.001}\n                                    classes={{\n                                        root: 'player-volume-root',\n                                        rail: 'player-volume-rail',\n                                        track: 'player-volume-track',\n                                        thumb: 'player-volume-thumb',\n                                        active: 'player-volume-active'\n                                    }}\n                                    onChange={this.handleVolumeSliderChange}\n                                    onChangeCommitted={this.handleVolumeSliderChangeCommitted}\n                                />\n                            </div>\n                            <button className='player-button' onClick={this.handleMute}>\n                                {Player.getVolumeIcon(volume)}\n                            </button>\n                            <button className='player-button' disabled={!fullscreenEnabled} onClick={this.handleFullScreen}>\n                                <FullScreen/>\n                            </button>\n                            {/*<button className='player-button' disabled={!pictureInPictureEnabled} onClick={this.handlePictureInPicture}>*/}\n                            {/*    <PictureInPictureIcon/>*/}\n                            {/*</button>*/}\n                        </div>\n                    </div>\n                    <Progress waiting={waiting}/>\n                </div>\n            </div>\n        )\n    }\n}\n\nPipPlayer.propTypes = {\n\n};\n\nexport default PipPlayer;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M17,2 C19.209139,2 21,3.790861 21,6 L21,20.2543508 C21,21.3589203 20.1045695,22.2543871 19,22.2543871 C18.5225775,22.2543871 18.0609035,22.0835665 17.6984173,21.772864 L12,16.8885064 L6.30158275,21.772864 C5.46293106,22.4917083 4.2003311,22.3945852 3.4814868,21.5559335 C3.17078432,21.1934473 3,20.7317733 3,20.2543508 L3,6 C3,3.790861 4.790861,2 7,2 L17,2 Z M17,4 L7,4 C5.8954305,4 5,4.8954305 5,6 L5,20.2543508 L10.6984173,15.3699931 C11.4473967,14.7280108 12.5526033,14.7280108 13.3015827,15.3699931 L19,20.2543508 L19,6 C19,4.8954305 18.1045695,4 17,4 Z' />,\n    'Saved'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { isUserOnline } from '../../Utils/User';\nimport { getChatUserId } from '../../Utils/Chat';\nimport UserStore from './../../Stores/UserStore';\nimport './OnlineStatus.css';\n\nclass OnlineStatus extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const userId = getChatUserId(props.chatId);\n        const user = UserStore.get(userId);\n\n        this.state = {\n            userId,\n            online: isUserOnline(user)\n        };\n    }\n\n    componentDidMount() {\n        UserStore.on('updateUserStatus', this.onUpdateUserStatus);\n    }\n\n    componentWillUnmount() {\n        UserStore.off('updateUserStatus', this.onUpdateUserStatus);\n    }\n\n    onUpdateUserStatus = update => {\n        const { userId } = this.state;\n        const { user_id } = update;\n        if (user_id !== userId) return;\n\n        const user = UserStore.get(userId);\n        if (!user) return;\n\n        this.setState({ online: isUserOnline(user) });\n    };\n\n    render() {\n        const { size, borderSize } = this.props;\n        const { online } = this.state;\n        if (!online) return null;\n\n        return (\n            <div className='online-status' style={{ width: size, height: size }}>\n                <div className='online-status-icon' style={{ padding: borderSize }}>\n                    <div className='online-status-indicator' />\n                </div>\n            </div>\n        );\n    }\n}\n\nOnlineStatus.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    size: PropTypes.number,\n    borderSize: PropTypes.number\n};\n\nOnlineStatus.defaultProps = {\n    size: 14,\n    borderSize: 2\n};\n\nexport default OnlineStatus;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport BookmarkBorderIcon from '../../Assets/Icons/Saved';\nimport DeletedAccountIcon from '../../Assets/Icons/DeletedAccount';\nimport OnlineStatus from './OnlineStatus';\nimport { getChatLetters, isMeChat, isPrivateChat, isDeletedPrivateChat, getChatTypeId } from '../../Utils/Chat';\nimport { getSrc, loadChatContent } from '../../Utils/File';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport './ChatTile.css';\n\nclass ChatTile extends Component {\n    state = { };\n\n    static getDerivedStateFromProps(props, state) {\n        const { chatId, t } = props;\n\n        if (state.prevChatId !== chatId) {\n            const chat = ChatStore.get(chatId);\n            const file = chat && chat.photo? chat.photo.small : null;\n\n            const fileId = file ? file.id : -1;\n            const src = getSrc(file);\n            const loaded = state.src === src && src !== '' || fileId === -1;\n            const letters = getChatLetters(chatId, t);\n\n            return {\n                prevChatId: chatId,\n\n                fileId,\n                src,\n                loaded,\n                letters\n            };\n        }\n\n        return null;\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId } = this.props;\n        const { fileId, src, loaded, letters } = this.state;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextState.fileId !== fileId) {\n            return true;\n        }\n\n        if (nextState.src !== src) {\n            return true;\n        }\n\n        if (nextState.loaded !== loaded) {\n            return true;\n        }\n\n        if (nextState.letters !== letters) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ChatStore.on('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.on('updateChatPhoto', this.onUpdateChatPhoto);\n        ChatStore.on('updateChatTitle', this.onUpdateChatTitle);\n        FileStore.on('clientUpdateChatBlob', this.onClientUpdateChatBlob);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.off('updateChatPhoto', this.onUpdateChatPhoto);\n        ChatStore.off('updateChatTitle', this.onUpdateChatTitle);\n        FileStore.off('clientUpdateChatBlob', this.onClientUpdateChatBlob);\n    }\n\n    onFastUpdatingComplete = update => {\n        this.forceUpdate();\n    };\n\n    onClientUpdateChatBlob = update => {\n        const { chatId } = this.props;\n        const { fileId, loaded } = this.state;\n\n        if (chatId !== update.chatId) return;\n        if (fileId !== update.fileId) return;\n\n        if (!loaded) {\n            const chat = ChatStore.get(chatId);\n            if (!chat) return null;\n\n            const { photo } = chat;\n            const src = getSrc(photo ? photo.small : null);\n\n            this.setState({\n                src\n            });\n        }\n    };\n\n    onUpdateChatPhoto = update => {\n        const { chatId } = this.props;\n        const { chat_id, photo } = update;\n\n        if (chat_id !== chatId) return;\n\n        const chat = ChatStore.get(chatId);\n        const file = chat && chat.photo? chat.photo.small : null;\n\n        const fileId = file ? file.id : -1;\n        const src = getSrc(file);\n        const loaded = this.state.src === src && src !== '' || fileId === -1;\n\n        this.setState({\n            fileId,\n            src,\n            loaded\n        });\n\n        if (photo) {\n            const store = FileStore.getStore();\n            loadChatContent(store, chatId);\n        }\n    };\n\n    onUpdateChatTitle = update => {\n        const { chatId, t } = this.props;\n        const { chat_id } = update;\n\n        if (chat_id !== chatId) return;\n\n        const letters = getChatLetters(chatId, t);\n\n        this.setState({ letters });\n    };\n\n    handleSelect = event => {\n        const { chatId, onSelect } = this.props;\n        if (!onSelect) return;\n\n        event.stopPropagation();\n        onSelect(chatId);\n    };\n\n    handleLoad = () => {\n        this.setState({ loaded: true });\n    };\n\n    render() {\n        const { chatId, showOnline, showSavedMessages, onSelect, small, dialog, big, size } = this.props;\n        const { src, loaded, letters } = this.state;\n\n        let style = null;\n        if (size) {\n            style = {\n                width: size,\n                height: size\n            };\n        }\n\n        if (isDeletedPrivateChat(chatId)) {\n            return (\n                <div\n                    className={classNames(\n                        'chat-tile',\n                        { 'tile-small': small },\n                        { 'tile-dialog': dialog },\n                        { 'tile-big': big }\n                    )}\n                    style={style}\n                    onClick={this.handleSelect}>\n                    <div className={classNames('tile-photo', 'tile_color_0', { pointer: onSelect })}>\n                        <div className='tile-saved-messages'>\n                            <DeletedAccountIcon fontSize={big ? 'large' : 'default'} />\n                        </div>\n                    </div>\n                </div>\n            );\n        }\n\n        if (isMeChat(chatId) && showSavedMessages) {\n            return (\n                <div\n                    className={classNames(\n                        'chat-tile',\n                        { 'tile-small': small },\n                        { 'tile-dialog': dialog },\n                        { 'tile-big': big }\n                    )}\n                    style={style}\n                    onClick={this.handleSelect}>\n                    <div className={classNames('tile-photo', 'tile_color_6', { pointer: onSelect })}>\n                        <div className='tile-saved-messages'>\n                            <BookmarkBorderIcon fontSize={big ? 'large' : 'default'} />\n                        </div>\n                    </div>\n                </div>\n            );\n        }\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        const tileLoaded = src && loaded;\n        const typeId = getChatTypeId(chatId);\n        const tileColor = `tile_color_${(Math.abs(typeId) % 7) + 1}`;\n\n        return (\n            <div\n                className={classNames(\n                    'chat-tile',\n                    { [tileColor]: !tileLoaded },\n                    { pointer: onSelect },\n                    { 'tile-dialog': dialog },\n                    { 'tile-small': small },\n                    { 'tile-big': big }\n                )}\n                style={style}\n                onClick={this.handleSelect}>\n                {!tileLoaded && (\n                    <div className='tile-photo'>\n                        <span className='tile-text'>{letters}</span>\n                    </div>\n                )}\n                {src && <img className='tile-photo' src={src} onLoad={this.handleLoad} draggable={false} alt='' />}\n                {showOnline && isPrivateChat(chatId) && <OnlineStatus chatId={chatId} />}\n            </div>\n        );\n    }\n}\n\nChatTile.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onSelect: PropTypes.func,\n    showSavedMessages: PropTypes.bool,\n    showOnline: PropTypes.bool,\n    size: PropTypes.number\n};\n\nChatTile.defaultProps = {\n    showSavedMessages: true,\n    showOnline: false\n};\n\nexport default withTranslation()(ChatTile);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport ChatTile from './ChatTile';\nimport { getChatShortTitle } from '../../Utils/Chat';\nimport './ForwardTargetChat.css';\n\nclass ForwardTargetChat extends React.Component {\n    render() {\n        const { chatId, selected, onSelect, t } = this.props;\n\n        const shortTitle = getChatShortTitle(chatId, true, t);\n\n        return (\n            <div\n                className={classNames('forward-target-chat', { 'forward-target-chat-selected': selected })}\n                onClick={onSelect}>\n                <div className='forward-target-chat-tile'>\n                    <div className='forward-target-chat-tile-wrapper'>\n                        <ChatTile chatId={chatId} />\n                    </div>\n                    {selected && <div className='forward-target-chat-selection' />}\n                    <div\n                        className={classNames(\n                            'forward-target-chat-mark',\n                            selected ? 'forward-target-chat-mark-selected' : 'forward-target-chat-mark-unselected'\n                        )}\n                    />\n                    <div className='forward-target-chat-mark-icon' />\n                </div>\n                <div className='forward-target-chat-title'>{shortTitle}</div>\n            </div>\n        );\n    }\n}\n\nForwardTargetChat.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    selected: PropTypes.bool,\n    onSelect: PropTypes.func.isRequired\n};\n\nexport default withTranslation()(ForwardTargetChat);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nexport async function copy(text) {\n    try {\n        if (navigator.clipboard) {\n            await navigator.clipboard.writeText(text);\n            return true;\n        }\n    } catch (e) {\n        console.error('[clipboard] unable to copy with clipboard.writeText', e);\n    }\n\n    return copyOld(text);\n}\n\nfunction copyOld(text) {\n    let element;\n    let successful;\n    try {\n        element = document.createElement('textarea');\n        element.contentEditable = true;\n        element.readOnly = true;\n        element.value = text;\n        element.style.all = 'unset';\n        element.style.position = 'fixed';\n        element.style.top = 0;\n        element.style.clip = 'rect(0, 0, 0, 0)';\n        element.style.whiteSpace = 'pre';\n        element.style.webkitUserSelect = 'text';\n        element.style.MozUserSelect = 'text';\n        element.style.msUserSelect = 'text';\n        element.style.userSelect = 'text';\n\n        document.body.appendChild(element);\n\n        element.focus();\n        element.select();\n\n        successful = document.execCommand('copy');\n        if (!successful) {\n            throw new Error();\n        }\n        return true;\n    } catch {\n        console.error('[clipboard] unable to copy with document.execCommand', successful);\n    } finally {\n        if (element) {\n            document.body.removeChild(element);\n        }\n    }\n\n    return false;\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport OptionStore from '../Stores/OptionStore';\n\nlet cyrillicInput = null;\n\nfunction getCyrillicInputMap() {\n    return new Map([\n        ['q', 'й'],\n        ['w', 'ц'],\n        ['e', 'у'],\n        ['r', 'к'],\n        ['t', 'е'],\n        ['y', 'н'],\n        ['u', 'г'],\n        ['i', 'ш'],\n        ['o', 'щ'],\n        ['p', 'з'],\n        ['[', 'х'],\n        [']', 'ъ'],\n        ['a', 'ф'],\n        ['s', 'ы'],\n        ['d', 'в'],\n        ['f', 'а'],\n        ['g', 'п'],\n        ['h', 'р'],\n        ['j', 'о'],\n        ['k', 'л'],\n        ['l', 'д'],\n        [';', 'ж'],\n        [\"'\", 'э'],\n        ['\\\\', 'ё'],\n        ['z', 'я'],\n        ['x', 'ч'],\n        ['c', 'с'],\n        ['v', 'м'],\n        ['b', 'и'],\n        ['n', 'т'],\n        ['m', 'ь'],\n        [',', 'б'],\n        ['.', 'ю']\n    ]);\n}\n\nfunction isCyrillicPackId(packId) {\n    if (!packId) return false;\n\n    const { value } = packId;\n    if (!value) return false;\n\n    return value.value === 'ru';\n}\n\nfunction getCyrillicInput(input) {\n    if (!input) return null;\n    if (!input.length) return null;\n\n    const currentPackId = OptionStore.get('language_pack_id');\n    const suggestedPackId = OptionStore.get('suggested_language_pack_id');\n    const hasCyrillicPackId = isCyrillicPackId(currentPackId) || isCyrillicPackId(suggestedPackId);\n    if (!hasCyrillicPackId) return null;\n\n    cyrillicInput = cyrillicInput || getCyrillicInputMap();\n\n    let output = '';\n    for (let i = 0; i < input.length; i++) {\n        if (cyrillicInput.has(input[i])) {\n            output += cyrillicInput.get(input[i]);\n        } else {\n            return null;\n        }\n    }\n\n    return output === '' ? null : output;\n}\n\nlet latinInput = null;\n\nfunction getLatinInputMap() {\n    return new Map([\n        ['й', 'q'],\n        ['ц', 'w'],\n        ['у', 'e'],\n        ['к', 'r'],\n        ['е', 't'],\n        ['н', 'y'],\n        ['г', 'u'],\n        ['ш', 'i'],\n        ['щ', 'o'],\n        ['з', 'p'],\n        ['х', '['],\n        ['ъ', ']'],\n        ['ф', 'a'],\n        ['ы', 's'],\n        ['в', 'd'],\n        ['а', 'f'],\n        ['п', 'g'],\n        ['р', 'h'],\n        ['о', 'j'],\n        ['л', 'k'],\n        ['д', 'l'],\n        ['ж', ';'],\n        ['э', \"'\"],\n        ['ё', '\\\\'],\n        ['я', 'z'],\n        ['ч', 'x'],\n        ['с', 'c'],\n        ['м', 'v'],\n        ['и', 'b'],\n        ['т', 'n'],\n        ['ь', 'm'],\n        ['б', ','],\n        ['ю', '.']\n    ]);\n}\n\nfunction getLatinInput(input) {\n    if (!input) return null;\n    if (!input.length) return null;\n\n    latinInput = latinInput || getLatinInputMap();\n\n    let output = '';\n    for (let i = 0; i < input.length; i++) {\n        if (latinInput.has(input[i])) {\n            output += latinInput.get(input[i]);\n        } else {\n            return null;\n        }\n    }\n\n    return output === '' ? null : output;\n}\n\nexport { getCyrillicInput, getLatinInput };\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from '../../Utils/HOC';\nimport { withTranslation } from 'react-i18next';\nimport { withSnackbar } from 'notistack';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport ForwardTargetChat from '../Tile/ForwardTargetChat';\nimport { copy } from '../../Utils/Text';\nimport { canSendMessages, getChatTitle, getChatUsername, isSupergroup } from '../../Utils/Chat';\nimport { loadChatsContent } from '../../Utils/File';\nimport { getCyrillicInput, getLatinInput } from '../../Utils/Language';\nimport { clearSelection, forward } from '../../Actions/Client';\nimport { modalManager } from '../../Utils/Modal';\nimport { NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport UserStore from '../../Stores/UserStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './ForwardDialog.css';\n\nclass ForwardDialog extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            chatIds: [],\n            savedMessages: null\n        };\n\n        this.searchRef = React.createRef();\n        this.messageRef = React.createRef();\n\n        this.targetChats = new Map();\n    }\n\n    componentDidMount() {\n        this.loadContent();\n\n        this.setSearchFocus();\n    }\n\n    loadContent = async () => {\n        this.getPublicMessageLink();\n\n        const promises = [];\n        const getChatsPromise = TdLibController.send({\n            '@type': 'getChats',\n            offset_order: '9223372036854775807',\n            offset_chat_id: 0,\n            limit: 100\n        });\n        promises.push(getChatsPromise);\n\n        const savedMessagesPromise = TdLibController.send({\n            '@type': 'createPrivateChat',\n            user_id: UserStore.getMyId(),\n            force: true\n        });\n        promises.push(savedMessagesPromise);\n\n        const [chats, savedMessages] = await Promise.all(promises.map(x => x.catch(e => null)));\n\n        this.setState({\n            chatIds: chats.chat_ids,\n            savedMessages: savedMessages\n        });\n\n        const store = FileStore.getStore();\n        loadChatsContent(store, chats.chat_ids);\n    };\n\n    getPublicMessageLink = async () => {\n        const { chatId, messageIds } = this.props;\n        if (!chatId) return;\n        if (!messageIds) return;\n        if (messageIds.length > 1) return;\n        if (!isSupergroup(chatId)) return;\n        if (!getChatUsername(chatId)) return;\n\n        const result = await TdLibController.send({\n            '@type': 'getPublicMessageLink',\n            chat_id: chatId,\n            message_id: messageIds[0],\n            for_album: false\n        });\n\n        this.setState({\n            publicMessageLink: result\n        });\n    };\n\n    handleClose = () => {\n        forward(null);\n    };\n\n    handleCopyLink = () => {\n        const { t } = this.props;\n        const { publicMessageLink } = this.state;\n\n        if (!publicMessageLink) return;\n        if (!publicMessageLink.link) return;\n\n        copy(publicMessageLink.link);\n\n        this.handleScheduledAction(t('LinkCopied'));\n    };\n\n    handleScheduledAction = message => {\n        const { enqueueSnackbar, closeSnackbar } = this.props;\n\n        const snackKey = enqueueSnackbar(message, {\n            autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\n            preventDuplicate: true,\n            action: [\n                <IconButton\n                    key='close'\n                    aria-label='Close'\n                    color='inherit'\n                    className='notification-close-button'\n                    onClick={() => closeSnackbar(snackKey)}>\n                    <CloseIcon />\n                </IconButton>\n            ]\n        });\n    };\n\n    getForwardPhotoSize = (chatId, messageIds) => {\n        if (messageIds.length !== 1) return null;\n\n        const message = MessageStore.get(chatId, messageIds[0]);\n        if (!message) return null;\n\n        const { can_be_forwarded, content } = message;\n        if (!can_be_forwarded && content['@type'] === 'messageChatChangePhoto') {\n            const { photo } = content;\n            if (!photo) return null;\n\n            const { sizes } = photo;\n            if (sizes && sizes.length) {\n                return sizes[sizes.length - 1];\n            }\n        }\n\n        return null;\n    };\n\n    handleSend = () => {\n        this.handleClose();\n        clearSelection();\n\n        const { chatId, messageIds, inputMessageContent } = this.props;\n        if (!chatId && !messageIds && !inputMessageContent) return;\n\n        const text = this.getInnerText(this.messageRef.current);\n\n        this.targetChats.forEach(targetChatId => {\n            if (inputMessageContent) {\n                if (text) {\n                    if ('caption' in inputMessageContent) {\n                        inputMessageContent.caption = {\n                            '@type': 'formattedText',\n                            text,\n                            entities: null\n                        };\n                    } else {\n                        TdLibController.send({\n                            '@type': 'sendMessage',\n                            chat_id: targetChatId,\n                            reply_to_message_id: 0,\n                            disable_notifications: false,\n                            from_background: false,\n                            reply_markup: null,\n                            input_message_content: {\n                                '@type': 'inputMessageText',\n                                text: {\n                                    '@type': 'formattedText',\n                                    text,\n                                    entities: null\n                                },\n                                disable_web_page_preview: false,\n                                clear_draft: false\n                            }\n                        });\n                    }\n                }\n\n                TdLibController.send({\n                    '@type': 'sendMessage',\n                    chat_id: targetChatId,\n                    reply_to_message_id: 0,\n                    disable_notifications: false,\n                    from_background: false,\n                    reply_markup: null,\n                    input_message_content: inputMessageContent\n                });\n\n                return;\n            }\n\n            const size = this.getForwardPhotoSize(chatId, messageIds);\n            if (size) {\n                const { width, height, photo } = size;\n\n                TdLibController.send({\n                    '@type': 'sendMessage',\n                    chat_id: targetChatId,\n                    reply_to_message_id: 0,\n                    disable_notifications: false,\n                    from_background: false,\n                    reply_markup: null,\n                    input_message_content: {\n                        '@type': 'inputMessagePhoto',\n                        photo: {\n                            '@type': 'inputFileId',\n                            id: photo.id\n                        },\n                        thumbnail: null,\n                        added_sticker_file_ids: [],\n                        width: width,\n                        height: height,\n                        caption: {\n                            '@type': 'formattedText',\n                            text,\n                            entities: null\n                        },\n                        ttl: 0\n                    }\n                });\n\n                return;\n            }\n\n            if (text) {\n                TdLibController.send({\n                    '@type': 'sendMessage',\n                    chat_id: targetChatId,\n                    reply_to_message_id: 0,\n                    disable_notifications: false,\n                    from_background: false,\n                    reply_markup: null,\n                    input_message_content: {\n                        '@type': 'inputMessageText',\n                        text: {\n                            '@type': 'formattedText',\n                            text,\n                            entities: null\n                        },\n                        disable_web_page_preview: false,\n                        clear_draft: false\n                    }\n                });\n            }\n\n            TdLibController.send({\n                '@type': 'forwardMessages',\n                chat_id: targetChatId,\n                from_chat_id: chatId,\n                message_ids: messageIds,\n                disable_notifications: false,\n                from_background: false,\n                as_album: false\n            });\n        });\n    };\n\n    handleChangeSelection = chatId => {\n        if (this.targetChats.has(chatId)) {\n            this.targetChats.delete(chatId);\n        } else {\n            this.targetChats.set(chatId, chatId);\n        }\n\n        // console.log(this.targetChats);\n\n        this.forceUpdate();\n    };\n\n    getInnerText = element => {\n        const { innerHTML } = element;\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\n            element.innerHTML = null;\n        }\n        const { innerText } = element;\n\n        return innerText;\n    };\n\n    handleSearchKeyDown = event => {\n        if (event.keyCode === 13) {\n            event.preventDefault();\n        }\n    };\n\n    handleSearchKeyUp = async () => {\n        const { chatIds, savedMessages } = this.state;\n\n        const element = this.searchRef.current;\n        if (!element) return;\n\n        const { innerHTML } = element;\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\n            element.innerHTML = null;\n        }\n\n        const innerText = this.getInnerText(element).trim();\n        if (!innerText) {\n            this.setState({ searchText: null, searchResults: [], globalSearchResults: [] });\n            return;\n        }\n\n        const latinText = getLatinInput(innerText);\n        const cyrillicText = getCyrillicInput(innerText);\n\n        const chatsSource = savedMessages\n            ? [savedMessages.id].concat(chatIds.filter(x => x !== savedMessages.id && canSendMessages(x)))\n            : chatIds;\n\n        const searchResults = chatsSource.filter(\n            x =>\n                this.hasSearchText(x, innerText) ||\n                (latinText && this.hasSearchText(x, latinText)) ||\n                (cyrillicText && this.hasSearchText(x, cyrillicText))\n        );\n\n        this.setState({ searchText: innerText, searchResults });\n\n        const result = await TdLibController.send({\n            '@type': 'searchChatsOnServer',\n            query: innerText,\n            limit: 100\n        });\n\n        if (this.state.searchText !== innerText) {\n            return;\n        }\n\n        this.setState({\n            globalSearchResults: result.chat_ids\n        });\n    };\n\n    handleSearchPaste = event => {\n        const plainText = event.clipboardData.getData('text/plain');\n        if (plainText) {\n            event.preventDefault();\n            document.execCommand('insertText', false, plainText);\n        }\n    };\n\n    handleMessageKeyUp = () => {\n        const element = this.messageRef.current;\n        if (!element) return;\n\n        const { innerHTML } = element;\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\n            element.innerHTML = null;\n        }\n    };\n\n    handleMessagePaste = event => {\n        const plainText = event.clipboardData.getData('text/plain');\n        if (plainText) {\n            event.preventDefault();\n            document.execCommand('insertText', false, plainText);\n        }\n    };\n\n    hasSearchText = (chatId, searchText) => {\n        const { t } = this.props;\n        const { savedMessages } = this.state;\n\n        if (savedMessages && chatId === savedMessages.id) {\n            const title = getChatTitle(chatId, true, t) || '';\n            if (title.toLocaleLowerCase().indexOf(searchText.toLowerCase()) !== -1) {\n                return true;\n            }\n        }\n\n        const title1 = getChatTitle(chatId, false, t) || '';\n        if (title1.toLocaleLowerCase().indexOf(searchText.toLowerCase()) !== -1) {\n            return true;\n        }\n\n        const username = getChatUsername(chatId) || '';\n        if (username.toLocaleLowerCase().indexOf(searchText.toLowerCase()) !== -1) {\n            return true;\n        }\n\n        return false;\n    };\n\n    setSearchFocus = () => {\n        setTimeout(() => {\n            if (this.searchRef.current) {\n                const element = this.searchRef.current;\n\n                element.focus();\n            }\n        }, 100);\n    };\n\n    render() {\n        const { t } = this.props;\n        const {\n            chatIds,\n            searchText,\n            searchResults,\n            globalSearchResults,\n            savedMessages,\n            publicMessageLink\n        } = this.state;\n\n        const chatsSource = savedMessages\n            ? [savedMessages.id].concat(chatIds.filter(x => x !== savedMessages.id && canSendMessages(x)))\n            : chatIds;\n\n        const chats = chatsSource.map(x => (\n            <ForwardTargetChat\n                key={x}\n                chatId={x}\n                selected={this.targetChats.has(x)}\n                onSelect={() => this.handleChangeSelection(x)}\n            />\n        ));\n\n        const searchResultsMap = new Map((searchResults || []).map(x => [x, x]));\n        const filteredResults = (globalSearchResults || []).filter(\n            x => x !== savedMessages.id && canSendMessages(x) && !searchResultsMap.has(x)\n        );\n\n        const foundChats = (searchResults || [])\n            .concat(filteredResults)\n            .map(x => (\n                <ForwardTargetChat\n                    key={x}\n                    chatId={x}\n                    selected={this.targetChats.has(x)}\n                    onSelect={() => this.handleChangeSelection(x)}\n                />\n            ));\n\n        return (\n            <Dialog\n                open={true}\n                manager={modalManager}\n                transitionDuration={0}\n                onClose={this.handleClose}\n                aria-labelledby='forward-dialog-title'\n                aria-describedby='forward-dialog-description'\n                className='forward-dialog'>\n                <DialogTitle id='forward-dialog-title'>{t('ShareSendTo')}</DialogTitle>\n                <div\n                    ref={this.searchRef}\n                    id='forward-dialog-search'\n                    className='scrollbars-hidden'\n                    contentEditable\n                    suppressContentEditableWarning\n                    placeholder={t('Search')}\n                    onKeyDown={this.handleSearchKeyDown}\n                    onKeyUp={this.handleSearchKeyUp}\n                    onPaste={this.handleSearchPaste}\n                />\n                <div className='forward-dialog-content'>\n                    <div className='forward-dialog-list'>{chats}</div>\n                    {searchText && <div className='forward-dialog-search-list'>{foundChats}</div>}\n                </div>\n                {this.targetChats.size > 0 && (\n                    <div\n                        ref={this.messageRef}\n                        id='forward-dialog-message'\n                        contentEditable\n                        suppressContentEditableWarning\n                        placeholder={t('ShareComment')}\n                        onKeyUp={this.handleMessageKeyUp}\n                        onPaste={this.handleMessagePaste}\n                    />\n                )}\n                <DialogActions>\n                    <Button onClick={this.handleClose} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    {this.targetChats.size > 0 && (\n                        <Button onClick={this.handleSend} color='primary' autoFocus>\n                            {t('Send')}\n                        </Button>\n                    )}\n                    {!this.targetChats.size && publicMessageLink && (\n                        <Button onClick={this.handleCopyLink} color='primary'>\n                            {t('CopyLink')}\n                        </Button>\n                    )}\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nForwardDialog.propTypes = {\n    chatId: PropTypes.number,\n    messageIds: PropTypes.array,\n    inputMessageContent: PropTypes.object\n};\n\nconst enhance = compose(\n    withTranslation(),\n    withSnackbar\n);\n\nexport default enhance(ForwardDialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M12.1715729,2 C12.9672223,2 13.7302841,2.31607052 14.2928932,2.87867966 L21.1213203,9.70710678 C21.6839295,10.2697159 22,11.0327777 22,11.8284271 L22,19 C22,20.6568542 20.6568542,22 19,22 L5,22 C3.34314575,22 2,20.6568542 2,19 L2,5 C2,3.34314575 3.34314575,2 5,2 L12.1715729,2 Z M11,4 L5,4 C4.44771525,4 4,4.44771525 4,5 L4,19 C4,19.5522847 4.44771525,20 5,20 L19,20 C19.5522847,20 20,19.5522847 20,19 L20,13 L14,13 C12.4023191,13 11.0963391,11.75108 11.0050927,10.1762728 L11,10 L11,4 Z M19.586,11 L13,4.414 L13,10 C13,10.5128358 13.3860402,10.9355072 13.8833789,10.9932723 L14,11 L19.586,11 Z' />,\n    'Document2'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M19,2 C20.6568542,2 22,3.34314575 22,5 L22,19 C22,20.6568542 20.6568542,22 19,22 L5,22 C3.34314575,22 2,20.6568542 2,19 L2,5 C2,3.34314575 3.34314575,2 5,2 L19,2 Z M8.95903938,14.4653367 L8.89694708,14.4202095 C8.68789701,14.291568 8.42133316,14.3352159 8.26303498,14.5116789 L8.2090719,14.5840012 L4.88033327,19.9929138 L4.93969424,19.9982115 L4.93969424,19.9982115 L12.446,20 L9.05890452,14.5810435 C9.0316623,14.5374559 8.99794603,14.4984621 8.95903938,14.4653367 L8.89694708,14.4202095 L8.95903938,14.4653367 Z M15.6580762,12.1926572 C15.4476303,12.0663122 15.1815603,12.1128758 15.0252035,12.2910614 L14.9720355,12.3639701 L12.551,16.396 L14.803,20 L19,20 C19.5410622,20 19.9817615,19.5702952 19.9994483,19.0335352 L15.8247114,12.3563345 C15.7828678,12.2893847 15.7257647,12.2332952 15.6580762,12.1926572 Z M19,4 L5,4 C4.44771525,4 4,4.44771525 4,5 L4,17.606 L6.50573804,13.5358344 C7.19919591,12.4089238 8.64230264,12.0252274 9.79631538,12.6320827 L9.94511393,12.7168756 C10.2187146,12.885239 10.4567799,13.1044297 10.6467737,13.3619985 L10.7549011,13.5210456 L11.361,14.492 L13.2573282,11.3345145 C13.9384069,10.2000794 15.3772263,9.80060652 16.5378139,10.3947912 L16.6875318,10.4779499 C16.9695672,10.6472749 17.2148477,10.8702509 17.409849,11.1335934 L17.5207081,11.2963367 L20,15.264 L20,5 C20,4.44771525 19.5522847,4 19,4 Z' />,\n    'SharedMedia'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M23,12L20.56,9.22L20.9,5.54L17.29,4.72L15.4,1.54L12,3L8.6,1.54L6.71,4.72L3.1,5.53L3.44,9.21L1,12L3.44,14.78L3.1,18.47L6.71,19.29L8.6,22.47L12,21L15.4,22.46L17.29,19.28L20.9,18.46L20.56,14.78L23,12M10,17L6,13L7.41,11.59L10,14.17L16.59,7.58L18,9L10,17Z' />,\n    'Verified'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport CheckDecagramIcon from '../../Assets/Icons/Verified';\nimport { getChatTitle, isChatVerified } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport './DialogTitle.css';\n\nclass DialogTitle extends React.Component {\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, t } = this.props;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.t !== t) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ChatStore.on('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.on('updateChatTitle', this.onUpdateChatTitle);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.off('updateChatTitle', this.onUpdateChatTitle);\n    }\n\n    onFastUpdatingComplete = update => {\n        this.forceUpdate();\n    };\n\n    onUpdateChatTitle = update => {\n        const { chatId } = this.props;\n\n        if (update.chat_id !== chatId) return;\n\n        this.forceUpdate();\n    };\n\n    render() {\n        const { t, chatId, showSavedMessages } = this.props;\n\n        const isVerified = isChatVerified(chatId);\n        const title = getChatTitle(chatId, showSavedMessages, t);\n\n        return (\n            <div className='dialog-title'>\n                <span className='dialog-title-span'>{title}</span>\n                {isVerified && <CheckDecagramIcon className='dialog-title-icon' />}\n            </div>\n        );\n    }\n}\n\nDialogTitle.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    showSavedMessages: PropTypes.bool\n};\n\nDialogTitle.defaultProps = {\n    showSavedMessages: true\n};\n\nexport default withTranslation()(DialogTitle);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport { getChatSubtitleWithoutTyping, isAccentChatSubtitleWithoutTyping } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport UserStore from '../../Stores/UserStore';\nimport BasicGroupStore from '../../Stores/BasicGroupStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport './DialogStatus.css';\n\nclass DialogStatus extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId } = this.props;\n\n        this.state = {\n            prevChatId: chatId,\n            subtitle: getChatSubtitleWithoutTyping(chatId),\n            isAccent: isAccentChatSubtitleWithoutTyping(chatId)\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.chatId !== state.prevChatId) {\n            const { chatId } = props;\n\n            return {\n                prevChatId: chatId,\n                subtitle: getChatSubtitleWithoutTyping(chatId),\n                isAccent: isAccentChatSubtitleWithoutTyping(chatId)\n            };\n        }\n\n        return null;\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId } = this.props;\n        const { subtitle, isAccent } = this.state;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextState.subtitle !== subtitle) {\n            return true;\n        }\n\n        if (nextState.isAccent !== isAccent) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        UserStore.on('updateUserStatus', this.onUpdateUserStatus);\n        BasicGroupStore.on('updateBasicGroup', this.onUpdateBasicGroup);\n        SupergroupStore.on('updateSupergroup', this.onUpdateSupergroup);\n        UserStore.on('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.on('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.on('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n    }\n\n    componentWillUnmount() {\n        UserStore.off('updateUserStatus', this.onUpdateUserStatus);\n        BasicGroupStore.off('updateBasicGroup', this.onUpdateBasicGroup);\n        SupergroupStore.off('updateSupergroup', this.onUpdateSupergroup);\n        UserStore.off('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.off('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.off('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n    }\n\n    onUpdateUserStatus = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        let updateSubtitle = false;\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup': {\n                const fullInfo = BasicGroupStore.getFullInfo(chat.type.basic_group_id);\n                if (fullInfo && fullInfo.members) {\n                    const member = fullInfo.members.find(x => x.user_id === update.user_id);\n                    if (member) {\n                        updateSubtitle = true;\n                    }\n                }\n                break;\n            }\n            case 'chatTypePrivate': {\n                if (chat.type.user_id === update.user_id) {\n                    updateSubtitle = true;\n                }\n                break;\n            }\n            case 'chatTypeSecret': {\n                if (chat.type.user_id === update.user_id) {\n                    updateSubtitle = true;\n                }\n                break;\n            }\n            case 'chatTypeSupergroup': {\n                break;\n            }\n        }\n\n        if (updateSubtitle) {\n            this.updateSubtitle(chatId);\n        }\n    };\n\n    updateSubtitle = chatId => {\n        this.setState({\n            subtitle: getChatSubtitleWithoutTyping(chatId),\n            isAccent: isAccentChatSubtitleWithoutTyping(chatId)\n        });\n    };\n\n    onUpdateUserFullInfo = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const { type } = chat;\n        if (!type) return;\n\n        if (\n            type &&\n            (type['@type'] === 'chatTypePrivate' || type['@type'] === 'chatTypeSecret') &&\n            type.user_id === update.user_id\n        ) {\n            this.updateSubtitle(chatId);\n        }\n    };\n\n    onUpdateBasicGroupFullInfo = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const { type } = chat;\n        if (!type) return;\n\n        if (type && type['@type'] === 'chatTypeBasicGroup' && type.basic_group_id === update.basic_group_id) {\n            this.updateSubtitle(chatId);\n        }\n    };\n\n    onUpdateSupergroupFullInfo = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const { type } = chat;\n        if (!type) return;\n\n        if (type && type['@type'] === 'chatTypeSupergroup' && type.supergroup_id === update.supergroup_id) {\n            this.updateSubtitle(chatId);\n        }\n    };\n\n    onUpdateBasicGroup = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const { type } = chat;\n        if (!type) return;\n\n        if (type && type['@type'] === 'chatTypeBasicGroup' && type.basic_group_id === update.basic_group.id) {\n            this.updateSubtitle(chatId);\n        }\n    };\n\n    onUpdateSupergroup = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const { type } = chat;\n        if (!type) return;\n\n        if (type && type['@type'] === 'chatTypeSupergroup' && type.supergroup_id === update.supergroup.id) {\n            this.updateSubtitle(chatId);\n        }\n    };\n\n    render() {\n        const { subtitle: externalSubtitle } = this.props;\n        const { subtitle, isAccent } = this.state;\n\n        return (\n            <div className={classNames('dialog-status', { 'dialog-status-accent': isAccent })}>\n                {externalSubtitle ? externalSubtitle + ', ' : null}\n                {subtitle}\n            </div>\n        );\n    }\n}\n\nexport default DialogStatus;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport ChatTile from './ChatTile';\nimport DialogTitle from './DialogTitle';\nimport DialogStatus from './DialogStatus';\nimport { isMeChat } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport './Chat.css';\n\nclass Chat extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId } = this.props;\n        this.state = {\n            chat: ChatStore.get(chatId)\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        return nextProps.chatId !== this.props.chatId;\n    }\n\n    handleClick = () => {\n        const { chatId, onSelect } = this.props;\n        if (!onSelect) return;\n\n        onSelect(chatId);\n    };\n\n    render() {\n        const { chatId, subtitle, onTileSelect, showStatus, showSavedMessages, big, showTitle } = this.props;\n\n        const isSavedMessages = isMeChat(chatId);\n\n        return (\n            <div className={classNames('chat', { 'chat-big': big })} onClick={this.handleClick}>\n                <div className='chat-wrapper'>\n                    <ChatTile big={big} chatId={chatId} onSelect={onTileSelect} showSavedMessages={showSavedMessages} />\n                    {showTitle && (\n                        <div className='chat-inner-wrapper'>\n                            <div className='tile-first-row'>\n                                <DialogTitle chatId={chatId} showSavedMessages={showSavedMessages} />\n                            </div>\n                            {showStatus && (!isSavedMessages || !showSavedMessages) && (\n                                <div className='tile-second-row'>\n                                    <DialogStatus chatId={chatId} subtitle={subtitle} />\n                                </div>\n                            )}\n                        </div>\n                    )}\n                </div>\n            </div>\n        );\n    }\n}\n\nChat.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    subtitle: PropTypes.string,\n    showSavedMessages: PropTypes.bool,\n    showStatus: PropTypes.bool,\n    showTitle: PropTypes.bool,\n    onSelect: PropTypes.func,\n    onTileSelect: PropTypes.func\n};\n\nChat.defaultProps = {\n    showSavedMessages: true,\n    showStatus: true,\n    showTitle: true\n};\n\nexport default Chat;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M4.29289322,11.2928932 L11.2928932,4.29289322 C11.6834175,3.90236893 12.3165825,3.90236893 12.7071068,4.29289322 C13.0675907,4.65337718 13.0953203,5.22060824 12.7902954,5.61289944 L12.7071068,5.70710678 L7.414,11 L19,11 C19.5128358,11 19.9355072,11.3860402 19.9932723,11.8833789 L20,12 C20,12.5128358 19.6139598,12.9355072 19.1166211,12.9932723 L19,13 L7.414,13 L12.7071068,18.2928932 C13.0675907,18.6533772 13.0953203,19.2206082 12.7902954,19.6128994 L12.7071068,19.7071068 C12.3466228,20.0675907 11.7793918,20.0953203 11.3871006,19.7902954 L11.2928932,19.7071068 L4.29289322,12.7071068 C3.93240926,12.3466228 3.90467972,11.7793918 4.20970461,11.3871006 L4.29289322,11.2928932 L11.2928932,4.29289322 L4.29289322,11.2928932 Z' />,\n    'Back'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport { isChannelChat, isPrivateChat } from '../../Utils/Chat';\nimport './ChatDetailsHeader.css';\n\nclass ChatDetailsHeader extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        const { chatId, t, backButton, onClick, onClose } = this.props;\n\n        let info = t('ChatInfo');\n        if (isPrivateChat(chatId)) {\n            info = t('Info');\n        } else if (isChannelChat(chatId)) {\n            info = t('ChannelInfo');\n        }\n\n        return (\n            <div className='header-master'>\n                {backButton && (\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                )}\n                <div className='header-status grow cursor-pointer' onClick={onClick}>\n                    <span className='header-status-content'>{info}</span>\n                </div>\n                {!backButton && (\n                    <IconButton className='header-right-button' onClick={onClose}>\n                        <CloseIcon />\n                    </IconButton>\n                )}\n            </div>\n        );\n    }\n}\n\nexport default withTranslation()(ChatDetailsHeader);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { isChatMuted } from '../../Utils/Chat';\nimport { debounce } from '../../Utils/Common';\nimport { toggleChatNotificationSettings } from '../../Actions/Chat';\nimport { NOTIFICATION_DEBOUNCE_DELAY_MS } from '../../Constants';\nimport ChatStore from '../../Stores/ChatStore';\nimport NotificationStore from '../../Stores/NotificationStore';\n\nclass Notifications extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId } = props;\n\n        this.state = {\n            prevChatId: chatId,\n            isMuted: isChatMuted(chatId)\n        };\n\n        this.debouncedSetChatNotificationSettings = debounce(\n            this.setChatNotificationSettings,\n            NOTIFICATION_DEBOUNCE_DELAY_MS\n        );\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.chatId !== state.prevChatId) {\n            const { chatId } = props;\n\n            return {\n                prevChatId: chatId,\n                isMuted: isChatMuted(chatId)\n            };\n        }\n        return null;\n    }\n\n    componentDidMount() {\n        ChatStore.on('updateChatNotificationSettings', this.onUpdateChatNotificationSettings);\n        NotificationStore.on('updateScopeNotificationSettings', this.onUpdateScopeNotificationSettings);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('updateChatNotificationSettings', this.onUpdateChatNotificationSettings);\n        NotificationStore.off('updateScopeNotificationSettings', this.onUpdateScopeNotificationSettings);\n    }\n\n    onUpdateChatNotificationSettings = update => {\n        const { chat_id } = update;\n        const { chatId } = this.props;\n\n        if (!chat_id) return;\n        if (chat_id !== chatId) return;\n\n        this.setState({ isMuted: isChatMuted(chatId) });\n    };\n\n    onUpdateScopeNotificationSettings = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n\n        switch (update.scope['@type']) {\n            case 'notificationSettingsScopeGroupChats': {\n                if (chat.type['@type'] === 'chatTypeBasicGroup' || chat.type['@type'] === 'chatTypeSupergroup') {\n                    this.setState({ isMuted: isChatMuted(chatId) });\n                }\n                break;\n            }\n            case 'notificationSettingsScopePrivateChats': {\n                if (chat.type['@type'] === 'chatTypePrivate' || chat.type['@type'] === 'chatTypeSecret') {\n                    this.setState({ isMuted: isChatMuted(chatId) });\n                }\n                break;\n            }\n        }\n    };\n\n    handleSetChatNotifications = () => {\n        this.setState({ isMuted: !this.state.isMuted });\n        this.debouncedSetChatNotificationSettings();\n    };\n\n    setChatNotificationSettings = () => {\n        const { chatId } = this.props;\n        const { isMuted } = this.state;\n\n        toggleChatNotificationSettings(chatId, isMuted);\n    };\n}\n\nexport default Notifications;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Typography from '@material-ui/core/Typography';\nimport Notifications from '../ColumnMiddle/Notifications';\nimport './NotificationsListItem.css';\n\nclass NotificationsListItem extends Notifications {\n    render() {\n        const { t } = this.props;\n        const { isMuted } = this.state;\n\n        return (\n            <ListItem button className='list-item-rounded' alignItems='flex-start' onClick={this.handleSetChatNotifications}>\n                <ListItemIcon>\n                    <Checkbox\n                        className='notifications-checkbox'\n                        edge='start'\n                        checked={!isMuted}\n                        color='primary'\n                        tabIndex={-1}\n                        disableRipple\n                        onChange={this.handleSetChatNotifications}\n                    />\n                </ListItemIcon>\n                <ListItemText\n                    primary={\n                        <Typography variant='inherit' noWrap>\n                            {t('Notifications')}\n                        </Typography>\n                    }\n                    secondary={!isMuted ? t('PopupEnabled') : t('PopupDisabled')}\n                />\n            </ListItem>\n        );\n    }\n}\n\nexport default withTranslation()(NotificationsListItem);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport Animator from '../../../Utils/Animatior';\nimport { clamp, throttle } from '../../../Utils/Common';\nimport MessageStore from '../../../Stores/MessageStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './SharedMediaTabs.css';\n\nclass SharedMediaTabs extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.filterRef = new Map();\n        this.filtersRef = React.createRef();\n        this.filterSelectionRef = React.createRef();\n\n        this.state = { }\n\n        this.onWindowResize = throttle(this.onWindowResize, 250);\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { chatId } = props;\n\n        if (chatId !== state.prevChatId) {\n            const media = MessageStore.getMedia(props.chatId);\n\n            const photoAndVideo = media ? media.photoAndVideo : [];\n            const document = media ? media.document : [];\n            const audio = media ? media.audio : [];\n            const url = media ? media.url : [];\n            const voiceNote = media ? media.voiceNote : [];\n            const groupsInCommon = media ? media.groupsInCommon : [];\n\n            let selectedIndex = -1;\n            if (photoAndVideo.length > 0) {\n                selectedIndex = 1;\n            } else if (document.length > 0) {\n                selectedIndex = 2;\n            } else if (audio.length > 0) {\n                selectedIndex = 3;\n            } else if (url.length > 0) {\n                selectedIndex = 4;\n            } else if (voiceNote.length > 0) {\n                selectedIndex = 5;\n            } else if (groupsInCommon.length > 0) {\n                selectedIndex = 6;\n            }\n\n            return {\n                prevChatId: props.chatId,\n                selectedIndex,\n                photoAndVideo,\n                document,\n                audio,\n                url,\n                voiceNote,\n                groupsInCommon,\n                isSmallWidth: false\n            }\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        this.observeResize();\n        this.setSelection();\n\n        MessageStore.on('clientUpdateMediaTab', this.onClientUpdateMediaTab);\n        MessageStore.on('clientUpdateChatMedia', this.onClientUpdateChatMedia);\n        MessageStore.on('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.on('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        this.unobserveResize();\n        this.observeResize();\n    }\n\n    componentWillUnmount() {\n        this.unobserveResize();\n        MessageStore.off('clientUpdateMediaTab', this.onClientUpdateMediaTab);\n        MessageStore.off('clientUpdateChatMedia', this.onClientUpdateChatMedia);\n        MessageStore.off('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.off('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    onUpdateMessageContent = update => {\n        const { chatId } = this.props;\n        const { selectedIndex } = this.state;\n        const { chat_id } = update;\n        if (chatId !== chat_id) {\n            return;\n        }\n\n        const media = MessageStore.getMedia(chatId);\n        this.setMediaState(media, selectedIndex);\n    };\n\n    onUpdateDeleteMessages = update => {\n        const { chatId } = this.props;\n        const { selectedIndex } = this.state;\n        const { chat_id } = update;\n        if (chatId !== chat_id) {\n            return;\n        }\n\n        const media = MessageStore.getMedia(chatId);\n        this.setMediaState(media, selectedIndex);\n    };\n\n    onUpdateNewMessage = update => {\n        const { chatId } = this.props;\n        const { selectedIndex } = this.state;\n        const { message } = update;\n        if (chatId !== message.chat_id) {\n            return;\n        }\n\n        const media = MessageStore.getMedia(chatId);\n        this.setMediaState(media, selectedIndex);\n    };\n\n    hasObserver = () => {\n        return 'ResizeObserver' in window;\n    };\n\n    observeResize() {\n        if (!this.hasObserver()) return;\n        const filters = this.filtersRef.current;\n        if (!filters) return;\n\n        const observer = new ResizeObserver(this.onWindowResize);\n        observer.observe(filters);\n\n        this.resizeObserver = { observer, filters }\n    }\n\n    unobserveResize() {\n        if (!this.hasObserver()) return;\n        if (!this.resizeObserver) return;\n\n        const { observer, filters } = this.resizeObserver;\n        if (!observer) return;\n        if (!filters) return;\n\n        observer.unobserve(filters);\n    }\n\n    onWindowResize = () => {\n        this.setSelection(true);\n    };\n\n    setMediaState = (media, selectedIndex) => {\n        const { chatId } = this.props;\n\n        const photoAndVideo = media ? media.photoAndVideo : [];\n        const document = media ? media.document : [];\n        const audio = media ? media.audio : [];\n        const url = media ? media.url : [];\n        const voiceNote = media ? media.voiceNote : [];\n        const groupsInCommon = media ? media.groupsInCommon : [];\n\n        const hasPhotoAndVideo = photoAndVideo.length > 0;\n        const hasDocument = document.length > 0;\n        const hasAudio = audio.length > 0;\n        const hasUrl = url.length > 0;\n        const hasVoiceNote = voiceNote.length > 0;\n        const hasGroupsInCommon = groupsInCommon.length > 0;\n\n        const replaceSelectedIndex =\n            selectedIndex === -1\n            || selectedIndex === 1 && !hasPhotoAndVideo\n            || selectedIndex === 2 && !hasDocument\n            || selectedIndex === 3 && !hasAudio\n            || selectedIndex === 4 && !hasUrl\n            || selectedIndex === 5 && !hasVoiceNote\n            || selectedIndex === 6 && !hasGroupsInCommon;\n        if (replaceSelectedIndex) {\n            if (hasPhotoAndVideo) {\n                selectedIndex = 1;\n            } else if (hasDocument) {\n                selectedIndex = 2;\n            } else if (hasAudio) {\n                selectedIndex = 3;\n            } else if (hasUrl) {\n                selectedIndex = 4;\n            } else if (hasVoiceNote) {\n                selectedIndex = 5;\n            } else if (hasGroupsInCommon) {\n                selectedIndex = 6;\n            }\n\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaTab',\n                chatId,\n                index: selectedIndex\n            });\n        }\n\n        this.setState({\n            selectedIndex,\n            photoAndVideo,\n            document,\n            audio,\n            url,\n            voiceNote,\n            groupsInCommon\n        }, () => {\n            if (!this.hasObserver()) this.setSelection();\n        });\n    }\n\n    onClientUpdateChatMedia = update => {\n        const { chatId: currentChatId } = this.props;\n        const { selectedIndex } = this.state;\n        const { chatId, media } = update;\n        if (chatId !== currentChatId) return;\n\n        this.setMediaState(media, selectedIndex);\n    };\n\n    onClientUpdateMediaTab = update => {\n        const { chatId, index } = update;\n        if (chatId !== this.props.chatId) return;\n\n        this.setState({\n            selectedIndex: index\n        }, () => {\n            if (!this.hasObserver()) this.setSelection();\n        });\n    };\n\n    setSelection = (transition = true) => {\n        const { selectedIndex, isSmallWidth } = this.state;\n        if (selectedIndex === -1) return;\n\n        const padding = 3;\n\n        const scroll = this.filtersRef.current;\n\n        let item = null;\n        let left = 0;\n        const photoAndVideoFilter = this.filterRef.get('photoAndVideo');\n        if (selectedIndex === 1 && photoAndVideoFilter) {\n            item = photoAndVideoFilter.firstChild;\n            left = item.offsetLeft;\n        }\n\n        const documentFilter = this.filterRef.get('document');\n        if (selectedIndex === 2 && documentFilter) {\n            item = documentFilter.firstChild;\n            left = item.offsetLeft;\n        }\n\n        const audioFilter = this.filterRef.get('audio');\n        if (selectedIndex === 3 && audioFilter) {\n            item = audioFilter.firstChild;\n            left = item.offsetLeft;\n        }\n\n        const urlFilter = this.filterRef.get('url');\n        if (selectedIndex === 4 && urlFilter) {\n            item = urlFilter.firstChild;\n            left = item.offsetLeft;\n        }\n\n        const voiceNoteFilter = this.filterRef.get('voiceNote');\n        if (selectedIndex === 5 && voiceNoteFilter) {\n            item = voiceNoteFilter.firstChild;\n            left = item.offsetLeft;\n        }\n\n        const groupsInCommonFilter = this.filterRef.get('groupsInCommon');\n        if (selectedIndex === 6 && groupsInCommonFilter) {\n            item = groupsInCommonFilter.firstChild;\n            left = item.offsetLeft;\n        }\n\n        if (!item) return;\n\n        const filterSelection = this.filterSelectionRef.current;\n        if (filterSelection) {\n            const transitionStyle = transition ? 'transition: left 0.25s ease, width 0.25s ease' : null;\n            filterSelection.style.cssText = `left: ${left - padding}px; width: ${item.scrollWidth + 2 * padding}px; ${transitionStyle}`;\n        }\n\n        if (item && transition){\n            const { animator } = this;\n\n            if (animator) {\n                animator.stop();\n            }\n\n            this.animator = new Animator(250, [\n                {\n                    from: scroll.scrollLeft,\n                    to: clamp(left - scroll.offsetWidth / 2 + item.offsetWidth / 2, 0, scroll.scrollWidth - scroll.offsetWidth),\n                    func: left => (scroll.scrollLeft = left)\n                }\n            ]);\n\n            setTimeout(() => {\n                if (!this.animator) return;\n\n                this.animator.start();\n            }, 0);\n\n\n            // item.scrollIntoView();\n        }\n    };\n\n    handleFilterClick = (event, id) => {\n        if (event && event.button !== 0) return;\n        const { chatId, onClick } = this.props;\n\n        onClick && onClick(event);\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaTab',\n            chatId,\n            index: id\n        });\n    };\n\n    render() {\n        const { t } = this.props;\n        const { selectedIndex, photoAndVideo, document, audio, url, voiceNote, groupsInCommon } = this.state;\n\n        const tabsCount =\n            (photoAndVideo.length > 0 ? 1 : 0) +\n            (document.length > 0 ? 1 : 0) +\n            (audio.length > 0 ? 1 : 0) +\n            (url.length > 0 ? 1 : 0) +\n            (voiceNote.length > 0 ? 1 : 0) +\n            (groupsInCommon.length > 0 ? 1 : 0);\n\n        const hasSharedMedia = photoAndVideo.length > 0\n            || document.length > 0\n            || audio.length > 0\n            || url.length > 0\n            || voiceNote.length > 0\n            || groupsInCommon.length > 0;\n\n        if (!hasSharedMedia) {\n            return null;\n        }\n\n        this.filterRef = new Map();\n        return (\n            <div className={classNames('tabs', 'shared-media-tabs')}>\n                <div className='tabs-bottom-border'/>\n                <div ref={this.filtersRef} className={classNames('filters', {'shared-media-tabs-container': tabsCount > 1})}>\n                    {photoAndVideo.length > 0 && (\n                        <div\n                            ref={r => this.filterRef.set('photoAndVideo', r)}\n                            className={classNames('filter', {'shared-media-tab': tabsCount > 1}, { 'item-selected': selectedIndex === 1})}\n                            onMouseDown={e => this.handleFilterClick(e, 1)}>\n                            <span>{t('SharedMediaTab2')}</span>\n                        </div>\n                    )}\n                    {document.length > 0 && (\n                        <div\n                            ref={r => this.filterRef.set('document', r)}\n                            className={classNames('filter', {'shared-media-tab': tabsCount > 1}, { 'item-selected': selectedIndex === 2})}\n                            onMouseDown={e => this.handleFilterClick(e, 2)}>\n                            <span>{t('SharedFilesTab2')}</span>\n                        </div>\n                    )}\n                    {audio.length > 0 && (\n                        <div\n                            ref={r => this.filterRef.set('audio', r)}\n                            className={classNames('filter', {'shared-media-tab': tabsCount > 1}, { 'item-selected': selectedIndex === 3})}\n                            onMouseDown={e => this.handleFilterClick(e, 3)}>\n                            <span>{t('SharedMusicTab2')}</span>\n                        </div>\n                    )}\n                    {url.length > 0 && (\n                        <div\n                            ref={r => this.filterRef.set('url', r)}\n                            className={classNames('filter', {'shared-media-tab': tabsCount > 1}, { 'item-selected': selectedIndex === 4})}\n                            onMouseDown={e => this.handleFilterClick(e, 4)}>\n                            <span>{t('SharedLinksTab2')}</span>\n                        </div>\n                    )}\n                    {voiceNote.length > 0 && (\n                        <div\n                            ref={r => this.filterRef.set('voiceNote', r)}\n                            className={classNames('filter', {'shared-media-tab': tabsCount > 1}, { 'item-selected': selectedIndex === 5})}\n                            onMouseDown={e => this.handleFilterClick(e, 5)}>\n                            <span>{t('SharedVoiceTab2')}</span>\n                        </div>\n                    )}\n                    {groupsInCommon.length > 0 && (\n                        <div\n                            ref={r => this.filterRef.set('groupsInCommon', r)}\n                            className={classNames('filter', {'shared-media-tab': tabsCount > 1}, { 'item-selected': selectedIndex === 6})}\n                            onMouseDown={e => this.handleFilterClick(e, 6)}>\n                            <span>{t('SharedGroupsTab2')}</span>\n                        </div>\n                    )}\n                    <div ref={this.filterSelectionRef} className='filter-selection'/>\n                </div>\n            </div>\n        );\n    }\n\n}\n\nSharedMediaTabs.propTypes = {\n    chatId: PropTypes.number,\n    onClick: PropTypes.func\n};\n\nexport default withTranslation()(SharedMediaTabs);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M18,6.5 C18.5522847,6.5 19,6.94771525 19,7.5 L19,18 C19,19.6568542 17.6568542,21 16,21 L8,21 C6.34314575,21 5,19.6568542 5,18 L5,7.5 C5,6.94771525 5.44771525,6.5 6,6.5 L18,6.5 Z M17,8.5 L7,8.5 L7,18 C7,18.5522847 7.44771525,19 8,19 L16,19 C16.5522847,19 17,18.5522847 17,18 L17,8.5 Z M10,2 L14,2 C14.2210137,2 14.434484,2.07316447 14.6080295,2.20608063 L14.7071068,2.29289322 L15.415,3 L19,3 C19.5128358,3 19.9355072,3.38604019 19.9932723,3.88337887 L20,4 C20,4.51283584 19.6139598,4.93550716 19.1166211,4.99327227 L19,5 L5,5 C4.44771525,5 4,4.55228475 4,4 C4,3.48716416 4.38604019,3.06449284 4.88337887,3.00672773 L5,3 L8.584,3 L9.29289322,2.29289322 C9.44917353,2.1366129 9.65185492,2.03740171 9.86855602,2.00867243 L10,2 L14,2 L10,2 Z' />,\n    'Delete'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M11.8025478,4.79529691 C11.8025478,3.93005081 12.5039683,3.22863025 13.3692144,3.22863025 C13.7633775,3.22863025 14.1430567,3.37720768 14.4325315,3.64473128 L22.2284036,10.8494344 C22.8638434,11.4366882 22.9029059,12.4278772 22.2883553,13.0917108 L22.2284036,13.1505656 L14.4325315,20.3552687 C13.7970916,20.9425225 12.8059026,20.90346 12.2186488,20.2680201 C11.9511252,19.9785454 11.8025478,19.5988662 11.8025478,19.2047031 L11.8025478,16.4249931 C8.21922017,16.6092505 5.79479016,17.8111183 4.43312712,19.9909578 L4.29164834,20.2262356 C3.95336498,20.8131459 3.20334729,21.0146979 2.61643694,20.6764146 C2.24185558,20.4605134 2.00860424,20.0633528 2.00249611,19.6310483 C1.8981509,12.2459874 5.13388305,8.13673748 11.4825227,7.6491321 L11.8025478,7.62777147 L11.8025478,4.79529691 Z M13.8025478,5.78581808 L13.8025478,8.6 C13.8025478,9.15228475 13.3548325,9.6 12.8025478,9.6 C7.49232524,9.6 4.65375859,12.0566924 4.1006582,17.2535243 C6.09650127,15.345115 9.01935671,14.4 12.8025478,14.4 C13.3548325,14.4 13.8025478,14.8477153 13.8025478,15.4 L13.8025478,18.2142808 L20.5271714,12.0005066 L13.8025478,5.78581808 Z' />,\n    'Share'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport MenuList from '@material-ui/core/MenuList';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Popover from '@material-ui/core/Popover';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ChatBubbleOutlineOutlinedIcon from '@material-ui/icons/ChatBubbleOutlineOutlined';\nimport DeleteIcon from '../../../Assets/Icons/Delete';\nimport ShareIcon from '../../../Assets/Icons/Share';\nimport { deleteMessages, forwardMessages, openChat } from '../../../Actions/Client';\nimport MessageStore from '../../../Stores/MessageStore';\nimport './ContextMenu.css';\n\nclass ContextMenu extends React.Component {\n    handleOpenMessage = event => {\n        const { chatId, messageId, onClose } = this.props;\n\n        onClose(event);\n\n        openChat(chatId, messageId);\n    };\n\n    handleForward = event => {\n        const { chatId, messageId, onClose } = this.props;\n\n        onClose(event);\n\n        forwardMessages(chatId, [messageId]);\n    };\n\n    handleDelete = event => {\n        const { chatId, messageId, onClose } = this.props;\n\n        onClose(event);\n\n        deleteMessages(chatId, [messageId]);\n    };\n\n    render() {\n        const { t, chatId, messageId, open, onClose, anchorPosition, showOpenMessage } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { can_be_forwarded, can_be_deleted_only_for_self, can_be_deleted_for_all_users } = message;\n\n        return (\n            <Popover\n                open={open}\n                onClose={onClose}\n                anchorReference='anchorPosition'\n                anchorPosition={anchorPosition}\n                anchorOrigin={{\n                    vertical: 'bottom',\n                    horizontal: 'right'\n                }}\n                transformOrigin={{\n                    vertical: 'top',\n                    horizontal: 'left'\n                }}\n                onMouseDown={e => e.stopPropagation()}\n                onClick={e => e.stopPropagation()}>\n                <MenuList>\n                    {showOpenMessage && (\n                        <MenuItem onClick={this.handleOpenMessage}>\n                            <ListItemIcon>\n                                <ChatBubbleOutlineOutlinedIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('GoToMessage')} />\n                        </MenuItem>\n                    )}\n                    {can_be_forwarded && (\n                        <MenuItem onClick={this.handleForward}>\n                            <ListItemIcon>\n                                <ShareIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Forward')} />\n                        </MenuItem>\n                    )}\n                    {(can_be_deleted_only_for_self || can_be_deleted_for_all_users) && (\n                        <MenuItem color='secondary' onClick={this.handleDelete}>\n                            <ListItemIcon>\n                                <DeleteIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Delete')} />\n                        </MenuItem>\n                    )}\n                </MenuList>\n            </Popover>\n        );\n    }\n\n}\n\nContextMenu.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    anchorPosition: PropTypes.object.isRequired,\n    open: PropTypes.bool.isRequired,\n    onClose: PropTypes.func.isRequired,\n    showOpenMessage: PropTypes.bool\n};\n\nexport default withTranslation()(ContextMenu);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ContextMenu from './ContextMenu';\nimport { getSrc } from '../../../Utils/File';\nimport { getSize } from '../../../Utils/Common';\nimport { isBlurredThumbnail } from '../../../Utils/Media';\nimport { PHOTO_SIZE, PHOTO_THUMBNAIL_SIZE } from '../../../Constants';\nimport FileStore from '../../../Stores/FileStore';\nimport './SharedPhoto.css';\n\nclass SharedPhoto extends React.Component {\n    state = { };\n\n    static getDerivedStateFromProps(props, state) {\n        const { photo, size, thumbnailSize } = props;\n        const { prevPhoto } = state;\n        if (photo !== prevPhoto) {\n            return {\n                prevPhoto: photo,\n\n                contextMenu: false,\n                left: 0,\n                top: 0,\n\n                photoSize: getSize(photo.sizes, size),\n                thumbSize: getSize(photo.sizes, thumbnailSize),\n                minithumbnail: photo.minithumbnail\n            };\n        }\n\n        return null;\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { chatId, messageId, photo, showOpenMessage } = this.props;\n        const { contextMenu, left, top } = this.state;\n\n        if (chatId !== nextProps.chatId) {\n            return true;\n        }\n\n        if (messageId !== nextProps.messageId) {\n            return true;\n        }\n\n        if (photo !== nextProps.photo) {\n            return true;\n        }\n\n        if (showOpenMessage !== nextProps.showOpenMessage) {\n            return true;\n        }\n\n        if (contextMenu !== nextState.contextMenu) {\n            return true;\n        }\n\n        if (left !== nextState.left) {\n            return true;\n        }\n\n        if (top !== nextState.top) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        FileStore.on('clientUpdatePhotoBlob', this.onClientUpdatePhotoBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdatePhotoBlob', this.onClientUpdatePhotoBlob);\n    }\n\n    onClientUpdatePhotoBlob = update => {\n        const { photoSize, thumbSize } = this.state;\n        const { fileId } = update;\n\n        if (photoSize && photoSize.photo && photoSize.photo.id === fileId) {\n            this.forceUpdate();\n        } else if (thumbSize && thumbSize.photo && thumbSize.photo.id === fileId) {\n            this.forceUpdate();\n        }\n    };\n\n    handleOpenContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    render() {\n        const { chatId, messageId, openMedia, showOpenMessage, style } = this.props;\n        const { minithumbnail, thumbSize, photoSize, contextMenu, left, top } = this.state;\n\n        if (!photoSize) return null;\n\n        const miniSrc = minithumbnail ? 'data:image/jpeg;base64, ' + minithumbnail.data : null;\n        const thumbSrc = getSrc(thumbSize ? thumbSize.photo : null);\n        const src = getSrc(photoSize.photo);\n        const isBlurred = miniSrc || isBlurredThumbnail(thumbSize);\n\n        return (\n            <>\n                <div className='shared-photo' style={style} onClick={openMedia} onContextMenu={this.handleOpenContextMenu}>\n                    <div className='shared-photo-content' style={{ backgroundImage: `url(${thumbSrc || miniSrc})`, backgroundSize: 'cover' }}>\n                        {src !== thumbSrc && (\n                            <div className='shared-photo-main-content' style={{ backgroundImage: `url(${src})` }} />\n                        )}\n                    </div>\n                </div>\n                <ContextMenu\n                    chatId={chatId}\n                    messageId={messageId}\n                    anchorPosition={{ top, left }}\n                    open={contextMenu}\n                    showOpenMessage={showOpenMessage}\n                    onClose={this.handleCloseContextMenu}\n                />\n            </>\n        );\n    }\n}\n\nSharedPhoto.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    photo: PropTypes.object,\n    showOpenMessage: PropTypes.bool,\n    openMedia: PropTypes.func,\n\n    size: PropTypes.number,\n    thumbnailSize: PropTypes.number,\n    style: PropTypes.object\n};\n\nSharedPhoto.defaultProps = {\n    size: PHOTO_SIZE,\n    thumbnailSize: PHOTO_THUMBNAIL_SIZE\n};\n\nexport default SharedPhoto;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport ContextMenu from './ContextMenu';\nimport { openMedia } from '../../../Utils/Message';\nimport { getMedia } from '../../../Utils/Media';\nimport MessageStore from '../../../Stores/MessageStore';\nimport './SharedDocument.css';\n\nclass SharedDocument extends React.Component {\n    state = {\n        contextMenu: false,\n        left: 0,\n        top: 0\n    };\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { chatId, messageId, showOpenMessage } = this.props;\n        const { contextMenu, left, top } = this.state;\n\n        if (chatId !== nextProps.chatId) {\n            return true;\n        }\n\n        if (messageId !== nextProps.messageId) {\n            return true;\n        }\n\n        if (showOpenMessage !== nextProps.showOpenMessage) {\n            return true;\n        }\n\n        if (contextMenu !== nextState.contextMenu) {\n            return true;\n        }\n\n        if (left !== nextState.left) {\n            return true;\n        }\n\n        if (top !== nextState.top) {\n            return true;\n        }\n\n        return false;\n    }\n\n    handleOpenContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    render() {\n        const { chatId, messageId, showOpenMessage, i18n } = this.props;\n        const { contextMenu, left, top } = this.state;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { date } = message;\n\n        const dateString = new Date(date * 1000).toLocaleDateString([i18n.language], {\n            day: 'numeric',\n            month: 'short',\n            year: 'numeric',\n            hour: 'numeric',\n            minute: 'numeric',\n            hour12: false\n        });\n\n        return (\n            <>\n                <div className='shared-document' onContextMenu={this.handleOpenContextMenu}>\n                    {getMedia(message, () => openMedia(chatId, messageId, true), { date: dateString })}\n                </div>\n                <ContextMenu\n                    chatId={chatId}\n                    messageId={messageId}\n                    anchorPosition={{ top, left }}\n                    open={contextMenu}\n                    showOpenMessage={showOpenMessage}\n                    onClose={this.handleCloseContextMenu}\n                />\n            </>\n        );\n    }\n}\n\nSharedDocument.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    showOpenMessage: PropTypes.bool\n};\n\nexport default withTranslation()(SharedDocument);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { getSrc } from '../../../Utils/File';\nimport { isBlurredThumbnail } from '../../../Utils/Media';\nimport { hasVideoNote } from '../../../Utils/Message';\nimport { THUMBNAIL_BLURRED_SIZE_90 } from '../../../Constants';\nimport FileStore from '../../../Stores/FileStore';\nimport './SharedLinkTile.css';\n\nclass SharedLinkTile extends React.Component {\n    componentDidMount() {\n        FileStore.on('clientUpdateAnimationThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdateAudioThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdateDocumentThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdatePhotoBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdateStickerThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdateVideoThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdateVideoNoteThumbnailBlob', this.onClientUpdatePhotoBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdateAnimationThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.off('clientUpdateAudioThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.off('clientUpdateDocumentThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.off('clientUpdatePhotoBlob', this.onClientUpdatePhotoBlob);\n        FileStore.off('clientUpdateStickerThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.off('clientUpdateVideoThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.off('clientUpdateVideoNoteThumbnailBlob', this.onClientUpdatePhotoBlob);\n    }\n\n    onClientUpdatePhotoBlob = update => {\n        const { thumbnail } = this.props;\n        if (!thumbnail) return;\n\n        const file = thumbnail.file || thumbnail.photo;\n        if (!file) return;\n\n        if (update.fileId === file.id) {\n            this.forceUpdate();\n        }\n    };\n\n    render() {\n        const { chatId, messageId, thumbnail, minithumbnail, title } = this.props;\n\n        const miniSrc = minithumbnail ? 'data:image/jpeg;base64, ' + minithumbnail.data : null;\n        const src = getSrc(thumbnail ? thumbnail.file || thumbnail.photo : null);\n        const isBlurred = (!src && miniSrc) || isBlurredThumbnail(thumbnail, THUMBNAIL_BLURRED_SIZE_90);\n        const isVideoNote = hasVideoNote(chatId, messageId);\n        const hasSrc = Boolean(src || miniSrc);\n\n        const tileColor = `tile_color_${(Math.abs(title.charCodeAt(0)) % 7) + 1}`;\n\n        return (\n            <div className={classNames('shared-link-tile', { [tileColor]: !hasSrc })}>\n                {hasSrc? (\n                    <img\n                        className={classNames(\n                            'shared-link-tile-photo',\n                            { 'shared-link-tile-photo-round': isVideoNote },\n                            { 'media-blurred': src && isBlurred },\n                            { 'media-mini-blurred': !src && miniSrc && isBlurred }\n                        )}\n                        draggable={false}\n                        src={src || miniSrc}\n                        alt=''\n                    />\n                ) : (\n                    <span>{title}</span>\n                )}\n            </div>\n        );\n    }\n}\n\nSharedLinkTile.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    minithumbnail: PropTypes.object,\n    thumbnail: PropTypes.object,\n    title: PropTypes.string\n};\n\nexport default SharedLinkTile;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ContextMenu from './ContextMenu';\nimport SafeLink from '../../Additional/SafeLink';\nimport SharedLinkTile from './SharedLinkTile';\nimport { getFirstLetter, getPhotoSize } from '../../../Utils/Common';\nimport { getFormattedText, substring } from '../../../Utils/Message';\nimport punycode from '../../../Utils/Punycode';\nimport { PHOTO_SIZE } from '../../../Constants';\nimport MessageStore from '../../../Stores/MessageStore';\nimport './SharedLink.css';\n\nclass SharedLink extends React.Component {\n    state = {\n        contextMenu: false,\n        left: 0,\n        top: 0\n    };\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { chatId, messageId, webPage, caption, showOpenMessage } = this.props;\n        const { contextMenu, left, top } = this.state;\n\n        if (chatId !== nextProps.chatId) {\n            return true;\n        }\n\n        if (messageId !== nextProps.messageId) {\n            return true;\n        }\n\n        if (webPage !== nextProps.webPage) {\n            return true;\n        }\n\n        if (caption !== nextProps.caption) {\n            return true;\n        }\n\n        if (showOpenMessage !== nextProps.showOpenMessage) {\n            return true;\n        }\n\n        if (contextMenu !== nextState.contextMenu) {\n            return true;\n        }\n\n        if (left !== nextState.left) {\n            return true;\n        }\n\n        if (top !== nextState.top) {\n            return true;\n        }\n\n        return false;\n    }\n\n    handleOpenContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    static isValidEntity(entity) {\n        if (!entity) return false;\n\n        const { type } = entity;\n        if (!type) return false;\n\n        return (\n            type['@type'] === 'textEntityTypeUrl' ||\n            type['@type'] === 'textEntityTypeTextUrl' ||\n            type['@type'] === 'textEntityTypeEmailAddress'\n        );\n    }\n\n    getTitleFromUrl(url) {\n        try {\n            url = url.startsWith('http') ? url : 'http://' + url;\n            const decodedUrl = decodeURI(url);\n\n            const hostname = new URL(decodedUrl).hostname.split('.');\n            const domain = hostname.length >= 2 ? hostname[hostname.length - 2] : new URL(decodedUrl).hostname;\n\n            return punycode.ToUnicode(domain);\n        } catch (error) {\n            console.error('url: ' + url + '\\n' + error);\n        }\n\n        return null;\n    }\n\n    render() {\n        const { chatId, messageId, webPage, showOpenMessage } = this.props;\n        const { contextMenu, left, top } = this.state;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        let thumbnail = null;\n        let minithumbnail = null;\n        let content = null;\n        let { display_url, description, photo, title, url, animation, audio, document, sticker, video, video_note: videoNote } = webPage || {\n            title: '',\n            description: {\n                '@type': 'formattedText',\n                text: '',\n                entities: []\n            },\n            photo: null,\n            animation: null,\n            audio: null,\n            document: null,\n            sticker: null,\n            video: null,\n            video_note: null,\n            url: ''\n        };\n\n        if (animation) {\n            minithumbnail = animation.minithumbnail;\n            thumbnail = animation.thumbnail;\n        } else if (audio) {\n            minithumbnail = audio.album_cover_minithumbnail;\n            thumbnail = audio.album_cover_thumbnail;\n        } else if (document) {\n            minithumbnail = document.minithumbnail;\n            thumbnail = document.thumbnail;\n        } else if (sticker) {\n            minithumbnail = sticker.minithumbnail;\n            thumbnail = sticker.thumbnail;\n        } else if (video) {\n            minithumbnail = video.minithumbnail;\n            thumbnail = video.thumbnail;\n        } else if (videoNote) {\n            minithumbnail = videoNote.minithumbnail;\n            thumbnail = videoNote.thumbnail;\n        }\n\n        if (!thumbnail && !minithumbnail && photo) {\n            minithumbnail = photo.minithumbnail;\n            thumbnail = getPhotoSize(photo.sizes, PHOTO_SIZE);\n        }\n\n        let { text, caption } = message.content;\n        text = text || caption;\n        if (text) {\n            const { entities } = text;\n            if (entities && entities.length > 0) {\n                const longTextMaxLength = 40;\n                const urlEntities = entities.filter(SharedLink.isValidEntity);\n                const showLinks = urlEntities.length > 1 || text.text.length > longTextMaxLength;\n                const oneLinkText = entities.length === 1 && entities[0].offset === 0 && entities[0].length === text.text.length;\n\n                const links =\n                    urlEntities.map((x, i) => {\n                        const entityText = substring(text.text, x.offset, x.offset + x.length);\n                        url = entityText;\n                        let mail = false;\n\n                        switch (x.type['@type']) {\n                            case 'textEntityTypeTextUrl': {\n                                const { url: typeUrl } = x.type;\n                                if (typeUrl) {\n                                    url = typeUrl;\n                                }\n                                break;\n                            }\n                            case 'textEntityTypeUrl': {\n                                break;\n                            }\n                            case 'textEntityTypeEmailAddress':\n                                mail = true;\n                                break;\n                        }\n\n                        title = title || this.getTitleFromUrl(url) || ' ';\n\n                        return (\n                            <SafeLink key={i} className='shared-link-url' url={url} mail={mail}>\n                                {entityText}\n                            </SafeLink>\n                        );\n                    });\n\n                if (showLinks) {\n                    let d = (urlEntities.length > 0 && urlEntities[0].offset > 0 ? text.text.substring(0, urlEntities[0].offset) : text.text) || description.text || '';\n                    d = d.trim();\n                    content = (\n                        <>\n                            {d && !oneLinkText && <div className='web-page-description'>{d}</div>}\n                            <div>{links}</div>\n                        </>);\n                } else {\n                    let d = description.text || '';\n                    d = d.trim();\n                    content = (\n                        <>\n                            {d && <div className='web-page-description'>{d}</div>}\n                            <div className='shared-link-text'>{getFormattedText(text, x => x, { isValidEntity: SharedLink.isValidEntity })}</div>\n                        </>);\n                }\n\n                if (webPage) {\n                    title = title || this.getTitleFromUrl(url);\n                }\n            }\n        }\n\n        return (\n            <>\n                <div className='shared-link' onContextMenu={this.handleOpenContextMenu}>\n                    <SharedLinkTile\n                        minithumbnail={minithumbnail}\n                        thumbnail={thumbnail}\n                        title={getFirstLetter(this.getTitleFromUrl(url))}\n                    />\n                    <div className='shared-link-content'>\n                        {title && <div className='web-page-title'>{title}</div>}\n                        {content}\n                    </div>\n                </div>\n                <ContextMenu\n                    chatId={chatId}\n                    messageId={messageId}\n                    anchorPosition={{ top, left }}\n                    open={contextMenu}\n                    showOpenMessage={showOpenMessage}\n                    onClose={this.handleCloseContextMenu}\n                />\n            </>\n        );\n    }\n}\n\nSharedLink.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    webPage: PropTypes.object,\n    caption: PropTypes.object,\n    showOpenMessage: PropTypes.bool,\n    openMedia: PropTypes.func,\n};\n\nexport default SharedLink;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport AudioAction from '../../Message/Media/AudioAction';\nimport ContextMenu from './ContextMenu';\nimport MediaStatus from '../../Message/Media/MediaStatus';\nimport MessageAuthor from '../../Message/MessageAuthor';\nimport VoiceNoteTile from '../VoiceNoteTile';\nimport MessageStore from '../../../Stores/MessageStore';\nimport './SharedVoiceNote.css';\n\nclass SharedVoiceNote extends React.Component {\n    state = {\n        contextMenu: false,\n        left: 0,\n        top: 0\n    };\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { chatId, messageId, voiceNote, showOpenMessage } = this.props;\n        const { contextMenu, left, top } = this.state;\n\n        if (chatId !== nextProps.chatId) {\n            return true;\n        }\n\n        if (messageId !== nextProps.messageId) {\n            return true;\n        }\n\n        if (voiceNote !== nextProps.voiceNote) {\n            return true;\n        }\n\n        if (showOpenMessage !== nextProps.showOpenMessage) {\n            return true;\n        }\n\n        if (contextMenu !== nextState.contextMenu) {\n            return true;\n        }\n\n        if (left !== nextState.left) {\n            return true;\n        }\n\n        if (top !== nextState.top) {\n            return true;\n        }\n\n        return false;\n    }\n\n    handleOpenContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    render() {\n        const { chatId, i18n, messageId, voiceNote, openMedia, showOpenMessage } = this.props;\n        const { contextMenu, left, top } = this.state;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        if (!voiceNote) return null;\n\n        const { date, sender_user_id } = message;\n        const dateString = new Date(date * 1000).toLocaleDateString([i18n.language], {\n            day: 'numeric',\n            month: 'short',\n            year: 'numeric',\n            hour: 'numeric',\n            minute: 'numeric',\n            hour12: false\n        });\n\n        const { duration, voice: file } = voiceNote;\n\n        return (\n            <>\n                <div className='shared-voice-note' onContextMenu={this.handleOpenContextMenu}>\n                    <VoiceNoteTile chatId={chatId} messageId={messageId} file={file} openMedia={openMedia} />\n                    <div className='voice-note-content'>\n                        <div className='document-title'><MessageAuthor chatId={chatId} messageId={messageId} userId={sender_user_id} /></div>\n                        <div className='voice-note-meta'>\n                            <AudioAction\n                                chatId={chatId}\n                                messageId={messageId}\n                                duration={duration}\n                                file={file}\n                                date={dateString}\n                            />\n                            <MediaStatus chatId={chatId} messageId={messageId} icon={'\\u00A0•'} />\n                        </div>\n                    </div>\n                </div>\n                <ContextMenu\n                    chatId={chatId}\n                    messageId={messageId}\n                    anchorPosition={{ top, left }}\n                    open={contextMenu}\n                    showOpenMessage={showOpenMessage}\n                    onClose={this.handleCloseContextMenu}\n                />\n            </>\n\n        );\n    }\n}\n\nSharedVoiceNote.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    voiceNote: PropTypes.object,\n    showOpenMessage: PropTypes.bool,\n    openMedia: PropTypes.func\n};\n\nexport default withTranslation()(SharedVoiceNote);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport ContextMenu from './ContextMenu';\nimport { getSrc } from '../../../Utils/File';\nimport { getDurationString } from '../../../Utils/Common';\nimport { isBlurredThumbnail } from '../../../Utils/Media';\nimport { PHOTO_SIZE, PHOTO_THUMBNAIL_SIZE, THUMBNAIL_BLURRED_SIZE_90 } from '../../../Constants';\nimport FileStore from '../../../Stores/FileStore';\nimport './SharedVideo.css';\n\nclass SharedVideo extends React.Component {\n    state = {\n        contextMenu: false,\n        left: 0,\n        top: 0\n    };\n\n    componentDidMount() {\n        FileStore.on('clientUpdateVideoThumbnailBlob', this.onClientUpdateVideoThumbnailBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdateVideoThumbnailBlob', this.onClientUpdateVideoThumbnailBlob);\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { chatId, messageId, video, showOpenMessage } = this.props;\n        const { contextMenu, left, top } = this.state;\n\n        if (chatId !== nextProps.chatId) {\n            return true;\n        }\n\n        if (messageId !== nextProps.messageId) {\n            return true;\n        }\n\n        if (video !== nextProps.video) {\n            return true;\n        }\n\n        if (showOpenMessage !== nextProps.showOpenMessage) {\n            return true;\n        }\n\n        if (contextMenu !== nextState.contextMenu) {\n            return true;\n        }\n\n        if (left !== nextState.left) {\n            return true;\n        }\n\n        if (top !== nextState.top) {\n            return true;\n        }\n\n        return false;\n    }\n\n    onClientUpdateVideoThumbnailBlob = update => {\n        const { thumbnail } = this.props.video;\n        const { fileId } = update;\n\n        if (!thumbnail) return;\n\n        const { file } = thumbnail;\n        if (file && file.id === fileId) {\n            this.forceUpdate();\n        }\n    };\n\n    handleOpenContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    render() {\n        const { chatId, messageId, openMedia, style, showOpenMessage } = this.props;\n        const { minithumbnail, thumbnail, duration } = this.props.video;\n        const { contextMenu, left, top } = this.state;\n\n        const miniSrc = minithumbnail ? 'data:image/jpeg;base64, ' + minithumbnail.data : null;\n        const thumbSrc = getSrc(thumbnail ? thumbnail.file : null);\n        const isBlurred = thumbSrc ? isBlurredThumbnail(thumbnail) : Boolean(miniSrc);\n\n        return (\n            <>\n                <div className='shared-photo' style={style} onClick={openMedia} onContextMenu={this.handleOpenContextMenu}>\n                    <div className='shared-video-wrapper'>\n                        <div\n                            className={classNames('shared-video-content', {\n                                'media-blurred': isBlurred,\n                                'media-mini-blurred': !thumbSrc && isBlurred\n                            })}\n                            style={{ backgroundImage: `url(${thumbSrc || miniSrc})` }}\n                        />\n                        <div className='shared-video-meta'>{getDurationString(duration)}</div>\n                    </div>\n                </div>\n                <ContextMenu\n                    chatId={chatId}\n                    messageId={messageId}\n                    anchorPosition={{ top, left }}\n                    open={contextMenu}\n                    showOpenMessage={showOpenMessage}\n                    onClose={this.handleCloseContextMenu}\n                />\n            </>\n        );\n    }\n}\n\nSharedVideo.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    video: PropTypes.object,\n    showOpenMessage: PropTypes.bool,\n    openMedia: PropTypes.func,\n\n    size: PropTypes.number,\n    thumbnailSize: PropTypes.number,\n    style: PropTypes.object\n};\n\nSharedVideo.defaultProps = {\n    size: PHOTO_SIZE,\n    thumbnailSize: PHOTO_THUMBNAIL_SIZE\n};\n\nexport default SharedVideo;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport ListItem from '@material-ui/core/ListItem';\nimport Chat from '../../Tile/Chat';\nimport SharedPhoto from '../../Tile/SharedMedia/SharedPhoto';\nimport SharedDocument from '../../Tile/SharedMedia/SharedDocument';\nimport SharedLink from '../../Tile/SharedMedia/SharedLink';\nimport SharedVoiceNote from '../../Tile/SharedMedia/SharedVoiceNote';\nimport SharedVideo from '../../Tile/SharedMedia/SharedVideo';\nimport { loadChatsContent, loadMessageContents } from '../../../Utils/File';\nimport { openMedia } from '../../../Utils/Message';\nimport { openChat } from '../../../Actions/Client';\nimport { SHARED_MESSAGE_SLICE_LIMIT } from '../../../Constants';\nimport FileStore from '../../../Stores/FileStore';\nimport MessageStore from '../../../Stores/MessageStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './SharedMediaContent.css';\n\nconst overScanCount = 5;\n\nclass SharedMediaContent extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.listRef = React.createRef();\n\n        this.state = {\n            scrollTop: 0\n        }\n\n        // this.onWindowResize = throttle(this.onWindowResize, 250);\n    }\n\n    static getItemHeight(item) {\n        if (!item) return undefined;\n\n        switch (item['@type']) {\n            case 'message': {\n                const { content } = item;\n                switch (content['@type']) {\n                    case 'messagePhoto': {\n                        return undefined;\n                    }\n                    case 'messageVideo': {\n                        return undefined;\n                    }\n                    case 'messageDocument': {\n                        return 78;\n                    }\n                    case 'messageAudio': {\n                        return 94;\n                    }\n                    case 'messageVoiceNote': {\n                        return 74;\n                    }\n                    default: {\n                        return undefined;\n                    }\n                }\n            }\n            case 'chat': {\n                return 74;\n            }\n            default: {\n                return undefined;\n            }\n        }\n    }\n\n    static getRowHeight(selectedIndex) {\n        switch (selectedIndex) {\n            case 1: {\n                return undefined;\n            }\n            case 2: {\n                return 78;\n            }\n            case 3: {\n                return 94;\n            }\n            case 4: {\n                return undefined;\n            }\n            case 5: {\n                return 74;\n            }\n            case 6: {\n                return 74;\n            }\n        }\n\n        return undefined;\n    }\n\n    static getItemTemplate = (selectedIndex, item, onOpen) => {\n        const migratedChatId = -1;\n\n        switch (selectedIndex) {\n            case 1: {\n                const { chat_id, id, content } = item;\n                if (content['@type'] === 'messageVideo') {\n                    return (\n                        <SharedVideo\n                            key={`chat_id=${chat_id}_message_id=${id}`}\n                            chatId={chat_id}\n                            messageId={id}\n                            video={content.video}\n                            openMedia={onOpen}\n                            showOpenMessage={chat_id !== migratedChatId}\n                        />\n                    );\n                }\n\n                return (\n                    <SharedPhoto\n                        key={`chat_id=${chat_id}_message_id=${id}`}\n                        chatId={chat_id}\n                        messageId={id}\n                        photo={content.photo}\n                        openMedia={onOpen}\n                        showOpenMessage={chat_id !== migratedChatId}\n                    />\n                );\n            }\n            case 2: {\n                const { chat_id, id } = item;\n                return (\n                    <SharedDocument\n                        key={`chat_id=${chat_id}_message_id=${id}`}\n                        chatId={chat_id}\n                        messageId={id}\n                        showOpenMessage={chat_id !== migratedChatId}\n                    />\n                );\n            }\n            case 3: {\n                const { chat_id, id, content } = item;\n                return (\n                    <SharedDocument\n                        key={`chat_id=${chat_id}_message_id=${id}`}\n                        chatId={chat_id}\n                        messageId={id}\n                        showOpenMessage={chat_id !== migratedChatId}\n                    />\n                );\n            }\n            case 4: {\n                const { chat_id, id, content } = item;\n                return (\n                    <SharedLink\n                        key={`chat_id=${chat_id}_message_id=${id}`}\n                        chatId={chat_id}\n                        messageId={id}\n                        webPage={content.web_page}\n                        caption={content.caption}\n                        openMedia={onOpen}\n                        showOpenMessage={chat_id !== migratedChatId}\n                    />\n                );\n            }\n            case 5: {\n                const { chat_id, id, content } = item;\n                return (\n                    <SharedVoiceNote\n                        key={`chat_id=${chat_id}_message_id=${id}`}\n                        chatId={chat_id}\n                        messageId={id}\n                        voiceNote={content.voice_note}\n                        openMedia={onOpen}\n                        showOpenMessage={chat_id !== migratedChatId}\n                    />\n                );\n            }\n            case 6: {\n                const { id } = item;\n                return (\n                    <ListItem\n                        button\n                        key={`chat_id=${id}`}\n                        className='groups-in-common-item'>\n                        <Chat chatId={id} onSelect={onOpen} />\n                    </ListItem>\n                );\n            }\n        }\n\n        return null;\n    };\n\n    static isValidMessage(selectedIndex, message) {\n        if (!message) return false;\n\n        return SharedMediaContent.isValidContent(selectedIndex, message.content);\n    };\n\n    static isValidContent(selectedIndex, content) {\n        switch (selectedIndex) {\n            case 1: {\n                return SharedMediaContent.isValidPhotoAndVideoContent(content);\n            }\n            case 2: {\n                return SharedMediaContent.isValidDocumentContent(content);\n            }\n            case 3: {\n                return SharedMediaContent.isValidAudioContent(content);\n            }\n            case 4: {\n                return SharedMediaContent.isValidUrlContent(content);\n            }\n            case 5: {\n                return SharedMediaContent.isValidVoiceNoteContent(content);\n            }\n            case 6: {\n                return true;\n            }\n        }\n\n        return false;\n    }\n\n    static isValidPhotoAndVideoContent(content) {\n        return content && (content['@type'] === 'messagePhoto' || content['@type'] === 'messageVideo');\n    }\n\n    static isValidAudioContent(content) {\n        return content && content['@type'] === 'messageAudio';\n    }\n\n    static isValidDocumentContent(content) {\n        return content && (content['@type'] === 'messageDocument' || content['@type'] === 'messageAudio');\n    }\n\n    static isValidUrlContent(content) {\n        if (!content) return false;\n\n        const { web_page, text, caption } = content;\n        if (web_page) return true;\n        if (!text && !caption) return false;\n\n        const { entities } = text || caption;\n        if (!entities) return false;\n\n        return entities.find(\n            x =>\n                x.type['@type'] === 'textEntityTypeUrl' ||\n                x.type['@type'] === 'textEntityTypeTextUrl' ||\n                x.type['@type'] === 'textEntityTypeEmailAddress'\n        );\n    }\n\n    static isValidVoiceNoteContent(content) {\n        return content && content['@type'] === 'messageVoiceNote';\n    }\n\n    static getFilter(selectedIndex) {\n        switch (selectedIndex) {\n            case 1: {\n                return { '@type': 'searchMessagesFilterPhotoAndVideo' };\n            }\n            case 2: {\n                return { '@type': 'searchMessagesFilterDocument' };\n            }\n            case 3: {\n                return { '@type': 'searchMessagesFilterAudio' };\n            }\n            case 4: {\n                return { '@type': 'searchMessagesFilterUrl' };\n            }\n            case 5: {\n                return { '@type': 'searchMessagesFilterVoiceNote' };\n            }\n            case 6: {\n                return null;\n            }\n        }\n\n        return null;\n    }\n\n    static getSource(selectedIndex, media) {\n        if (!media) {\n            return [];\n        }\n\n        switch (selectedIndex) {\n            case 1: {\n                return media.photoAndVideo || [];\n            }\n            case 2: {\n                return media.document || [];\n            }\n            case 3: {\n                return media.audio || [];\n            }\n            case 4: {\n                return media.url || [];\n            }\n            case 5: {\n                return media.voiceNote || [];\n            }\n            case 6: {\n                return media.groupsInCommon || [];\n            }\n        }\n\n        return [];\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { chatId } = props;\n\n        if (chatId !== state.prevChatId) {\n            const media = MessageStore.getMedia(props.chatId);\n\n            const photoAndVideo = media ? media.photoAndVideo : [];\n            const document = media ? media.document : [];\n            const audio = media ? media.audio : [];\n            const url = media ? media.url : [];\n            const voiceNote = media ? media.voiceNote : [];\n            const groupsInCommon = media ? media.groupsInCommon : [];\n\n            let selectedIndex = -1;\n            if (photoAndVideo.length > 0) {\n                selectedIndex = 1;\n            } else if (document.length > 0) {\n                selectedIndex = 2;\n            } else if (audio.length > 0) {\n                selectedIndex = 3;\n            } else if (url.length > 0) {\n                selectedIndex = 4;\n            } else if (voiceNote.length > 0) {\n                selectedIndex = 5;\n            } else if (groupsInCommon.length > 0) {\n                selectedIndex = 6;\n            }\n            const source = SharedMediaContent.getSource(selectedIndex, media).filter(x => SharedMediaContent.isValidContent(selectedIndex, x.content));\n\n            return {\n                prevChatId: props.chatId,\n                selectedIndex,\n                renderIds: new Map(),\n                rowHeight: SharedMediaContent.getRowHeight(selectedIndex),\n                items: source.slice(0, SHARED_MESSAGE_SLICE_LIMIT),\n                photoAndVideo,\n                document,\n                audio,\n                url,\n                voiceNote,\n                groupsInCommon,\n                isSmallWidth: false,\n                params: {\n                    loading: false,\n                    completed: false,\n                    migrateCompleted: false,\n                    filter: SharedMediaContent.getFilter(selectedIndex)\n                }\n            }\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        window.addEventListener('resize', this.onWindowResize);\n\n        MessageStore.on('clientUpdateMediaTab', this.onClientUpdateMediaTab);\n        MessageStore.on('clientUpdateChatMedia', this.onClientUpdateChatMedia);\n        MessageStore.on('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.on('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.on('updateMessageSendSucceeded', this.onUpdateMessageSend);\n        MessageStore.on('updateMessageSendFailed', this.onUpdateMessageSend);\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener('resize', this.onWindowResize);\n\n        MessageStore.off('clientUpdateMediaTab', this.onClientUpdateMediaTab);\n        MessageStore.off('clientUpdateChatMedia', this.onClientUpdateChatMedia);\n        MessageStore.off('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.off('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.off('updateMessageSendSucceeded', this.onUpdateMessageSend);\n        MessageStore.off('updateMessageSendFailed', this.onUpdateMessageSend);\n    }\n\n    onUpdateMessageContent = update => {\n        const { chat_id, message_id } = update;\n        const { chatId } = this.props;\n\n        if (chatId !== chat_id) return;\n\n        const { items, selectedIndex } = this.state;\n        if (!items.some(x => x.id === message_id)) return;\n\n        const media = MessageStore.getMedia(chatId);\n        this.setMediaState(media, selectedIndex);\n    };\n\n    onWindowResize = event => {\n        const { items, scrollTop } = this.state;\n\n        const { current: list } = this.listRef;\n        if (!list) return;\n\n        const offsetTop = list.offsetTop;\n        const viewportHeight = list.offsetParent.offsetHeight;\n\n        const renderIds = this.getRenderIds(items, viewportHeight, scrollTop - offsetTop);\n\n        this.setState({ ...renderIds });\n    };\n\n    onUpdateMessageSend = update => {\n        const { chatId } = this.props;\n        const { selectedIndex } = this.state;\n        const { message } = update;\n        if (chatId !== message.chat_id) {\n            return;\n        }\n\n        const media = MessageStore.getMedia(chatId);\n        this.setMediaState(media, selectedIndex);\n    };\n\n    onUpdateNewMessage = update => {\n        const { chatId } = this.props;\n        const { selectedIndex } = this.state;\n        const { message } = update;\n        if (chatId !== message.chat_id) {\n            return;\n        }\n\n        const media = MessageStore.getMedia(chatId);\n        this.setMediaState(media, selectedIndex);\n    };\n\n    onUpdateDeleteMessages = update => {\n        const { chatId } = this.props;\n        const { selectedIndex } = this.state;\n        const { chat_id } = update;\n        if (chatId !== chat_id) {\n            return;\n        }\n\n        const media = MessageStore.getMedia(chatId);\n        this.setMediaState(media, selectedIndex);\n    };\n\n    setMediaState = (media, selectedIndex) => {\n        const { scrollTop } = this.state;\n\n        const photoAndVideo = media ? media.photoAndVideo : [];\n        const document = media ? media.document : [];\n        const audio = media ? media.audio : [];\n        const url = media ? media.url : [];\n        const voiceNote = media ? media.voiceNote : [];\n        const groupsInCommon = media ? media.groupsInCommon : [];\n\n        const hasPhotoAndVideo = photoAndVideo.length > 0;\n        const hasDocument = document.length > 0;\n        const hasAudio = audio.length > 0;\n        const hasUrl = url.length > 0;\n        const hasVoiceNote = voiceNote.length > 0;\n        const hasGroupsInCommon = groupsInCommon.length > 0;\n\n        const replaceSelectedIndex =\n            selectedIndex === -1\n            || selectedIndex === 1 && !hasPhotoAndVideo\n            || selectedIndex === 2 && !hasDocument\n            || selectedIndex === 3 && !hasAudio\n            || selectedIndex === 4 && !hasUrl\n            || selectedIndex === 5 && !hasVoiceNote\n            || selectedIndex === 6 && !hasGroupsInCommon;\n        if (replaceSelectedIndex) {\n            if (hasPhotoAndVideo) {\n                selectedIndex = 1;\n            } else if (hasDocument) {\n                selectedIndex = 2;\n            } else if (hasAudio) {\n                selectedIndex = 3;\n            } else if (hasUrl) {\n                selectedIndex = 4;\n            } else if (hasVoiceNote) {\n                selectedIndex = 5;\n            } else if (hasGroupsInCommon) {\n                selectedIndex = 6;\n            }\n        }\n\n        const source = SharedMediaContent.getSource(selectedIndex, media).filter(x => SharedMediaContent.isValidContent(selectedIndex, x.content));\n        const items = source.slice(0, SHARED_MESSAGE_SLICE_LIMIT);\n\n        const { current: list } = this.listRef;\n        if (!list) return;\n\n        const offsetTop = list.offsetTop;\n        const viewportHeight = list.offsetParent.offsetHeight;\n\n        this.setState({\n            selectedIndex,\n            renderIds: this.getRenderIds(items, viewportHeight, scrollTop - offsetTop),\n            rowHeight: SharedMediaContent.getRowHeight(selectedIndex),\n            items,\n            params: {\n                loading: false,\n                completed: false,\n                migrateCompleted: false,\n                filter: SharedMediaContent.getFilter(selectedIndex)\n            },\n            photoAndVideo,\n            document,\n            audio,\n            url,\n            voiceNote,\n            groupsInCommon\n        });\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (prevProps.items !== this.props.chatId || prevState.selectedIndex !== this.state.selectedIndex) {\n            const { items } = this.state;\n\n            const store = FileStore.getStore();\n            switch (this.state.selectedIndex) {\n                case 1:\n                case 2:\n                case 3:\n                case 4:\n                case 5: {\n                    loadMessageContents(store, items);\n                    break;\n                }\n                case 6: {\n                    loadChatsContent(store, items);\n                    break;\n                }\n            }\n        }\n\n        // this.unobserveResize();\n        // this.observeResize();\n    }\n\n    onClientUpdateMediaTab = update => {\n        const { chatId: currentChatId } = this.props;\n        const { chatId, index: selectedIndex } = update;\n        if (chatId !== currentChatId) return;\n\n        const media = MessageStore.getMedia(currentChatId);\n\n        const photoAndVideo = media ? media.photoAndVideo : [];\n        const document = media ? media.document : [];\n        const audio = media ? media.audio : [];\n        const url = media ? media.url : [];\n        const voiceNote = media ? media.voiceNote : [];\n        const groupsInCommon = media ? media.groupsInCommon : [];\n\n        let source = [];\n        if (selectedIndex === 1) {\n            source = photoAndVideo;\n        } else if (selectedIndex === 2) {\n            source = document;\n        } else if (selectedIndex === 3) {\n            source = audio;\n        } else if (selectedIndex === 4) {\n            source = url;\n        } else if (selectedIndex === 5) {\n            source = voiceNote;\n        } else if (selectedIndex === 6) {\n            source = groupsInCommon;\n        }\n        source = source.filter(x => SharedMediaContent.isValidContent(selectedIndex, x.content));\n\n        this.setState({\n            selectedIndex,\n            renderIds: new Map(),\n            rowHeight: SharedMediaContent.getRowHeight(selectedIndex),\n            items: source.slice(0, SHARED_MESSAGE_SLICE_LIMIT),\n            photoAndVideo,\n            document,\n            audio,\n            url,\n            voiceNote,\n            groupsInCommon,\n            params: {\n                loading: false,\n                completed: false,\n                migrateCompleted: false,\n                filter: SharedMediaContent.getFilter(selectedIndex)\n            }\n        });\n    };\n\n    onClientUpdateChatMedia = update => {\n        const { chatId: currentChatId } = this.props;\n        const { selectedIndex } = this.state;\n\n        const { chatId } = update;\n        if (chatId !== currentChatId) return;\n\n        const media = MessageStore.getMedia(chatId);\n        this.setMediaState(media, selectedIndex);\n    };\n\n    handleScroll = (event, container) => {\n        const { params } = this.state;\n\n        if (params && !params.completed) {\n            this.onLoadNext(params);\n        } else {\n            // this.onLoadMigratedNext(params);\n        }\n    };\n\n    handleVirtScroll = (event, container) => {\n        const { current: list } = this.listRef;\n        if (!list) return;\n\n        this.setScrollPosition(container.scrollTop);\n    };\n\n    isVisibleItem = (index, viewportHeight, scrollTop) => {\n        const { rowHeight } = this.state;\n\n        const itemTop = index * rowHeight;\n        const itemBottom = (index + 1) * rowHeight;\n\n        return (\n            itemTop > scrollTop - overScanCount * rowHeight &&\n            itemBottom < scrollTop + viewportHeight + overScanCount * rowHeight\n        );\n    };\n\n    getRenderIds(source, viewportHeight, scrollTop) {\n        const renderIds = new Map();\n        const renderIdsList = [];\n        source.forEach((item, index) => {\n            if (this.isVisibleItem(index, viewportHeight, scrollTop)) {\n                renderIds.set(index, index);\n                renderIdsList.push(index);\n            }\n        });\n\n        return { renderIds, renderIdsList };\n    }\n\n    setScrollPosition = scrollTop => {\n        const { items, scrollTop: prevScrollTop, rowHeight } = this.state;\n\n        const { current: list } = this.listRef;\n        if (!list) return;\n\n        const offsetTop = list.offsetTop;\n        const viewportHeight = list.offsetParent.offsetHeight;\n\n        if (Math.abs(scrollTop - prevScrollTop) >= rowHeight) {\n            const renderIds = this.getRenderIds(items, viewportHeight, scrollTop - offsetTop);\n\n            this.setState({\n                scrollTop,\n                ...renderIds\n            });\n        }\n    };\n\n    onLoadNext = async (params, loadIncomplete = true) => {\n        const { chatId } = this.props;\n        const { items, selectedIndex } = this.state;\n        const { completed, filter, loading, messages: lastMessages } = params;\n\n        if (selectedIndex === 6) return;\n        if (!filter) return;\n        if (loading) return;\n        if (completed) return;\n\n        let fromMessageId = items.length > 0 ? items[items.length - 1].id : 0;\n        if (lastMessages) {\n            fromMessageId = lastMessages.length > 0 ? lastMessages[lastMessages.length - 1].id : 0;\n        }\n        params.loading = true;\n        params.requestId = new Date();\n\n        const result = await TdLibController.send({\n            '@type': 'searchChatMessages',\n            chat_id: chatId,\n            query: '',\n            sender_user_id: 0,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: SHARED_MESSAGE_SLICE_LIMIT,\n            filter\n        }).finally(() => {\n            params.loading = false;\n        });\n\n        TdLibController.send({\n            '@type': 'searchChatMessages',\n            chat_id: chatId,\n            query: '',\n            sender_user_id: 0,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: SHARED_MESSAGE_SLICE_LIMIT * 2,\n            filter\n        });\n\n        const { params: currentParams } = this.state;\n        if (!currentParams || currentParams.requestId !== params.requestId) {\n            return;\n        }\n\n        const { messages } = result;\n        params.messages = messages;\n        params.completed = messages.length === 0 || messages.total_count === 0;\n        params.items = items.concat(messages.filter(x => SharedMediaContent.isValidMessage(selectedIndex, x)));\n        const incompleteResults = loadIncomplete && messages.length > 0 && messages.length < SHARED_MESSAGE_SLICE_LIMIT;\n\n        MessageStore.setItems(result.messages);\n        const store = FileStore.getStore();\n        loadMessageContents(store, result.messages);\n\n        this.setState({ items: params.items });\n\n        if (params.completed) {\n            this.onLoadMigratedNext(params, true);\n        } else if (incompleteResults) {\n            this.onLoadNext(params, false);\n        }\n    };\n\n    onLoadMigratedNext(params, loadIncomplete) {\n\n    }\n\n    handleOpen = item => {\n        const { popup } = this.props;\n\n        switch (item['@type']) {\n            case 'message': {\n                const { chat_id, id } = item;\n\n                openMedia(chat_id, id, false);\n                break;\n            }\n            case 'chat': {\n                const { id } = item;\n                openChat(id);\n\n                if (popup) {\n                    TdLibController.clientUpdate({\n                        '@type': 'clientUpdateDialogChatId',\n                        chatId: 0\n                    });\n                }\n            }\n        }\n    };\n\n    render() {\n        const {\n            selectedIndex,\n            items = [],\n            renderIds,\n            photoAndVideo,\n            document,\n            audio,\n            url,\n            voiceNote,\n            groupsInCommon\n        } = this.state;\n\n        // console.log('[vlist] render', [selectedIndex, items, renderIds]);\n\n        const hasItems = photoAndVideo && photoAndVideo.length > 0\n            || document && document.length > 0\n            || audio && audio.length > 0\n            || url && url.length > 0\n            || voiceNote && voiceNote.length > 0\n            || groupsInCommon && groupsInCommon.length > 0;\n        if (!hasItems) {\n            return (<div ref={this.listRef}/>);\n        }\n\n        if (selectedIndex === 2 || selectedIndex === 3 || selectedIndex === 5) {\n            let contentHeight = 0;\n            const controls = items.map((x, index) => {\n                const { chat_id, id } = x;\n                const itemHeight = SharedMediaContent.getItemHeight(x);\n                if (!itemHeight) {\n                    return null;\n                }\n                contentHeight += itemHeight;\n\n                return ((!renderIds.size || renderIds.has(index)) && (\n                    <div key={`chat_id=${chat_id}_message_id=${id}`} className='shared-media-virt-item' style={{ top: contentHeight - itemHeight }}>\n                        {SharedMediaContent.getItemTemplate(selectedIndex, x, () => this.handleOpen(x))}\n                    </div>\n                ));\n            });\n\n            return (\n                <div ref={this.listRef} className='shared-media-virt-content' style={{ height: contentHeight }}>\n                    {controls}\n                </div>\n            );\n        }\n\n        return (\n            <div ref={this.listRef} className={classNames('shared-media-content', { 'shared-photos-list': selectedIndex === 1 })}>\n                {items.map(x => SharedMediaContent.getItemTemplate(selectedIndex, x, () => this.handleOpen(x)))}\n            </div>\n        );\n    }\n}\n\nSharedMediaContent.propTypes = {\n    chatId: PropTypes.number\n};\n\nexport default SharedMediaContent;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { compose } from '../../Utils/HOC';\nimport { withSnackbar } from 'notistack';\nimport { withTranslation } from 'react-i18next';\nimport AlternateEmailIcon from '@material-ui/icons/AlternateEmail';\nimport GroupIcon from '@material-ui/icons/Group';\nimport CallIcon from '@material-ui/icons/Call';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport Divider from '@material-ui/core/Divider';\nimport ErrorOutlineIcon from '@material-ui/icons/ErrorOutline';\nimport HeadsetIcon from '@material-ui/icons/Headset';\nimport IconButton from '@material-ui/core/IconButton';\nimport InsertDriveFileIcon from '../../Assets/Icons/Document2';\nimport InsertLinkIcon from '@material-ui/icons/InsertLink';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MicIcon from '@material-ui/icons/Mic';\nimport PhotoIcon from '../../Assets/Icons/SharedMedia';\nimport Typography from '@material-ui/core/Typography';\nimport VideocamIcon from '@material-ui/icons/Videocam';\nimport User from '../Tile/User';\nimport Chat from '../Tile/Chat';\nimport ChatDetailsHeader from './ChatDetailsHeader';\nimport NotificationsListItem from './NotificationsListItem';\nimport SharedMediaTabs from './SharedMedia/SharedMediaTabs';\nimport SharedMediaContent from './SharedMedia/SharedMediaContent';\nimport { copy } from '../../Utils/Text';\nimport { getFormattedText, getUrlMentionHashtagEntities } from '../../Utils/Message';\nimport {\n    getChatUsername,\n    getChatPhoneNumber,\n    getChatBio,\n    isGroupChat,\n    getGroupChatMembers,\n    getChatFullInfo,\n    isPrivateChat,\n    isMeChat, isChannelChat\n} from '../../Utils/Chat';\nimport { getUserStatusOrder } from '../../Utils/User';\nimport { loadUsersContent, loadChatsContent } from '../../Utils/File';\nimport { formatPhoneNumber } from '../../Utils/Phone';\nimport { openChat, openUser, setProfileMediaViewerContent } from '../../Actions/Client';\nimport { withRestoreRef, withSaveRef } from '../../Utils/HOC';\nimport { NOTIFICATION_AUTO_HIDE_DURATION_MS, SCROLL_PRECISION } from '../../Constants';\nimport BasicGroupStore from '../../Stores/BasicGroupStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport OptionStore from '../../Stores/OptionStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport UserStore from '../../Stores/UserStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MoreListItem.css';\nimport './ChatDetails.css';\n\nclass ChatDetails extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.listRef = React.createRef();\n        this.dividerRef = React.createRef();\n        this.mediaRef = React.createRef();\n\n        const { chatId } = this.props;\n\n        this.members = new Map();\n        this.state = {\n            prevChatId: chatId\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.chatId !== state.prevChatId) {\n            return {\n                prevChatId: props.chatId\n            };\n        }\n\n        return null;\n    }\n\n    getSnapshotBeforeUpdate(prevProps, prevState) {\n        const { chatId } = this.props;\n\n        const { current: list } = this.listRef;\n        const { scrollTop, scrollHeight, offsetHeight } = list;\n        const snapshot = {\n            scrollTop,\n            scrollHeight,\n            offsetHeight\n        };\n\n        // console.log(\n        //     `[ChatDetails] getSnapshotBeforeUpdate chatId=${chatId} scrollTop=${scrollTop} scrollHeight=${scrollHeight} offsetHeight=${offsetHeight}`\n        // );\n\n        return snapshot;\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, theme, counters, migratedCounters } = this.props;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.counters !== counters) {\n            return true;\n        }\n\n        if (nextProps.migratedCounters !== migratedCounters) {\n            return true;\n        }\n\n        if (nextProps.theme !== theme) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { chatId } = this.props;\n        if (prevProps.chatId !== chatId) {\n            this.loadContent();\n        }\n\n        const { current: list } = this.listRef;\n        const { scrollTop, scrollHeight, offsetHeight } = snapshot;\n        if (prevProps.chatId === chatId) {\n            list.scrollTop = scrollTop;\n        } else {\n            list.scrollTop = 0;\n        }\n    }\n\n    componentDidMount() {\n        this.loadContent();\n\n        UserStore.on('updateUserStatus', this.onUpdateUserStatus);\n        UserStore.on('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.on('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.on('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n    }\n\n    componentWillUnmount() {\n        UserStore.off('updateUserStatus', this.onUpdateUserStatus);\n        UserStore.off('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.off('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.off('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n    }\n\n    onUpdateBasicGroupFullInfo = update => {\n        const chat = ChatStore.get(this.props.chatId);\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            chat.type['@type'] === 'chatTypeBasicGroup' &&\n            chat.type.basic_group_id === update.basic_group_id\n        ) {\n            this.forceUpdate(); // update bio\n        }\n    };\n\n    onUpdateSupergroupFullInfo = update => {\n        const chat = ChatStore.get(this.props.chatId);\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            chat.type['@type'] === 'chatTypeSupergroup' &&\n            chat.type.supergroup_id === update.supergroup_id\n        ) {\n            this.forceUpdate(); // update bio\n        }\n    };\n\n    onUpdateUserFullInfo = update => {\n        const chat = ChatStore.get(this.props.chatId);\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            (chat.type['@type'] === 'chatTypePrivate' || chat.type['@type'] === 'chatTypeSecret') &&\n            chat.type.user_id === update.user_id\n        ) {\n            this.forceUpdate(); // update bio\n        }\n    };\n\n    onUpdateUserStatus = update => {\n        if (this.members.has(update.user_id)) {\n            this.forceUpdate();\n        }\n    };\n\n    loadContent = () => {\n        this.loadChatContents();\n    };\n\n    loadChatContents = () => {\n        const { chatId, popup } = this.props;\n\n        const store = FileStore.getStore();\n\n        loadChatsContent(store, [chatId]);\n        const members = getGroupChatMembers(chatId).map(x => x.user_id);\n        loadUsersContent(store, members);\n\n        if (popup) {\n            getChatFullInfo(chatId);\n        }\n    };\n\n    handleUsernameHint = () => {\n        const { t, chatId } = this.props;\n        const username = getChatUsername(chatId);\n        if (!username) return;\n\n        const telegramUrlOption = OptionStore.get('t_me_url');\n        const usernameLink = telegramUrlOption ? telegramUrlOption.value : 'https://telegram.org/';\n\n        copy(usernameLink + username);\n\n        this.handleScheduledAction(t('LinkCopied'));\n    };\n\n    handleScheduledAction = message => {\n        const { enqueueSnackbar, closeSnackbar } = this.props;\n\n        const snackKey = enqueueSnackbar(message, {\n            autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\n            preventDuplicate: true,\n            action: [\n                <IconButton\n                    key='close'\n                    aria-label='Close'\n                    color='inherit'\n                    className='notification-close-button'\n                    onClick={() => {\n                        closeSnackbar(snackKey);\n                    }}>\n                    <CloseIcon />\n                </IconButton>\n            ]\n        });\n    };\n\n    handlePhoneHint = () => {\n        const { t, chatId } = this.props;\n        const phoneNumber = getChatPhoneNumber(chatId);\n        if (!phoneNumber) return;\n\n        copy(formatPhoneNumber(phoneNumber));\n\n        this.handleScheduledAction(t('PhoneCopied'));\n    };\n\n    handleHeaderClick = () => {\n        this.listRef.current.scrollTop = 0;\n    };\n\n    handleOpenViewer = () => {\n        const { chatId, popup } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.photo) return;\n\n        setProfileMediaViewerContent({ chatId });\n\n        if (popup) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateDialogChatId',\n                chatId: 0\n            });\n        }\n    };\n\n    handleOpenChat = () => {\n        const { chatId, popup } = this.props;\n\n        openChat(chatId, null, false);\n\n        if (popup) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateDialogChatId',\n                chatId: 0\n            });\n        }\n    };\n\n    handleOpenUser = userId => {\n        openUser(userId, true);\n    };\n\n    getContentHeight = () => {\n        if (!this.listRef) return 0;\n\n        return this.listRef.current.clientHeight;\n    };\n\n    handleTabClick = event => {\n        const { current: list } = this.listRef;\n        if (!list) return;\n\n        const { current: divider } = this.dividerRef;\n        if (!divider) return;\n        if (divider.offsetTop === list.scrollTop) return;\n\n        if (list.scrollTop < divider.offsetTop) {\n            list.scrollTo({\n                top: divider.offsetTop,\n                behavior: 'smooth'\n            });\n        } else {\n            list.scrollTop = divider.offsetTop + 70;\n            setTimeout(() => {\n                list.scrollTo({\n                    top: divider.offsetTop,\n                    behavior: 'smooth'\n                });\n            }, 0);\n        }\n        // requestAnimationFrame(() => {\n        //     list.scrollTo({\n        //         top: divider.offsetTop,\n        //         behavior: 'smooth'\n        //     });\n        // });\n    };\n\n    handleScroll = event => {\n        if (!this.listRef) return;\n        if (!this.mediaRef) return;\n\n        const { current: list } = this.listRef;\n        if (!list) return;\n\n        const { current: media } = this.mediaRef;\n        if (!media) return;\n\n        if (list.scrollTop + list.offsetHeight >= list.scrollHeight - SCROLL_PRECISION) {\n            media.handleScroll(event);\n        }\n\n        media.handleVirtScroll(event, list);\n    };\n\n    render() {\n        const {\n            backButton,\n            className,\n            chatId,\n            onClose,\n            popup,\n            t\n        } = this.props;\n\n        let { counters, migratedCounters } = this.props;\n        counters = counters || [0, 0, 0, 0, 0, 0];\n        migratedCounters = migratedCounters || [0, 0, 0, 0, 0, 0];\n\n        const [photoCount, videoCount, documentCount, audioCount, urlCount, voiceAndVideoNoteCount] = counters.map(\n            (el, i) => el + migratedCounters[i]\n        );\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) {\n            return (\n                <div className='chat-details'>\n                    <ChatDetailsHeader onClose={onClose} />\n                    <div ref={this.listRef} className={classNames('chat-details-list', 'scrollbars-hidden')} />\n                </div>\n            );\n        }\n\n        let groupInCommonCount = 0;\n        if (isPrivateChat(chatId)) {\n            const fullInfo = UserStore.getFullInfo(chat.type.user_id);\n            groupInCommonCount = fullInfo ? fullInfo.group_in_common_count : groupInCommonCount;\n        }\n\n        const username = getChatUsername(chatId);\n        const phoneNumber = getChatPhoneNumber(chatId);\n        let bio = getChatBio(chatId);\n        const isGroup = isGroupChat(chatId);\n        const isMe = isMeChat(chatId);\n\n        const members = getGroupChatMembers(chatId);\n        const users = [];\n        this.members = new Map();\n        members.forEach(member => {\n            const user = UserStore.get(member.user_id);\n            if (user) {\n                this.members.set(user.id, user.id);\n                users.push(user);\n            }\n        });\n\n        const sortedUsers = users.sort((x, y) => {\n            return getUserStatusOrder(y) - getUserStatusOrder(x);\n        });\n        const items = sortedUsers.map(user => (\n            <ListItem button className='list-item' key={user.id}>\n                <User userId={user.id} onSelect={this.handleOpenUser} />\n            </ListItem>\n        ));\n\n        const { photo } = chat;\n\n        if (isGroupChat(chatId) || isChannelChat(chatId)) {\n            const { text: bioText, entities: bioEntities } = getUrlMentionHashtagEntities(bio, []);\n            if (bioEntities.length > 0) {\n                bio = getFormattedText({ '@type': 'formattedText', text: bioText, entities: bioEntities });\n            }\n        }\n\n        const content = (\n            <>\n                <ChatDetailsHeader\n                    chatId={chatId}\n                    backButton={backButton}\n                    onClose={onClose}\n                    onClick={this.handleHeaderClick}\n                />\n                <div\n                    ref={this.listRef}\n                    className={classNames('chat-details-list', 'scrollbars-hidden')}\n                    onScroll={this.handleScroll}>\n                    <div className='chat-details-info'>\n                        <Chat\n                            chatId={chatId}\n                            big={true}\n                            showStatus={true}\n                            showSavedMessages={!popup}\n                            onTileSelect={photo ? this.handleOpenViewer : null}\n                        />\n                        {!isMe && (\n                            <List className='chat-details-items'>\n                                {bio && (\n                                    <ListItem className='list-item-rounded' alignItems='flex-start'>\n                                        <ListItemIcon>\n                                            <ErrorOutlineIcon className='chat-details-info-icon' />\n                                        </ListItemIcon>\n                                        <ListItemText\n                                            primary={bio}\n                                            secondary={t('Bio')}\n                                            style={{ whiteSpace: 'pre-wrap', wordWrap: 'break-word' }}\n                                        />\n                                    </ListItem>\n                                )}\n                                {username && (\n                                    <ListItem button className='list-item-rounded' alignItems='flex-start' onClick={this.handleUsernameHint}>\n                                        <ListItemIcon>\n                                            <AlternateEmailIcon />\n                                        </ListItemIcon>\n                                        <ListItemText\n                                            primary={\n                                                <Typography variant='inherit' noWrap>\n                                                    {username}\n                                                </Typography>\n                                            }\n                                            secondary={t('Username')}\n                                        />\n                                    </ListItem>\n                                )}\n                                {phoneNumber && (\n                                    <>\n                                        <ListItem button className='list-item-rounded' alignItems='flex-start' onClick={this.handlePhoneHint}>\n                                            <ListItemIcon>\n                                                <CallIcon />\n                                            </ListItemIcon>\n                                            <ListItemText\n                                                primary={\n                                                    <Typography variant='inherit' noWrap>\n                                                        {formatPhoneNumber(phoneNumber)}\n                                                    </Typography>\n                                                }\n                                                secondary={t('Phone')}\n                                            />\n                                        </ListItem>\n                                    </>\n                                )}\n                                <NotificationsListItem chatId={chatId} />\n                                {popup && !isGroup && (\n                                    <ListItem button className='list-item-rounded' alignItems='flex-start' onClick={this.handleOpenChat}>\n                                        <ListItemText\n                                            primary={\n                                                <Typography color='primary' variant='inherit' noWrap>\n                                                    {t('SendMessage').toUpperCase()}\n                                                </Typography>\n                                            }\n                                            style={{ paddingLeft: 40 }}\n                                        />\n                                    </ListItem>\n                                )}\n                            </List>\n                        )}\n                    </div>\n\n                    <div ref={this.dividerRef}/>\n                    <SharedMediaTabs chatId={chatId} onClick={this.handleTabClick}/>\n                    <SharedMediaContent ref={this.mediaRef} chatId={chatId} popup={popup}/>\n                    {/*{(photoCount > 0 ||*/}\n                    {/*    videoCount > 0 ||*/}\n                    {/*    documentCount > 0 ||*/}\n                    {/*    audioCount > 0 ||*/}\n                    {/*    urlCount > 0 ||*/}\n                    {/*    voiceAndVideoNoteCount > 0 ||*/}\n                    {/*    groupInCommonCount > 0) && (*/}\n                    {/*    <>*/}\n                            {/*<Divider />*/}\n                            {/*<List className='shared-media-list'>*/}\n                            {/*    {photoCount > 0 && (*/}\n                            {/*        <ListItem button className='list-item' onClick={onOpenSharedPhotos}>*/}\n                            {/*            <ListItemIcon>*/}\n                            {/*                <PhotoIcon />*/}\n                            {/*            </ListItemIcon>*/}\n                            {/*            <ListItemText*/}\n                            {/*                primary={*/}\n                            {/*                    <Typography variant='inherit' noWrap>*/}\n                            {/*                        {photoCount === 1 ? '1 photo' : `${photoCount} photos`}*/}\n                            {/*                    </Typography>*/}\n                            {/*                }*/}\n                            {/*            />*/}\n                            {/*        </ListItem>*/}\n                            {/*    )}*/}\n                            {/*    {videoCount > 0 && (*/}\n                            {/*        <ListItem button className='list-item' onClick={onOpenSharedVideos}>*/}\n                            {/*            <ListItemIcon>*/}\n                            {/*                <VideocamIcon />*/}\n                            {/*            </ListItemIcon>*/}\n                            {/*            <ListItemText*/}\n                            {/*                primary={*/}\n                            {/*                    <Typography variant='inherit' noWrap>*/}\n                            {/*                        {videoCount === 1 ? '1 video' : `${videoCount} videos`}*/}\n                            {/*                    </Typography>*/}\n                            {/*                }*/}\n                            {/*            />*/}\n                            {/*        </ListItem>*/}\n                            {/*    )}*/}\n                            {/*    {documentCount > 0 && (*/}\n                            {/*        <ListItem button className='list-item' onClick={onOpenSharedDocuments}>*/}\n                            {/*            <ListItemIcon>*/}\n                            {/*                <InsertDriveFileIcon />*/}\n                            {/*            </ListItemIcon>*/}\n                            {/*            <ListItemText*/}\n                            {/*                primary={*/}\n                            {/*                    <Typography variant='inherit' noWrap>*/}\n                            {/*                        {documentCount === 1 ? '1 file' : `${documentCount} files`}*/}\n                            {/*                    </Typography>*/}\n                            {/*                }*/}\n                            {/*            />*/}\n                            {/*        </ListItem>*/}\n                            {/*    )}*/}\n                            {/*    {audioCount > 0 && (*/}\n                            {/*        <ListItem button className='list-item' onClick={onOpenSharedAudios}>*/}\n                            {/*            <ListItemIcon>*/}\n                            {/*                <HeadsetIcon />*/}\n                            {/*            </ListItemIcon>*/}\n                            {/*            <ListItemText*/}\n                            {/*                primary={*/}\n                            {/*                    <Typography variant='inherit' noWrap>*/}\n                            {/*                        {audioCount === 1 ? '1 audio file' : `${audioCount} audio files`}*/}\n                            {/*                    </Typography>*/}\n                            {/*                }*/}\n                            {/*            />*/}\n                            {/*        </ListItem>*/}\n                            {/*    )}*/}\n                            {/*    {urlCount > 0 && (*/}\n                            {/*        <ListItem button className='list-item' onClick={onOpenSharedLinks}>*/}\n                            {/*            <ListItemIcon>*/}\n                            {/*                <InsertLinkIcon />*/}\n                            {/*            </ListItemIcon>*/}\n                            {/*            <ListItemText*/}\n                            {/*                primary={*/}\n                            {/*                    <Typography variant='inherit' noWrap>*/}\n                            {/*                        {urlCount === 1 ? '1 shared link' : `${urlCount} shared links`}*/}\n                            {/*                    </Typography>*/}\n                            {/*                }*/}\n                            {/*            />*/}\n                            {/*        </ListItem>*/}\n                            {/*    )}*/}\n                            {/*    {voiceAndVideoNoteCount > 0 && (*/}\n                            {/*        <ListItem button className='list-item' onClick={onOpenSharedVoiceNotes}>*/}\n                            {/*            <ListItemIcon>*/}\n                            {/*                <MicIcon />*/}\n                            {/*            </ListItemIcon>*/}\n                            {/*            <ListItemText*/}\n                            {/*                primary={*/}\n                            {/*                    <Typography variant='inherit' noWrap>*/}\n                            {/*                        {voiceAndVideoNoteCount === 1*/}\n                            {/*                            ? '1 voice message'*/}\n                            {/*                            : `${voiceAndVideoNoteCount} voice messages`}*/}\n                            {/*                    </Typography>*/}\n                            {/*                }*/}\n                            {/*            />*/}\n                            {/*        </ListItem>*/}\n                            {/*    )}*/}\n                            {/*    {groupInCommonCount > 0 && (*/}\n                            {/*        <ListItem button className='list-item' onClick={onOpenGroupInCommon}>*/}\n                            {/*            <ListItemIcon>*/}\n                            {/*                <GroupIcon />*/}\n                            {/*            </ListItemIcon>*/}\n                            {/*            <ListItemText*/}\n                            {/*                primary={*/}\n                            {/*                    <Typography variant='inherit' noWrap>*/}\n                            {/*                        {groupInCommonCount === 1*/}\n                            {/*                            ? '1 group in common'*/}\n                            {/*                            : `${groupInCommonCount} groups in common`}*/}\n                            {/*                    </Typography>*/}\n                            {/*                }*/}\n                            {/*            />*/}\n                            {/*        </ListItem>*/}\n                            {/*    )}*/}\n                            {/*</List>*/}\n                    {/*    </>*/}\n                    {/*)}*/}\n                    {/*{items.length > 0 && (*/}\n                    {/*    <>*/}\n                    {/*        <Divider />*/}\n                    {/*        <List>{items}</List>*/}\n                    {/*    </>*/}\n                    {/*)}*/}\n                </div>\n            </>\n        );\n\n        return popup ? <>{content}</> : <div className={classNames('chat-details', className)}>{content}</div>;\n    }\n}\n\nChatDetails.propTypes = {\n    chatId: PropTypes.number,\n    popup: PropTypes.bool,\n    onClose: PropTypes.func,\n    onOpenGroupInCommon: PropTypes.func,\n    onOpenSharedDocuments: PropTypes.func,\n    onOpenSharedMedia: PropTypes.func,\n    onOpenSharedLinks: PropTypes.func,\n    onOpenSharedPhotos: PropTypes.func,\n    onOpenSharedVideos: PropTypes.func,\n    onOpenSharedVoiceNotes: PropTypes.func\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withSnackbar,\n    withRestoreRef()\n);\n\nexport default enhance(ChatDetails);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport './GroupsInCommonHeader.css';\n\nclass GroupsInCommonHeader extends React.Component {\n    render() {\n        const { onClose } = this.props;\n\n        return (\n            <div className='header-master'>\n                <IconButton className='header-left-button' onClick={onClose}>\n                    <ArrowBackIcon />\n                </IconButton>\n                <div className='header-status grow cursor-pointer'>\n                    <span className='header-status-content'>Groups in common</span>\n                </div>\n            </div>\n        );\n    }\n}\n\nGroupsInCommonHeader.propTypes = {\n    onClose: PropTypes.func.isRequired\n};\n\nexport default GroupsInCommonHeader;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ListItem from '@material-ui/core/ListItem';\nimport Chat from '../Tile/Chat';\nimport GroupsInCommonHeader from './GroupsInCommonHeader';\nimport { getChatUserId } from '../../Utils/Chat';\nimport { loadChatsContent } from '../../Utils/File';\nimport { openChat } from '../../Actions/Client';\nimport FileStore from '../../Stores/FileStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './GroupsInCommon.css';\n\nclass GroupsInCommon extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            chatIds: []\n        };\n    }\n\n    componentDidMount() {\n        const { chatId } = this.props;\n\n        const userId = getChatUserId(chatId);\n        if (!userId) return;\n\n        TdLibController.send({\n            '@type': 'getGroupsInCommon',\n            user_id: userId,\n            offset_chat_id: 0,\n            limit: 100\n        }).then(result => {\n            const store = FileStore.getStore();\n            loadChatsContent(store, result.chat_ids);\n\n            this.setState({ chatIds: result.chat_ids });\n        });\n    }\n\n    handleSelect = chatId => {\n        const { popup } = this.props;\n\n        openChat(chatId);\n\n        if (popup) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateDialogChatId',\n                chatId: 0\n            });\n        }\n    };\n\n    render() {\n        const { minHeight, onClose, popup } = this.props;\n        const { chatIds } = this.state;\n\n        const chats = chatIds.map(x => (\n            <ListItem button key={x}>\n                <Chat chatId={x} onSelect={this.handleSelect} />\n            </ListItem>\n        ));\n\n        const content = (\n            <>\n                <GroupsInCommonHeader onClose={onClose} />\n                <div className='groups-in-common-list' style={{ minHeight }}>\n                    {chats}\n                </div>\n            </>\n        );\n\n        return popup ? <>{content}</> : <div className='groups-in-common'>{content}</div>;\n    }\n}\n\nGroupsInCommon.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nGroupsInCommon.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default GroupsInCommon;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M9.5,3 C13.0898509,3 16,5.91014913 16,9.5 C16,10.9337106 15.5358211,12.2590065 14.7495478,13.3338028 L19.7071068,18.2928932 C20.0976311,18.6834175 20.0976311,19.3165825 19.7071068,19.7071068 C19.3466228,20.0675907 18.7793918,20.0953203 18.3871006,19.7902954 L18.2928932,19.7071068 L13.3338028,14.7495478 C12.2590065,15.5358211 10.9337106,16 9.5,16 C5.91014913,16 3,13.0898509 3,9.5 C3,5.91014913 5.91014913,3 9.5,3 Z M9.5,5 C7.01471863,5 5,7.01471863 5,9.5 C5,11.9852814 7.01471863,14 9.5,14 C11.9852814,14 14,11.9852814 14,9.5 C14,7.01471863 11.9852814,5 9.5,5 Z' />,\n    'Search'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport CloseIcon from '../../../Assets/Icons/Close';\nimport SearchIcon from '../../../Assets/Icons/Search';\nimport SpeedDialIcon from '@material-ui/lab/SpeedDialIcon';\nimport { ANIMATION_DURATION_200MS } from '../../../Constants';\nimport './SharedMediaHeader.css';\n\nclass SharedMediaHeader extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.searchInputRef = React.createRef();\n\n        this.state = {\n            openSearch: false\n        };\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { openSearch } = this.state;\n\n        if (openSearch && openSearch !== prevProps.openSearch) {\n            setTimeout(() => {\n                if (this.searchInputRef.current) {\n                    this.searchInputRef.current.focus();\n                }\n            }, ANIMATION_DURATION_200MS);\n        }\n    }\n\n    handleSearch = () => {\n        if (this.searchInputRef.current) {\n            const innerText = this.searchInputRef.current.innerText;\n            if (innerText) {\n                this.searchInputRef.current.innerText = '';\n\n                const { onSearch } = this.props;\n                if (!onSearch) return;\n\n                onSearch('');\n                return;\n            }\n        }\n\n        const { onCloseSearch } = this.props;\n        const { openSearch } = this.state;\n\n        this.setState({ openSearch: !openSearch });\n\n        if (onCloseSearch) {\n            onCloseSearch();\n        }\n    };\n\n    handleKeyDown = event => {\n        if (event.keyCode === 13) {\n            event.preventDefault();\n        }\n    };\n\n    handleKeyUp = () => {\n        const element = this.searchInputRef.current;\n        if (!element) return;\n\n        const { innerHTML } = element;\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\n            element.innerHTML = null;\n        }\n        const { innerText } = element;\n\n        const { onSearch } = this.props;\n        if (!onSearch) return;\n\n        onSearch(innerText);\n    };\n\n    handlePaste = event => {\n        const plainText = event.clipboardData.getData('text/plain');\n        if (plainText) {\n            event.preventDefault();\n            document.execCommand('insertText', false, plainText);\n        }\n    };\n\n    render() {\n        const { t, title, onClick, onClose, onSearch } = this.props;\n        const { openSearch } = this.state;\n\n        return (\n            <div className='header-master'>\n                {!openSearch ? (\n                    <>\n                        <IconButton className='header-left-button' onClick={onClose}>\n                            <ArrowBackIcon />\n                        </IconButton>\n                        <div className='header-status grow cursor-pointer' onClick={onClick}>\n                            <span className='header-status-content'>{title}</span>\n                        </div>\n                    </>\n                ) : (\n                    <>\n                        <div className='header-search-input grow'>\n                            <div\n                                id='header-search-inputbox'\n                                ref={this.searchInputRef}\n                                placeholder={t('Search')}\n                                contentEditable\n                                suppressContentEditableWarning\n                                onKeyDown={this.handleKeyDown}\n                                onKeyUp={this.handleKeyUp}\n                                onPaste={this.handlePaste}\n                            />\n                        </div>\n                    </>\n                )}\n                {Boolean(onSearch) && (\n                    <IconButton className='header-right-button' onMouseDown={this.handleSearch}>\n                        <SpeedDialIcon open={openSearch} icon={<SearchIcon />} openIcon={<CloseIcon />} />\n                    </IconButton>\n                )}\n            </div>\n        );\n    }\n}\n\nSharedMediaHeader.propTypes = {\n    title: PropTypes.string,\n    onClick: PropTypes.func,\n    onClose: PropTypes.func,\n    onCloseSearch: PropTypes.func,\n    onSearch: PropTypes.func\n};\n\nexport default withTranslation()(SharedMediaHeader);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport SharedDocument from '../../Tile/SharedMedia/SharedDocument';\nimport SharedMediaHeader from './SharedMediaHeader';\nimport { between, insertByOrder } from '../../../Utils/Common';\nimport { loadMessageContents } from '../../../Utils/File';\nimport { messageComparatorDesc } from '../../../Utils/Message';\nimport { SCROLL_PRECISION, SHARED_MESSAGE_SLICE_LIMIT } from '../../../Constants';\nimport FileStore from '../../../Stores/FileStore';\nimport MessageStore from '../../../Stores/MessageStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './SharedMediaBase.css';\n\nclass SharedMediaBase extends React.Component {\n    getListClassName() {\n        return null;\n    }\n\n    getSearchListClassName() {\n        return null;\n    }\n\n    constructor(props) {\n        if (new.target === SharedMediaBase) {\n            throw new TypeError('Cannot construct SharedMediaBase instances directly');\n        }\n\n        // console.log('SharedMediaBase.ctor');\n\n        super(props);\n\n        this.listRef = React.createRef();\n        this.searchListRef = React.createRef();\n\n        this.state = {\n            items: [],\n            migratedItems: [],\n            searchItems: [],\n            searchMigratedItems: []\n        };\n    }\n\n    hasSearch() {\n        return true;\n    }\n\n    isValidContent(content) {\n        throw new Error('Virtual method isValidContent is not implemented');\n    }\n\n    getItemTemplate(message) {\n        const { migratedChatId } = this.props;\n        const { chat_id, id } = message;\n\n        return (\n            <SharedDocument\n                key={`chat_id=${chat_id}_message_id=${id}`}\n                chatId={chat_id}\n                messageId={id}\n                showOpenMessage={chat_id !== migratedChatId}\n            />\n        );\n    }\n\n    getSearchFilter() {\n        throw new Error('Virtual method getSearchFilter is not implemented');\n    }\n\n    getHeader() {\n        throw new Error('Virtual method getHeader is not implemented');\n    }\n\n    componentDidMount() {\n        this.loadContent();\n\n        MessageStore.on('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.on('updateNewMessage', this.onUpdateNewMessage);\n    }\n\n    componentWillUnmount() {\n        MessageStore.off('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.off('updateNewMessage', this.onUpdateNewMessage);\n    }\n\n    onUpdateMessageContent = update => {\n        const { chatId, migratedChatId } = this.props;\n        const { items, migratedItems } = this.state;\n\n        const { chat_id, message_id, old_content, new_content } = update;\n\n        const message = MessageStore.get(chat_id, message_id);\n        // console.log(`SharedDocuments.onUpdateMessageContent chat_id=${chat_id} message_id=${message_id}`, this.state.items);\n\n        if (chat_id === chatId) {\n            if (!items.length) return;\n            if (!between(message_id, items[0].id, items[items.length - 1].id, true)) return;\n\n            const index = items.findIndex(x => x.id === message_id);\n            if (this.isValidContent(new_content)) {\n                if (index === -1) {\n                    // add new document\n                    this.setState({ items: insertByOrder(items, message, messageComparatorDesc) });\n                } else {\n                    // replace document\n                    this.setState({ items: [...items.slice(0, index), message, ...items.slice(index + 1)] });\n                }\n            } else {\n                if (index === -1) {\n                } else {\n                    // remove none document\n                    this.setState({ items: items.filter(x => x.id !== message_id) });\n                }\n            }\n        } else if (chat_id === migratedChatId) {\n            if (!migratedItems.length) return;\n            if (!between(message_id, migratedItems[0].id, migratedItems[migratedItems.length - 1].id, true)) return;\n\n            const index = migratedItems.findIndex(x => x.id === message_id);\n            if (this.isValidContent(new_content)) {\n                if (index === -1) {\n                    // add new document\n                    this.setState({\n                        migratedItems: insertByOrder(migratedItems, message, messageComparatorDesc)\n                    });\n                } else {\n                    // replace document\n                    this.setState({\n                        migratedItems: [...migratedItems.slice(0, index), message, ...migratedItems.slice(index + 1)]\n                    });\n                }\n            } else {\n                if (index === -1) {\n                } else {\n                    // remove none document\n                    this.setState({ migratedItems: migratedItems.filter(x => x.id !== message_id) });\n                }\n            }\n        }\n    };\n\n    onUpdateNewMessage = update => {\n        const { chatId, migratedChatId } = this.props;\n        const { items, migratedItems } = this.state;\n\n        const { message } = update;\n        const { chat_id } = message;\n\n        if (chat_id !== chatId) return;\n        if (!this.isValidMessage(message)) return;\n\n        const store = FileStore.getStore();\n        loadMessageContents(store, [message]);\n\n        if (chat_id === chatId) {\n            this.setState({ items: [message].concat(items) });\n        } else if (chat_id === migratedChatId) {\n            this.setState({ migratedItems: [message].concat(migratedItems) });\n        }\n    };\n\n    onUpdateDeleteMessages = update => {\n        const { chatId, migratedChatId } = this.props;\n        const { items, migratedItems } = this.state;\n\n        const { chat_id, message_ids } = update;\n\n        const map = new Map(message_ids.map(x => [x, x]));\n        const callback = () => {\n            if (this.state.items.length + this.state.migratedItems.length < SHARED_MESSAGE_SLICE_LIMIT) {\n                this.onLoadNext(this.params);\n            }\n        };\n\n        if (chat_id === chatId) {\n            this.setState({ items: items.filter(x => !map.has(x.id)) }, callback);\n        } else if (chat_id === migratedChatId) {\n            this.setState({ migratedItems: migratedItems.filter(x => !map.has(x.id)) }, callback);\n        }\n    };\n\n    loadContent = () => {\n        this.params = {\n            loading: false,\n            completed: false,\n            migrateCompleted: false,\n            items: [],\n            migratedItems: [],\n            filter: this.getSearchFilter()\n        };\n        this.onLoadNext(this.params);\n    };\n\n    onLoadNext = async (params, loadIncomplete = true) => {\n        const { chatId } = this.props;\n        const { completed, filter, items, loading } = params;\n\n        // console.log('SharedMediaBase.onLoadNext', completed, loading);\n\n        if (loading) return;\n        if (completed) return;\n\n        const fromMessageId = items.length > 0 ? items[items.length - 1].id : 0;\n        params.loading = true;\n        const result = await TdLibController.send({\n            '@type': 'searchChatMessages',\n            chat_id: chatId,\n            query: '',\n            sender_user_id: 0,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: SHARED_MESSAGE_SLICE_LIMIT,\n            filter\n        }).finally(() => {\n            params.loading = false;\n        });\n\n        TdLibController.send({\n            '@type': 'searchChatMessages',\n            chat_id: chatId,\n            query: '',\n            sender_user_id: 0,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: SHARED_MESSAGE_SLICE_LIMIT * 2,\n            filter\n        });\n\n        const { messages } = result;\n        params.completed = messages.length === 0 || messages.total_count === 0;\n        params.items = items.concat(messages.filter(this.isValidMessage));\n        const incompleteResults = loadIncomplete && messages.length > 0 && messages.length < SHARED_MESSAGE_SLICE_LIMIT;\n\n        MessageStore.setItems(result.messages);\n        const store = FileStore.getStore();\n        loadMessageContents(store, result.messages);\n\n        this.setState({ items: params.items });\n\n        if (params.completed) {\n            this.onLoadMigratedNext(params, true);\n        } else if (incompleteResults) {\n            this.onLoadNext(params, false);\n        }\n    };\n\n    onLoadMigratedNext = async (params, loadIncomplete = true) => {\n        const { migratedChatId } = this.props;\n        const { filter, loading, migrateCompleted, migratedItems: items } = params;\n\n        // console.log('SharedMediaBase.onLoadMigratedNext', migratedChatId, loading, migrateCompleted);\n\n        if (!migratedChatId) return;\n        if (loading) return;\n        if (migrateCompleted) return;\n\n        const fromMessageId = items.length > 0 ? items[items.length - 1].id : 0;\n        params.loading = true;\n        const result = await TdLibController.send({\n            '@type': 'searchChatMessages',\n            chat_id: migratedChatId,\n            query: '',\n            sender_user_id: 0,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: SHARED_MESSAGE_SLICE_LIMIT,\n            filter\n        }).finally(() => {\n            params.loading = false;\n        });\n\n        const { messages } = result;\n        params.migratedItems = items.concat(messages.filter(this.isValidMessage));\n        params.migrateCompleted = messages.length === 0 || messages.total_count === 0;\n        const incompleteResults = loadIncomplete && messages.length > 0 && messages.length < SHARED_MESSAGE_SLICE_LIMIT;\n\n        if (params.migrateCompleted) return;\n\n        MessageStore.setItems(messages);\n        const store = FileStore.getStore();\n        loadMessageContents(store, messages);\n\n        this.setState({ migratedItems: params.migratedItems });\n\n        if (incompleteResults) {\n            this.onLoadMigratedNext(params, false);\n        }\n    };\n\n    handleScroll = () => {\n        if (!this.listRef) return;\n\n        const list = this.listRef.current;\n        if (!list) return;\n\n        const { params } = this;\n\n        if (list.scrollTop + list.offsetHeight >= list.scrollHeight - SCROLL_PRECISION) {\n            if (params && !params.completed) {\n                this.onLoadNext(params);\n            } else {\n                this.onLoadMigratedNext(params);\n            }\n        }\n    };\n\n    handleHeaderClick = () => {\n        const list = this.listRef.current;\n        if (!list) return;\n\n        list.scrollTop = 0;\n    };\n\n    handleSearchScroll = () => {\n        if (!this.searchListRef) return;\n\n        const list = this.searchListRef.current;\n        if (!list) return;\n\n        const { searchParams } = this;\n        if (!searchParams) return;\n\n        if (list.scrollTop + list.offsetHeight >= list.scrollHeight - SCROLL_PRECISION) {\n            if (!searchParams.completed) {\n                this.onSearchNext(searchParams);\n            } else {\n                this.onSearchMigratedNext(searchParams);\n            }\n        }\n    };\n\n    onSearchNext = async (params, loadIncomplete = true) => {\n        const { chatId } = this.props;\n        const { completed, filter, items, loading, query } = params;\n\n        // console.log('SharedMediaBase.onSearchNext', completed, loading);\n\n        if (completed) return;\n        if (loading) return;\n\n        const fromMessageId = items.length > 0 ? items[items.length - 1].id : 0;\n        params.loading = true;\n        const result = await TdLibController.send({\n            '@type': 'searchChatMessages',\n            chat_id: chatId,\n            query,\n            sender_user_id: 0,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: SHARED_MESSAGE_SLICE_LIMIT,\n            filter\n        }).finally(() => {\n            params.loading = false;\n        });\n\n        const { messages } = result;\n        params.items = items.concat(messages.filter(this.isValidMessage));\n        params.completed = messages.length === 0 || messages.total_count === 0;\n        const incompleteResults = loadIncomplete && messages.length > 0 && messages.length < SHARED_MESSAGE_SLICE_LIMIT;\n\n        if (this.searchParams !== params) return;\n\n        MessageStore.setItems(messages);\n        const store = FileStore.getStore();\n        loadMessageContents(store, messages);\n\n        this.setState({ searchItems: params.items, searchMigratedItems: params.migratedItems });\n\n        if (params.completed) {\n            this.onSearchMigratedNext(params, true);\n        } else if (incompleteResults) {\n            this.onSearchNext(params, false);\n        }\n    };\n\n    onSearchMigratedNext = async (params, loadIncomplete = true) => {\n        const { migratedChatId } = this.props;\n        const { filter, loading, migratedItems: items, migrateCompleted, query } = params;\n\n        // console.log('SharedMediaBase.onSearchMigratedNext', migratedChatId, loading, migrateCompleted);\n\n        if (!migratedChatId) return;\n        if (loading) return;\n        if (migrateCompleted) return;\n\n        const fromMessageId = items.length > 0 ? items[items.length - 1].id : 0;\n        params.loading = true;\n        const result = await TdLibController.send({\n            '@type': 'searchChatMessages',\n            chat_id: migratedChatId,\n            query,\n            sender_user_id: 0,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: SHARED_MESSAGE_SLICE_LIMIT,\n            filter\n        }).finally(() => {\n            params.loading = false;\n        });\n\n        const { messages } = result;\n        params.migratedItems = items.concat(messages.filter(this.isValidMessage));\n        params.migrateCompleted = messages.length === 0 || messages.total_count === 0;\n        const incompleteResults = loadIncomplete && messages.length > 0 && messages.length < SHARED_MESSAGE_SLICE_LIMIT;\n\n        if (this.searchParams !== params) return;\n\n        MessageStore.setItems(messages);\n        const store = FileStore.getStore();\n        loadMessageContents(store, messages);\n\n        this.setState({ searchItems: params.items, searchMigratedItems: params.migratedItems });\n\n        if (incompleteResults) {\n            this.onSearchMigratedNext(params, false);\n        }\n    };\n\n    handleSearch = async text => {\n        const query = text ? text.trim() : '';\n        if (!query) {\n            this.handleCloseSearch();\n            return;\n        }\n\n        this.searchParams = {\n            query,\n            completed: false,\n            migrateCompleted: false,\n            items: [],\n            migratedItems: [],\n            filter: this.getSearchFilter()\n        };\n        this.onSearchNext(this.searchParams, true);\n    };\n\n    handleCloseSearch = () => {\n        this.searchParams = null;\n        this.setState({ searchItems: [], searchMigratedItems: [] });\n    };\n\n    isValidMessage = message => {\n        if (!message) return false;\n\n        return this.isValidContent(message.content);\n    };\n\n    render() {\n        const { minHeight, onClose, popup } = this.props;\n        const { items, migratedItems, searchItems, searchMigratedItems } = this.state;\n        const { searchParams } = this;\n\n        const messages = items.concat(migratedItems).map(x => this.getItemTemplate(x));\n        const searchMessages = searchItems.concat(searchMigratedItems).map(x => this.getItemTemplate(x));\n\n        return (\n            <>\n                <SharedMediaHeader\n                    title={this.getHeader()}\n                    onClick={this.handleHeaderClick}\n                    onClose={onClose}\n                    onSearch={this.hasSearch() ? this.handleSearch : null}\n                    onCloseSearch={this.handleCloseSearch}\n                />\n                <div\n                    ref={this.listRef}\n                    className={classNames('shared-media-list', this.getListClassName())}\n                    onScroll={this.handleScroll}\n                    style={{ minHeight: popup ? minHeight : null }}>\n                    {messages}\n                </div>\n                {Boolean(searchParams) && (\n                    <div\n                        ref={this.searchListRef}\n                        className={classNames('shared-media-search-list', this.getSearchListClassName())}\n                        onScroll={this.handleSearchScroll}>\n                        {searchMessages}\n                    </div>\n                )}\n            </>\n        );\n    }\n}\n\nSharedMediaBase.propTypes = {};\n\nexport default SharedMediaBase;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport SharedMediaBase from './SharedMediaBase';\nimport './SharedAudios.css';\n\nclass SharedAudios extends SharedMediaBase {\n    isValidContent(content) {\n        return content && content['@type'] === 'messageAudio';\n    }\n\n    getSearchFilter() {\n        return { '@type': 'searchMessagesFilterAudio' };\n    }\n\n    getHeader() {\n        const { t } = this.props;\n\n        return t('AudioTitle');\n    }\n}\n\nSharedAudios.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    migratedChatId: PropTypes.number,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nSharedAudios.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default withTranslation()(SharedAudios);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport SharedMediaBase from './SharedMediaBase';\nimport './SharedDocuments.css';\n\nclass SharedDocuments extends SharedMediaBase {\n    isValidContent(content) {\n        return content && content['@type'] === 'messageDocument';\n    }\n\n    getSearchFilter() {\n        return { '@type': 'searchMessagesFilterDocument' };\n    }\n\n    getHeader() {\n        const { t } = this.props;\n\n        return t('DocumentsTitle');\n    }\n}\n\nSharedDocuments.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    migratedChatId: PropTypes.number,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nSharedDocuments.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default withTranslation()(SharedDocuments);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport SharedMediaBase from './SharedMediaBase';\nimport SharedLink from '../../Tile/SharedMedia/SharedLink';\nimport { openMedia } from '../../../Utils/Message';\nimport './SharedLinks.css';\n\nclass SharedLinks extends SharedMediaBase {\n    isValidContent(content) {\n        if (!content) return false;\n\n        const { web_page, text } = content;\n        if (web_page) return true;\n        if (!text) return false;\n\n        const { entities } = text;\n        if (!entities) return false;\n\n        return entities.find(\n            x =>\n                x.type['@type'] === 'textEntityTypeUrl' ||\n                x.type['@type'] === 'textEntityTypeTextUrl' ||\n                x.type['@type'] === 'textEntityTypeEmailAddress'\n        );\n    }\n\n    getSearchFilter() {\n        return { '@type': 'searchMessagesFilterUrl' };\n    }\n\n    getHeader() {\n        const { t } = this.props;\n\n        return t('LinksTitle');\n    }\n\n    getItemTemplate(message) {\n        const { migratedChatId } = this.props;\n        const { chat_id, content, id } = message;\n\n        return (\n            <SharedLink\n                key={`chat_id=${chat_id}_message_id=${id}`}\n                chatId={chat_id}\n                messageId={id}\n                webPage={content.web_page}\n                openMedia={() => openMedia(chat_id, id, false)}\n                showOpenMessage={chat_id !== migratedChatId}\n            />\n        );\n    }\n}\n\nSharedLinks.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    migratedChatId: PropTypes.number,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nSharedLinks.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default withTranslation()(SharedLinks);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport './SharedMediaHeader.css';\n\nclass SharedMediaHeader extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        const { close } = this.props;\n\n        return (\n            <div className='header-master'>\n                <IconButton className='header-left-button' onClick={close}>\n                    <ArrowBackIcon />\n                </IconButton>\n                <div className='header-status grow cursor-pointer'>\n                    <span className='header-status-content'>Shared Media</span>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default SharedMediaHeader;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport SharedMediaHeader from './SharedMediaHeader';\nimport './SharedMedia.css';\n\nclass SharedMedia extends React.Component {\n    state = {\n        value: 0\n    };\n\n    handleChange = (event, value) => {\n        this.setState({ value });\n    };\n\n    render() {\n        const { onClose, popup } = this.props;\n        const { value } = this.state;\n\n        const content = (\n            <>\n                <SharedMediaHeader close={onClose} />\n                <Tabs\n                    value={value}\n                    onChange={this.handleChange}\n                    indicatorColor='primary'\n                    textColor='primary'\n                    scrollable\n                    scrollButtons='off'\n                    fullWidth>\n                    <Tab label='Media' style={{ minWidth: '40px' }} />\n                    <Tab label='Docs' style={{ minWidth: '40px' }} />\n                    <Tab label='Links' style={{ minWidth: '40px' }} />\n                    <Tab label='Audio' style={{ minWidth: '40px' }} />\n                </Tabs>\n            </>\n        );\n\n        return popup ? <>{content}</> : <div className='shared-media'>{content}</div>;\n    }\n}\n\nSharedMedia.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nSharedMedia.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default SharedMedia;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport SharedMediaBase from './SharedMediaBase';\nimport SharedPhoto from '../../Tile/SharedMedia/SharedPhoto';\nimport { openMedia } from '../../../Utils/Message';\nimport './SharedPhotos.css';\n\nclass SharedPhotos extends SharedMediaBase {\n    getListClassName() {\n        return 'shared-photos-list';\n    }\n\n    getSearchListClassName() {\n        return 'shared-photos-search-list';\n    }\n\n    isValidContent(content) {\n        return content && content['@type'] === 'messagePhoto';\n    }\n\n    getSearchFilter() {\n        return { '@type': 'searchMessagesFilterPhoto' };\n    }\n\n    getHeader() {\n        const { t } = this.props;\n\n        return t('PhotosTitle');\n    }\n\n    getItemTemplate(message) {\n        const { migratedChatId } = this.props;\n        const { chat_id, content, id } = message;\n\n        return (\n            <SharedPhoto\n                key={`chat_id=${chat_id}_message_id=${id}`}\n                chatId={chat_id}\n                messageId={id}\n                photo={content.photo}\n                openMedia={() => openMedia(chat_id, id, false)}\n                showOpenMessage={chat_id !== migratedChatId}\n            />\n        );\n    }\n}\n\nSharedPhotos.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    migratedChatId: PropTypes.number,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nSharedPhotos.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default withTranslation()(SharedPhotos);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport SharedMediaBase from './SharedMediaBase';\nimport SharedVideo from '../../Tile/SharedMedia/SharedVideo';\nimport { openMedia } from '../../../Utils/Message';\nimport './SharedVideos.css';\n\nclass SharedVideos extends SharedMediaBase {\n    getListClassName() {\n        return 'shared-photos-list';\n    }\n\n    getSearchListClassName() {\n        return 'shared-photos-search-list';\n    }\n\n    isValidContent(content) {\n        return content && content['@type'] === 'messageVideo';\n    }\n\n    getSearchFilter() {\n        return { '@type': 'searchMessagesFilterVideo' };\n    }\n\n    getHeader() {\n        const { t } = this.props;\n\n        return t('VideosTitle');\n    }\n\n    getItemTemplate(message) {\n        const { migratedChatId } = this.props;\n        const { chat_id, content, id } = message;\n\n        return (\n            <SharedVideo\n                key={`chat_id=${chat_id}_message_id=${id}`}\n                chatId={chat_id}\n                messageId={id}\n                video={content.video}\n                openMedia={() => openMedia(chat_id, id, false)}\n                showOpenMessage={chat_id !== migratedChatId}\n            />\n        );\n    }\n}\n\nSharedVideos.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    migratedChatId: PropTypes.number,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nSharedVideos.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default withTranslation()(SharedVideos);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport SharedMediaBase from './SharedMediaBase';\nimport SharedVoiceNote from '../../Tile/SharedMedia/SharedVoiceNote';\nimport { openMedia } from '../../../Utils/Message';\nimport './SharedVoiceNotes.css';\n\nclass SharedVoiceNotes extends SharedMediaBase {\n    isValidContent(content) {\n        return content && content['@type'] === 'messageVoiceNote';\n    }\n\n    getSearchFilter() {\n        return { '@type': 'searchMessagesFilterVoiceNote' };\n    }\n\n    getHeader() {\n        const { t } = this.props;\n\n        return t('VoiceTitle');\n    }\n\n    hasSearch() {\n        return false;\n    }\n\n    getItemTemplate(message) {\n        const { migratedChatId } = this.props;\n        const { chat_id, content, id } = message;\n\n        return (\n            <SharedVoiceNote\n                key={`chat_id=${chat_id}_message_id=${id}`}\n                chatId={chat_id}\n                messageId={id}\n                voiceNote={content.voice_note}\n                openMedia={() => openMedia(chat_id, id, false)}\n                showOpenMessage={chat_id !== migratedChatId}\n            />\n        );\n    }\n}\n\nSharedVoiceNotes.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    migratedChatId: PropTypes.number,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nSharedVoiceNotes.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default withTranslation()(SharedVoiceNotes);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport ChatDetails from './ChatDetails';\nimport GroupsInCommon from './GroupsInCommon';\nimport SharedAudios from './SharedMedia/SharedAudios';\nimport SharedDocuments from './SharedMedia/SharedDocuments';\nimport SharedLinks from './SharedMedia/SharedLinks';\nimport SharedMedia from './SharedMedia';\nimport SharedPhotos from './SharedMedia/SharedPhotos';\nimport SharedVideos from './SharedMedia/SharedVideos';\nimport SharedVoiceNotes from './SharedMedia/SharedVoiceNotes';\nimport { changeChatDetailsVisibility, getChatCounters } from '../../Actions/Chat';\nimport { getPhotoFromChat, getSupergroupId, isSupergroup } from '../../Utils/Chat';\nimport { loadProfileMediaViewerContent } from '../../Utils/File';\nimport AppStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './ChatInfo.css';\n\nclass ChatInfo extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.detailsRef = React.createRef();\n\n        const { popup } = props;\n        const { chatId, dialogChatId } = AppStore;\n\n        this.state = {\n            chatId: popup ? dialogChatId : chatId,\n            migratedChatId: 0,\n            userChatId: null,\n            openGroupInCommon: false,\n            openSharedAudios: false,\n            openSharedDocuments: false,\n            openSharedLinks: false,\n            openSharedMedia: false,\n            openSharedPhotos: false,\n            openSharedVideos: false,\n            openSharedVoiceNotes: false,\n            counters: null,\n            migratedCounters: null\n        };\n    }\n\n    componentDidMount() {\n        this.loadContent(this.state.chatId);\n\n        AppStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n        AppStore.on('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateChatId', this.onClientUpdateChatId);\n        AppStore.off('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { chatId } = this.state;\n        if (chatId !== prevState.chatId) {\n            this.loadContent(chatId);\n        }\n    }\n\n    onClientUpdatePageWidth = update => {\n        const { isSmallWidth } = update;\n        if (!isSmallWidth) return;\n\n        const { popup } = this.props;\n        if (popup) return;\n\n        this.handleCloseChatDetails();\n    };\n\n    onClientUpdateChatId = update => {\n        const { popup } = this.props;\n        const { chatId } = this.state;\n\n        if (popup) return;\n        if (chatId === update.nextChatId) return;\n\n        this.sharedAudios = null;\n        this.sharedDocuments = null;\n        this.sharedLinks = null;\n        this.sharedPhotos = null;\n        this.sharedVideos = null;\n        this.sharedVoiceNotes = null;\n\n        this.setState({\n            chatId: update.nextChatId,\n            migratedChatId: 0,\n            userChatId: null,\n            openGroupInCommon: false,\n            openSharedAudios: false,\n            openSharedDocuments: false,\n            openSharedLinks: false,\n            openSharedMedia: false,\n            openSharedPhotos: false,\n            openSharedVideos: false,\n            openSharedVoiceNotes: false,\n            counters: ChatStore.getCounters(update.nextChatId),\n            migratedCounters: null\n        });\n\n        if (!update.nextChatId) {\n            this.handleCloseChatDetails();\n        }\n    };\n\n    loadContent = chatId => {\n        this.loadChatCounters(chatId);\n        this.loadMigratedCounters(chatId);\n\n        const photo = getPhotoFromChat(chatId);\n        if (!photo) return;\n        loadProfileMediaViewerContent(chatId, [photo]);\n    };\n\n    loadChatCounters = async chatId => {\n        const counters = await getChatCounters(chatId);\n        ChatStore.setCounters(chatId, counters);\n\n        if (chatId !== this.state.chatId) return;\n\n        this.setState({ counters });\n    };\n\n    loadMigratedCounters = async chatId => {\n        if (!isSupergroup(chatId)) return;\n\n        const fullInfo = SupergroupStore.getFullInfo(getSupergroupId(chatId));\n        if (!fullInfo) return;\n\n        const { upgraded_from_basic_group_id: basic_group_id } = fullInfo;\n        if (!basic_group_id) return;\n\n        const chat = await TdLibController.send({\n            '@type': 'createBasicGroupChat',\n            basic_group_id,\n            force: true\n        });\n\n        if (!chat) return;\n\n        const counters = await getChatCounters(chat.id);\n        ChatStore.setCounters(chat.id, counters);\n\n        if (this.state.chatId !== chatId) return;\n\n        this.setState({ migratedChatId: chat.id, migratedCounters: ChatStore.getCounters(chat.id) });\n    };\n\n    handleOpenSharedMedia = () => {\n        this.setState({ openSharedMedia: true });\n    };\n\n    handleCloseSharedMedia = () => {\n        this.setState({ openSharedMedia: false });\n    };\n\n    handleOpenGroupInCommon = () => {\n        this.setState({ openGroupInCommon: true });\n    };\n\n    handleCloseGroupsInCommon = () => {\n        this.setState({ openGroupInCommon: false });\n    };\n\n    handleCloseChatDetails = () => {\n        const { popup } = this.props;\n        const { userChatId } = this.state;\n\n        if (userChatId) {\n            this.setState({ userChatId: null });\n        } else if (popup) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateDialogChatId',\n                chatId: 0\n            });\n        } else {\n            changeChatDetailsVisibility(false);\n        }\n    };\n\n    handleOpenSharedDocuments = () => {\n        this.setState({ openSharedDocuments: true });\n    };\n\n    handleCloseSharedDocuments = () => {\n        this.setState({ openSharedDocuments: false });\n    };\n\n    handleOpenSharedAudios = () => {\n        this.setState({ openSharedAudios: true });\n    };\n\n    handleCloseSharedAudios = () => {\n        this.setState({ openSharedAudios: false });\n    };\n\n    handleOpenSharedVoiceNotes = () => {\n        this.setState({ openSharedVoiceNotes: true });\n    };\n\n    handleCloseSharedVoiceNotes = () => {\n        this.setState({ openSharedVoiceNotes: false });\n    };\n\n    handleOpenSharedLinks = () => {\n        this.setState({ openSharedLinks: true });\n    };\n\n    handleCloseSharedLinks = () => {\n        this.setState({ openSharedLinks: false });\n    };\n\n    handleOpenSharedPhotos = () => {\n        this.setState({ openSharedPhotos: true });\n    };\n\n    handleCloseSharedPhotos = () => {\n        this.setState({ openSharedPhotos: false });\n    };\n\n    handleOpenSharedVideos = () => {\n        this.setState({ openSharedVideos: true });\n    };\n\n    handleCloseSharedVideos = () => {\n        this.setState({ openSharedVideos: false });\n    };\n\n    render() {\n        const { className, popup } = this.props;\n        const {\n            chatId,\n            counters,\n            migratedChatId,\n            migratedCounters,\n            userChatId,\n            openSharedAudios,\n            openSharedDocuments,\n            openSharedLinks,\n            openSharedMedia,\n            openSharedPhotos,\n            openSharedVideos,\n            openSharedVoiceNotes,\n            openGroupInCommon\n        } = this.state;\n\n        const currentChatId = chatId || userChatId;\n        const minHeight = this.detailsRef && this.detailsRef.current ? this.detailsRef.current.getContentHeight() : 0;\n\n        let content = null;\n        if (openSharedMedia) {\n            content = (\n                <SharedMedia\n                    chatId={currentChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseSharedMedia}\n                />\n            );\n        } else if (openSharedAudios) {\n            this.sharedAudios = this.sharedAudios || (\n                <SharedAudios\n                    chatId={currentChatId}\n                    migratedChatId={migratedChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseSharedAudios}\n                />\n            );\n\n            content = this.sharedAudios;\n        } else if (openSharedDocuments) {\n            this.sharedDocuments = this.sharedDocuments || (\n                <SharedDocuments\n                    chatId={currentChatId}\n                    migratedChatId={migratedChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseSharedDocuments}\n                />\n            );\n\n            content = this.sharedDocuments;\n        } else if (openSharedLinks) {\n            this.sharedLinks = this.sharedLinks || (\n                <SharedLinks\n                    chatId={currentChatId}\n                    migratedChatId={migratedChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseSharedLinks}\n                />\n            );\n\n            content = this.sharedLinks;\n        } else if (openSharedPhotos) {\n            this.sharedPhotos = this.sharedPhotos || (\n                <SharedPhotos\n                    chatId={currentChatId}\n                    migratedChatId={migratedChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseSharedPhotos}\n                />\n            );\n\n            content = this.sharedPhotos;\n        } else if (openSharedVideos) {\n            this.sharedVideos = this.sharedVideos || (\n                <SharedVideos\n                    chatId={currentChatId}\n                    migratedChatId={migratedChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseSharedVideos}\n                />\n            );\n\n            content = this.sharedVideos;\n        } else if (openSharedVoiceNotes) {\n            this.sharedVoiceNotes = this.sharedVoiceNotes || (\n                <SharedVoiceNotes\n                    chatId={currentChatId}\n                    migratedChatId={migratedChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseSharedVoiceNotes}\n                />\n            );\n\n            content = this.sharedVoiceNotes;\n        } else if (openGroupInCommon) {\n            content = (\n                <GroupsInCommon\n                    chatId={currentChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseGroupsInCommon}\n                />\n            );\n        } else {\n            content = (\n                <ChatDetails\n                    ref={this.detailsRef}\n                    chatId={currentChatId}\n                    popup={popup}\n                    backButton={userChatId === chatId}\n                    counters={counters}\n                    migratedCounters={migratedCounters}\n                    onOpenGroupInCommon={this.handleOpenGroupInCommon}\n                    onOpenSharedAudios={this.handleOpenSharedAudios}\n                    onOpenSharedDocuments={this.handleOpenSharedDocuments}\n                    onOpenSharedMedia={this.handleOpenSharedMedia}\n                    onOpenSharedLinks={this.handleOpenSharedLinks}\n                    onOpenSharedPhotos={this.handleOpenSharedPhotos}\n                    onOpenSharedVideos={this.handleOpenSharedVideos}\n                    onOpenSharedVoiceNotes={this.handleOpenSharedVoiceNotes}\n                    onClose={this.handleCloseChatDetails}\n                />\n            );\n        }\n\n        return popup ? (\n            <>{content}</>\n        ) : (\n            <div className={classNames('chat-info', { 'right-column': !popup }, className)}>{content}</div>\n        );\n    }\n}\n\nChatInfo.propTypes = {\n    className: PropTypes.string,\n    classes: PropTypes.object,\n    popup: PropTypes.bool\n};\n\nChatInfo.defaultProps = {\n    className: null,\n    classes: null,\n    popup: false\n};\n\nexport default ChatInfo;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport {\n    getChatTypingString,\n    getChatDraft,\n    getLastMessageSenderName,\n    getLastMessageContent,\n    showChatDraft, isPrivateChat\n} from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport UserStore from '../../Stores/UserStore';\nimport './DialogContent.css';\n\nclass DialogContent extends React.Component {\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, t } = this.props;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.t !== t) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ChatStore.on('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.on('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.on('updateChatDraftMessage', this.onUpdate);\n        ChatStore.on('updateChatLastMessage', this.onUpdate);\n        ChatStore.on('updateChatReadInbox', this.onUpdate);\n        ChatStore.on('updateUserChatAction', this.onUpdate);\n        UserStore.on('updateUser', this.onUpdateUser);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.off('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.off('updateChatDraftMessage', this.onUpdate);\n        ChatStore.off('updateChatLastMessage', this.onUpdate);\n        ChatStore.off('updateChatReadInbox', this.onUpdate);\n        ChatStore.off('updateUserChatAction', this.onUpdate);\n    }\n\n    onClientUpdateClearHistory = update => {\n        const { chatId } = this.props;\n\n        if (chatId === update.chatId) {\n            this.clearHistory = update.inProgress;\n            this.forceUpdate();\n        }\n    };\n\n    onFastUpdatingComplete = update => {\n        this.forceUpdate();\n    };\n\n    onUpdateUser = update => {\n        const { chatId } = this.props;\n        const { user } = update;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (isPrivateChat(chatId)) return;\n\n        const { last_message } = chat;\n        if (!last_message) return;\n\n        const { sender_user_id } = last_message;\n        if (sender_user_id !== user.id) return;\n\n        this.forceUpdate();\n    };\n\n    onUpdate = update => {\n        const { chatId } = this.props;\n\n        if (chatId !== update.chat_id) return;\n\n        this.forceUpdate();\n    };\n\n    render() {\n        const { chatId, t } = this.props;\n\n        if (this.clearHistory) return <div className='dialog-content'>{'\\u00A0'}</div>;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return <div className='dialog-content'>{'\\u00A0'}</div>;\n\n        let contentControl = null;\n        const typingString = getChatTypingString(chatId);\n        if (typingString) {\n            contentControl = <span className='dialog-content-accent'>{typingString}</span>;\n        }\n\n        if (!contentControl) {\n            const draft = getChatDraft(chatId);\n            if (showChatDraft(chatId)) {\n                const text = draft.text || '\\u00A0';\n\n                contentControl = (\n                    <>\n                        <span className='dialog-content-draft'>{t('Draft') + ': '}</span>\n                        {text}\n                    </>\n                );\n            }\n        }\n\n        if (!contentControl) {\n            const content = getLastMessageContent(chat, t) || '\\u00A0';\n            const senderName = getLastMessageSenderName(chat, t);\n            contentControl = (\n                <>\n                    {senderName && <span className='dialog-content-accent'>{senderName}: </span>}\n                    {content}\n                </>\n            );\n        }\n\n        return <div className='dialog-content'>{contentControl}</div>;\n    }\n}\n\nexport default withTranslation()(DialogContent);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <g strokeWidth='1' fill='none' fillRule='evenodd'>\n        <line x1='10.5' y1='13.5' x2='7' y2='17' id='Path-51' strokeWidth='1.66' strokeLinecap='round' />\n        <path\n            d='M15.2734195,6.29329584 L17.7068554,8.72673178 C18.0977149,9.11759123 18.0977149,9.7512996 17.7068554,10.142159 C17.6489915,10.200023 17.5842494,10.2505721 17.5140791,10.2926743 L15.0747102,11.7562956 C15.5465193,13.1717229 15.0755189,14.5863414 13.661709,16.0001513 L8,10.3384422 C9.41380985,8.92463237 10.8284284,8.45363199 12.2438557,8.92544107 L13.707477,6.48607217 C13.991869,6.01208547 14.6066564,5.85838861 15.0806431,6.14278063 C15.1508135,6.18488284 15.2155555,6.2354319 15.2734195,6.29329584 Z'\n            strokeWidth='1.66'\n            strokeLinecap='round'\n            strokeLinejoin='round'\n        />\n    </g>,\n    'Pin'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport EventEmitter from './EventEmitter';\nimport TdLibController from '../Controllers/TdLibController';\nimport { isValidPoll } from '../Utils/Poll';\n\nclass FilterStore extends EventEmitter {\n    constructor() {\n        super();\n\n        this.reset();\n\n        this.addTdLibListener();\n    }\n\n    reset = () => {\n        this.chatList = { '@type': 'chatListMain' };\n        this.filters = null;\n    };\n\n    onUpdate = update => {\n        switch (update['@type']) {\n            case 'updateAuthorizationState': {\n                const { authorization_state } = update;\n                if (!authorization_state) break;\n\n                switch (authorization_state['@type']) {\n                    case 'authorizationStateClosed': {\n                        this.reset();\n                        break;\n                    }\n                }\n\n                break;\n            }\n            case 'updateChatFilters': {\n                const { chat_filters } = update;\n\n                this.filters = chat_filters;\n                this.emit('updateChatFilters', update);\n                break;\n            }\n            default:\n                break;\n        }\n    };\n\n    onClientUpdate = update => {\n        switch (update['@type']) {\n            case 'clientUpdateChatList': {\n                const { chatList } = update;\n\n                this.chatList = chatList;\n\n                this.emit('clientUpdateChatList', update);\n                break;\n            }\n            default:\n                break;\n        }\n    };\n\n    addTdLibListener = () => {\n        TdLibController.on('update', this.onUpdate);\n        TdLibController.on('clientUpdate', this.onClientUpdate);\n    };\n\n    removeTdLibListener = () => {\n        TdLibController.off('update', this.onUpdate);\n        TdLibController.off('clientUpdate', this.onClientUpdate);\n    };\n}\n\nconst store = new FilterStore();\nwindow.filter = store;\nexport default store;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport PinIcon from '../../Assets/Icons/Pin';\nimport {\n    isChatMuted,\n    isChatPinned,\n    showChatUnreadCount,\n    showChatUnreadMentionCount\n} from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport FilterStore from '../../Stores/FilterStore';\nimport NotificationStore from '../../Stores/NotificationStore';\nimport './DialogBadge.css';\n\nclass DialogBadge extends React.Component {\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, chatList } = this.props;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.chatList !== chatList) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ChatStore.on('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.on('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.on('updateChatDraftMessage', this.onUpdate);\n        ChatStore.on('updateChatIsMarkedAsUnread', this.onUpdate);\n        ChatStore.on('updateChatPosition', this.onUpdate);\n        ChatStore.on('updateChatNotificationSettings', this.onUpdate);\n        ChatStore.on('updateChatReadInbox', this.onUpdate);\n        ChatStore.on('updateChatLastMessage', this.onUpdate);\n        ChatStore.on('updateChatReadOutbox', this.onUpdate);\n        ChatStore.on('updateChatUnreadMentionCount', this.onUpdate);\n        ChatStore.on('updateMessageMentionRead', this.onUpdate);\n        NotificationStore.on('updateScopeNotificationSettings', this.onUpdateScopeNotificationSettings);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.off('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.off('updateChatDraftMessage', this.onUpdate);\n        ChatStore.off('updateChatIsMarkedAsUnread', this.onUpdate);\n        ChatStore.off('updateChatPosition', this.onUpdate);\n        ChatStore.off('updateChatNotificationSettings', this.onUpdate);\n        ChatStore.off('updateChatReadInbox', this.onUpdate);\n        ChatStore.off('updateChatLastMessage', this.onUpdate);\n        ChatStore.off('updateChatReadOutbox', this.onUpdate);\n        ChatStore.off('updateChatUnreadMentionCount', this.onUpdate);\n        ChatStore.off('updateMessageMentionRead', this.onUpdate);\n        NotificationStore.off('updateScopeNotificationSettings', this.onUpdateScopeNotificationSettings);\n    }\n\n    onClientUpdateClearHistory = update => {\n        const { chatId } = this.props;\n\n        if (chatId === update.chatId) {\n            this.clearHistory = update.inProgress;\n            this.forceUpdate();\n        }\n    };\n\n    onFastUpdatingComplete = update => {\n        this.forceUpdate();\n    };\n\n    onUpdate = update => {\n        const { chatId } = this.props;\n\n        if (update.chat_id !== chatId) return;\n\n        this.forceUpdate();\n    };\n\n    onUpdateScopeNotificationSettings = update => {\n        const { chatId } = this.props;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        switch (update.scope['@type']) {\n            case 'notificationSettingsScopeGroupChats': {\n                if (chat.type['@type'] === 'chatTypeBasicGroup' || chat.type['@type'] === 'chatTypeSupergroup') {\n                    this.forceUpdate();\n                }\n                break;\n            }\n            case 'notificationSettingsScopePrivateChats': {\n                if (chat.type['@type'] === 'chatTypePrivate' || chat.type['@type'] === 'chatTypeSecret') {\n                    this.forceUpdate();\n                }\n                break;\n            }\n        }\n    };\n\n    render() {\n        if (this.clearHistory) return null;\n\n        const { chatId, chatList } = this.props;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        const { unread_count } = chat;\n        const isPinned = isChatPinned(chatId, chatList);\n\n        const showUnreadMentionCount = showChatUnreadMentionCount(chatId);\n        const showUnreadCount = showChatUnreadCount(chatId);\n        const isMuted = isChatMuted(chatId);\n\n        return (\n            <>\n                {showUnreadMentionCount && (\n                    <div className='dialog-badge'>\n                        <div className='dialog-badge-mention'>@</div>\n                    </div>\n                )}\n                {showUnreadCount && (\n                    <div className={classNames({ 'dialog-badge-muted': isMuted }, 'dialog-badge')}>\n                        <span className='dialog-badge-text'>{unread_count > 0 ? unread_count : ''}</span>\n                    </div>\n                )}\n                {isPinned && !showUnreadCount && !showUnreadMentionCount && (\n                    <div className='dialog-badge-pinned'>\n                        <PinIcon className='dialog-badge-pinned-icon' />\n                    </div>\n                )}\n            </>\n        );\n    }\n}\n\nexport default DialogBadge;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <g stroke='none' strokeWidth='1' fill='none' fillRule='evenodd'>\n        <g transform='translate(-3.000000, 0.000000)' fill='#E53935' fillRule='nonzero'>\n            <path d='M10,0.4 C13.6450793,0.4 16.6,3.35492065 16.6,7 C16.6,10.6450793 13.6450793,13.6 10,13.6 C6.35492065,13.6 3.4,10.6450793 3.4,7 C3.4,3.35492065 6.35492065,0.4 10,0.4 Z M10,9.25 C9.58578644,9.25 9.25,9.58578644 9.25,10 C9.25,10.4142136 9.58578644,10.75 10,10.75 C10.4142136,10.75 10.75,10.4142136 10.75,10 C10.75,9.58578644 10.4142136,9.25 10,9.25 Z M10,2.85 C9.64101491,2.85 9.35,3.14101491 9.35,3.5 L9.35,7.5 C9.35,7.85898509 9.64101491,8.15 10,8.15 C10.3589851,8.15 10.65,7.85898509 10.65,7.5 L10.65,3.5 C10.65,3.14101491 10.3589851,2.85 10,2.85 Z' />\n        </g>\n    </g>,\n    'Error'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <g strokeWidth='1' fill='none' fillRule='evenodd' strokeLinecap='round' strokeLinejoin='round'>\n        <g transform='translate(-3.000000, 0.000000)'>\n            <circle strokeWidth='1.2' cx='10' cy='7' r='6' />\n            <line x1='10' y1='3.5' x2='10' y2='7' strokeWidth='1.3' />\n            <line x1='12' y1='9' x2='10' y2='7' strokeWidth='1.3' />\n        </g>\n    </g>,\n    'Pending'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path\n        transform='translate(-4.000000, -2.000000)'\n        d='M7.96833846,10.0490996 L14.5108251,2.571972 C14.7472185,2.30180819 15.1578642,2.27443181 15.428028,2.51082515 C15.6711754,2.72357915 15.717665,3.07747757 15.5522007,3.34307913 L15.4891749,3.428028 L8.48917485,11.428028 C8.2663359,11.6827011 7.89144111,11.7199091 7.62486888,11.5309823 L7.54038059,11.4596194 L4.54038059,8.45961941 C4.2865398,8.20577862 4.2865398,7.79422138 4.54038059,7.54038059 C4.7688373,7.31192388 5.12504434,7.28907821 5.37905111,7.47184358 L5.45961941,7.54038059 L7.96833846,10.0490996 L14.5108251,2.571972 L7.96833846,10.0490996 Z'\n    />,\n    'Sent'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path\n        transform='translate(-1.000000, -2.000000)'\n        d='M4.96833846,10.0490996 L11.5108251,2.571972 C11.7472185,2.30180819 12.1578642,2.27443181 12.428028,2.51082515 C12.6711754,2.72357915 12.717665,3.07747757 12.5522007,3.34307913 L12.4891749,3.428028 L5.48917485,11.428028 C5.2663359,11.6827011 4.89144111,11.7199091 4.62486888,11.5309823 L4.54038059,11.4596194 L1.54038059,8.45961941 C1.2865398,8.20577862 1.2865398,7.79422138 1.54038059,7.54038059 C1.7688373,7.31192388 2.12504434,7.28907821 2.37905111,7.47184358 L2.45961941,7.54038059 L4.96833846,10.0490996 L11.5108251,2.571972 L4.96833846,10.0490996 Z M9.96833846,10.0490996 L16.5108251,2.571972 C16.7472185,2.30180819 17.1578642,2.27443181 17.428028,2.51082515 C17.6711754,2.72357915 17.717665,3.07747757 17.5522007,3.34307913 L17.4891749,3.428028 L10.4891749,11.428028 C10.2663359,11.6827011 9.89144111,11.7199091 9.62486888,11.5309823 L9.54038059,11.4596194 L8.54038059,10.4596194 C8.2865398,10.2057786 8.2865398,9.79422138 8.54038059,9.54038059 C8.7688373,9.31192388 9.12504434,9.28907821 9.37905111,9.47184358 L9.45961941,9.54038059 L9.96833846,10.0490996 L16.5108251,2.571972 L9.96833846,10.0490996 Z'\n    />,\n    'Succeeded'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ErrorIcon from '../../Assets/Icons/Error';\nimport PendingIcon from '../../Assets/Icons/Pending';\nimport SentIcon from '../../Assets/Icons/Sent';\nimport SucceededIcon from '../../Assets/Icons/Succeeded';\nimport { isMessageUnread } from '../../Utils/Message';\nimport ChatStore from '../../Stores/ChatStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport './Status.css';\n\nclass Status extends React.Component {\n    state = {};\n\n    static getDerivedStateFromProps(props, state) {\n        const { chatId, messageId } = props;\n\n        const message = MessageStore.get(chatId, messageId);\n        const sendingState = message ? message.sending_state : null;\n\n        if (chatId !== state.prevChatId || messageId !== state.prevMessageId) {\n            return {\n                prevChatId: chatId,\n                prevMessageId: messageId,\n                sendingState,\n                unread: isMessageUnread(chatId, messageId)\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        ChatStore.on('updateChatReadOutbox', this.onUpdateChatReadOutbox);\n\n        MessageStore.on('updateMessageSendFailed', this.onUpdateMessageSend);\n        MessageStore.on('updateMessageSendSucceeded', this.onUpdateMessageSend);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('updateChatReadOutbox', this.onUpdateChatReadOutbox);\n\n        MessageStore.off('updateMessageSendFailed', this.onUpdateMessageSend);\n        MessageStore.off('updateMessageSendSucceeded', this.onUpdateMessageSend);\n    }\n\n    onUpdateMessageSend = update => {\n        const { chatId, messageId } = this.props;\n        const { old_message_id, message } = update;\n\n        if (messageId !== old_message_id) return;\n        if (!message) return;\n\n        const { chat_id, id, sending_state } = message;\n        if (chatId !== chat_id) return;\n\n        this.newMessageId = id;\n        this.setState({ sendingState: sending_state });\n    };\n\n    onUpdateChatReadOutbox = update => {\n        const { chatId, messageId } = this.props;\n        const { chat_id, last_read_outbox_message_id } = update;\n        const { newMessageId } = this;\n\n        if (chatId !== chat_id) return;\n\n        if ((newMessageId && newMessageId <= last_read_outbox_message_id) || messageId <= last_read_outbox_message_id) {\n            this.setState({ sendingState: null, unread: false });\n        }\n    };\n\n    render() {\n        const { sendingState, unread } = this.state;\n        if (!unread) {\n            return <SucceededIcon className='status' viewBox='0 0 17 10' style={{ width: 16, height: 9 }} />;\n        }\n\n        if (sendingState) {\n            return sendingState['@type'] === 'messageSendingStateFailed' ? (\n                <ErrorIcon\n                    className='status'\n                    viewBox='0 0 14 14'\n                    style={{ width: 16, height: 12, transform: 'translate(0, 1px)' }}\n                />\n            ) : (\n                <PendingIcon\n                    className='status'\n                    viewBox='0 0 14 14'\n                    style={{ width: 16, height: 12, transform: 'translate(0, 1px)', stroke: 'currentColor' }}\n                />\n            );\n        }\n\n        return <SentIcon className='status' viewBox='0 0 12 10' style={{ width: 16, height: 9 }} />;\n    }\n}\n\nStatus.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired\n};\n\nexport default Status;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport Status from '../Message/Status';\nimport { getLastMessageDate, isMeChat } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport './DialogMeta.css';\n\nclass DialogMeta extends React.Component {\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId } = this.props;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ChatStore.on('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.on('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.on('updateChatDraftMessage', this.onUpdate);\n        ChatStore.on('updateChatLastMessage', this.onUpdate);\n        ChatStore.on('updateChatReadInbox', this.onUpdate);\n        ChatStore.on('updateChatUnreadMentionCount', this.onUpdate);\n        ChatStore.on('updateMessageMentionRead', this.onUpdate);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.off('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.off('updateChatDraftMessage', this.onUpdate);\n        ChatStore.off('updateChatLastMessage', this.onUpdate);\n        ChatStore.off('updateChatReadInbox', this.onUpdate);\n        ChatStore.off('updateChatUnreadMentionCount', this.onUpdate);\n        ChatStore.off('updateMessageMentionRead', this.onUpdate);\n    }\n\n    onClientUpdateClearHistory = update => {\n        const { chatId } = this.props;\n\n        if (chatId === update.chatId) {\n            this.clearHistory = update.inProgress;\n            this.forceUpdate();\n        }\n    };\n\n    onFastUpdatingComplete = update => {\n        this.forceUpdate();\n    };\n\n    onUpdate = update => {\n        const { chatId } = this.props;\n\n        if (chatId !== update.chat_id) return;\n\n        this.forceUpdate();\n    };\n\n    render() {\n        if (this.clearHistory) return null;\n\n        const { chatId } = this.props;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        const isMe = isMeChat(chatId);\n\n        const { last_message } = chat;\n        if (!last_message) return null;\n\n        const date = getLastMessageDate(chat);\n        if (!date) return null;\n\n        const { id, is_outgoing } = last_message;\n\n        return (\n            <div className='dialog-meta'>\n                {is_outgoing && !isMe && (\n                    <>\n                        <Status chatId={chatId} messageId={id} />\n                        <span> </span>\n                    </>\n                )}\n                {date}\n            </div>\n        );\n    }\n}\n\nexport default DialogMeta;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M16.5,1 C17.7590292,1 18.9445825,1.59277663 19.7,2.6 L19.7,2.6 L21.2,4.6 C21.7192885,5.29238468 22,6.13451915 22,7 L22,7 L22,8 C22,8.11615513 21.980196,8.22768478 21.9437804,8.33139667 C21.9809544,8.54881122 22,8.77218145 22,9 L22,18 C22,20.209139 20.209139,22 18,22 L6,22 C3.790861,22 2,20.209139 2,18 L2,9 C2,8.77218145 2.01904557,8.54881122 2.05563136,8.33139468 C2.01980398,8.22768478 2,8.11615513 2,8 L2,8 L2,7 C2,6.13451915 2.28071149,5.29238468 2.8,4.6 L2.8,4.6 L4.3,2.6 C5.05541753,1.59277663 6.24097079,1 7.5,1 L7.5,1 Z M18,7 L6,7 C4.8954305,7 4,7.8954305 4,9 L4,18 C4,19.1045695 4.8954305,20 6,20 L18,20 C19.1045695,20 20,19.1045695 20,18 L20,9 C20,7.8954305 19.1045695,7 18,7 Z M8.29289322,11.2928932 C8.68341751,10.9023689 9.31658249,10.9023689 9.70710678,11.2928932 L9.70710678,11.2928932 L12,13.5857864 L14.2928932,11.2928932 C14.6834175,10.9023689 15.3165825,10.9023689 15.7071068,11.2928932 C16.0976311,11.6834175 16.0976311,12.3165825 15.7071068,12.7071068 L15.7071068,12.7071068 L12.7071068,15.7071068 C12.3165825,16.0976311 11.6834175,16.0976311 11.2928932,15.7071068 L11.2928932,15.7071068 L8.29289322,12.7071068 C7.90236893,12.3165825 7.90236893,11.6834175 8.29289322,11.2928932 Z M16.5,3 L7.5,3 C6.87048539,3 6.27770876,3.29638831 5.9,3.8 L5.9,3.8 L4.88040369,5.15879948 C5.23567546,5.05542416 5.61136523,5 6,5 L18,5 C18.3882729,5 18.7636249,5.055321 19.1186039,5.15851085 L18.1,3.8 C17.7222912,3.29638831 17.1295146,3 16.5,3 L16.5,3 Z' />,\n    'Archive'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d=\"M19.36,2.72L20.78,4.14L15.06,9.85C16.13,11.39 16.28,13.24 15.38,14.44L9.06,8.12C10.26,7.22 12.11,7.37 13.65,8.44L19.36,2.72M5.93,17.57C3.92,15.56 2.69,13.16 2.35,10.92L7.23,8.83L14.67,16.27L12.58,21.15C10.34,20.81 7.94,19.58 5.93,17.57Z\" />,\n    'Broom'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M16.5,1 C17.7590292,1 18.9445825,1.59277663 19.7,2.6 L19.7,2.6 L21.2,4.6 C21.7192885,5.29238468 22,6.13451915 22,7 L22,7 L22,8 C22,8.11615513 21.980196,8.22768478 21.9437804,8.33139667 C21.9809544,8.54881122 22,8.77218145 22,9 L22,18 C22,20.209139 20.209139,22 18,22 L6,22 C3.790861,22 2,20.209139 2,18 L2,9 C2,8.77218145 2.01904557,8.54881122 2.05563136,8.33139468 C2.01980398,8.22768478 2,8.11615513 2,8 L2,8 L2,7 C2,6.13451915 2.28071149,5.29238468 2.8,4.6 L2.8,4.6 L4.3,2.6 C5.05541753,1.59277663 6.24097079,1 7.5,1 L7.5,1 Z M18,7 L6,7 C4.8954305,7 4,7.8954305 4,9 L4,18 C4,19.1045695 4.8954305,20 6,20 L18,20 C19.1045695,20 20,19.1045695 20,18 L20,9 C20,7.8954305 19.1045695,7 18,7 Z M12.7071068,10.7928932 L15.7071068,13.7928932 C16.0976311,14.1834175 16.0976311,14.8165825 15.7071068,15.2071068 C15.3165825,15.5976311 14.6834175,15.5976311 14.2928932,15.2071068 L12,12.9142136 L9.70710678,15.2071068 C9.31658249,15.5976311 8.68341751,15.5976311 8.29289322,15.2071068 C7.90236893,14.8165825 7.90236893,14.1834175 8.29289322,13.7928932 L11.2928932,10.7928932 C11.6834175,10.4023689 12.3165825,10.4023689 12.7071068,10.7928932 Z M16.5,3 L7.5,3 C6.87048539,3 6.27770876,3.29638831 5.9,3.8 L5.9,3.8 L4.88040369,5.15879948 C5.23567546,5.05542416 5.61136523,5 6,5 L18,5 C18.3882729,5 18.7636249,5.055321 19.1186039,5.15851085 L18.1,3.8 C17.7222912,3.29638831 17.1295146,3 16.5,3 L16.5,3 Z' />,\n    'Unarchive'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M18.1483713,2 L18.2928313,2.00686658 C19.0534832,2.07955132 19.6483713,2.72030388 19.6483713,3.5 C19.6483713,3.93788733 19.4570272,4.35391161 19.1245584,4.6388849 L16.9591265,6.49496934 L16.5350978,11.1592857 L19.5076921,14.5034542 C20.0580691,15.1226284 20.002298,16.070737 19.3831238,16.621114 C19.1085471,16.8651821 18.7539493,17 18.3865781,17 L12.9994219,17 L13,22 C13,22.5128358 12.6139598,22.9355072 12.1166211,22.9932723 L12,23 C11.4477153,23 11,22.5522847 11,22 L11,22 L10.9994219,17 L5.61342192,17 C4.7849948,17 4.11342192,16.3284271 4.11342192,15.5 C4.11342192,15.1326288 4.24823977,14.7780309 4.49230794,14.5034542 L7.46490224,11.1592857 L7.04087348,6.49496934 L4.87544164,4.6388849 C4.24645288,4.09975168 4.17361057,3.1528017 4.7127438,2.52381294 C4.9977171,2.19134409 5.41374137,2 5.8516287,2 L18.1483713,2 Z M16.7967426,4 L7.20325741,4 L8.34245623,4.97645613 C8.73788815,5.31539777 8.98550756,5.79522213 9.0326599,6.31389784 L9.45668865,10.9782142 C9.50671685,11.5285243 9.32683472,12.0750103 8.95972088,12.4880133 L6.72684384,15 L17.2731562,15 L15.0402791,12.4880133 C14.6731653,12.0750103 14.4932831,11.5285243 14.5433113,10.9782142 L14.9673401,6.31389784 C15.0144924,5.79522213 15.2621119,5.31539777 15.6575438,4.97645613 L16.7967426,4 Z' />,\n    'Pin2'\n);\n\n// <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n// <svg width=\"16px\" height=\"21px\" viewBox=\"0 0 16 21\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">\n//     <!-- Generator: Sketch 61.2 (89653) - https://sketch.com -->\n// <title>Combined Shape</title>\n// <desc>Created with Sketch.</desc>\n// <g id=\"Graphics\" stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"evenodd\">\n// <g id=\"Graphics-/-Icons-/-Pin\" transform=\"translate(-4.000000, -2.000000)\" fill=\"#707579\" fill-rule=\"nonzero\">\n// <path d=\"M18.1483713,2 L18.2928313,2.00686658 C19.0534832,2.07955132 19.6483713,2.72030388 19.6483713,3.5 C19.6483713,3.93788733 19.4570272,4.35391161 19.1245584,4.6388849 L16.9591265,6.49496934 L16.5350978,11.1592857 L19.5076921,14.5034542 C20.0580691,15.1226284 20.002298,16.070737 19.3831238,16.621114 C19.1085471,16.8651821 18.7539493,17 18.3865781,17 L12.9994219,17 L13,22 C13,22.5128358 12.6139598,22.9355072 12.1166211,22.9932723 L12,23 C11.4477153,23 11,22.5522847 11,22 L11,22 L10.9994219,17 L5.61342192,17 C4.7849948,17 4.11342192,16.3284271 4.11342192,15.5 C4.11342192,15.1326288 4.24823977,14.7780309 4.49230794,14.5034542 L7.46490224,11.1592857 L7.04087348,6.49496934 L4.87544164,4.6388849 C4.24645288,4.09975168 4.17361057,3.1528017 4.7127438,2.52381294 C4.9977171,2.19134409 5.41374137,2 5.8516287,2 L18.1483713,2 Z M16.7967426,4 L7.20325741,4 L8.34245623,4.97645613 C8.73788815,5.31539777 8.98550756,5.79522213 9.0326599,6.31389784 L9.45668865,10.9782142 C9.50671685,11.5285243 9.32683472,12.0750103 8.95972088,12.4880133 L6.72684384,15 L17.2731562,15 L15.0402791,12.4880133 C14.6731653,12.0750103 14.4932831,11.5285243 14.5433113,10.9782142 L14.9673401,6.31389784 C15.0144924,5.79522213 15.2621119,5.31539777 15.6575438,4.97645613 L16.7967426,4 Z\" id=\"Combined-Shape\"></path>\n// </g>\n// </g>\n// </svg>\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M13,20 C13.5522847,20 14,20.4477153 14,21 C14,21.5522847 13.5522847,22 13,22 L13,22 L11,22 C10.4477153,22 10,21.5522847 10,21 C10,20.4477153 10.4477153,20 11,20 L11,20 Z M3.30352462,2.28241931 C3.6998335,1.89776658 4.33292796,1.90721575 4.71758069,2.30352462 L4.71758069,2.30352462 L21.2175807,19.3035246 C21.6022334,19.6998335 21.5927842,20.332928 21.1964754,20.7175807 C20.8001665,21.1022334 20.167072,21.0927842 19.7824193,20.6964754 L19.7824193,20.6964754 L18.127874,18.9919007 C18.1241295,18.9923786 18.1203785,18.9928359 18.1166211,18.9932723 L18,19 L4,19 C3.23933773,19 2.77101468,18.1926118 3.11084891,17.5416503 L3.16794971,17.4452998 L5,14.6972244 L5,9 C5,7.98873702 5.21529462,7.00715088 5.62359521,6.10821117 L3.28241931,3.69647538 C2.89776658,3.3001665 2.90721575,2.66707204 3.30352462,2.28241931 Z M7.00817933,8.71121787 L7,9 L7,14.6972244 C7,15.0356672 6.91413188,15.3676193 6.75167088,15.6624466 L6.66410059,15.8066248 L5.86851709,17 L16.1953186,16.9999993 L7.16961011,7.7028948 C7.08210009,8.02986218 7.02771758,8.36725335 7.00817933,8.71121787 Z M12,2 C15.7854517,2 18.8690987,5.00478338 18.995941,8.75935025 L19,9 L19,12 C19,12.5522847 18.5522847,13 18,13 C17.4871642,13 17.0644928,12.6139598 17.0067277,12.1166211 L17,12 L17,9 C17,6.23857625 14.7614237,4 12,4 C11.3902636,4 10.7970241,4.10872043 10.239851,4.31831953 C9.72293204,4.51277572 9.14624852,4.25136798 8.95179232,3.734449 C8.75733613,3.21753002 9.01874387,2.6408465 9.53566285,2.4463903 C10.3171048,2.15242503 11.1488212,2 12,2 Z' />,\n    'Mute'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M13,20 C13.5522847,20 14,20.4477153 14,21 C14,21.5522847 13.5522847,22 13,22 L13,22 L11,22 C10.4477153,22 10,21.5522847 10,21 C10,20.4477153 10.4477153,20 11,20 L11,20 Z M12,2 C15.8659932,2 19,5.13400675 19,9 L19,14.6972244 L20.8320503,17.4452998 C21.2750868,18.1098545 20.7986954,19 20,19 L4,19 C3.20130462,19 2.72491322,18.1098545 3.16794971,17.4452998 L5,14.6972244 L5,9 C5,5.13400675 8.13400675,2 12,2 Z M12,4 C9.23857625,4 7,6.23857625 7,9 L7,14.6972244 C7,15.0920743 6.88312395,15.4780897 6.66410059,15.8066248 L5.86851709,17 L18.1314829,17 L17.3358994,15.8066248 C17.1168761,15.4780897 17,15.0920743 17,14.6972244 L17,9 C17,6.23857625 14.7614237,4 12,4 Z' />,\n    'Unmute'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M12,12 C15.9072418,12 18.715318,13.0364023 20.3351717,15.1788288 C20.7665758,15.7493929 21,16.4451545 21,17.1604559 L21,18.2857143 C21,19.7847729 19.7847729,21 18.2857143,21 L5.71428571,21 C4.21522711,21 3,19.7847729 3,18.2857143 L3,17.160494 C3,16.445199 3.23340019,15.7494497 3.66478123,15.178891 C5.28463457,13.0364199 8.09272555,12 12,12 Z M12,14 C8.66170181,14 6.44476079,14.8182362 5.26012276,16.3850773 C5.09133017,16.6083279 5,16.8805766 5,17.160494 L5,18.2857143 C5,18.6802034 5.31979661,19 5.71428571,19 L18.2857143,19 C18.6802034,19 19,18.6802034 19,18.2857143 L19,17.1604559 C19,16.8805572 18.9086617,16.6083073 18.7398491,16.38504 C17.5552048,14.8182236 15.3382718,14 12,14 Z M12,2 C14.209139,2 16,3.790861 16,6 C16,8.209139 14.209139,10 12,10 C9.790861,10 8,8.209139 8,6 C8,3.790861 9.790861,2 12,2 Z M12,4 C10.8954305,4 10,4.8954305 10,6 C10,7.1045695 10.8954305,8 12,8 C13.1045695,8 14,7.1045695 14,6 C14,4.8954305 13.1045695,4 12,4 Z' />,\n    'User'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M8,13 C11.3229116,13 13.7530244,13.8337117 15.2223821,15.5699359 C15.724477,16.1632234 16,16.915291 16,17.6925226 L16,18.5 C16,19.8807119 14.8807119,21 13.5,21 L2.5,21 C1.11928813,21 0,19.8807119 0,18.5 L0,17.6925204 C0,16.9152876 0.275524605,16.1632192 0.777621166,15.569932 C2.24697824,13.8337108 4.67709024,13 8,13 Z M17.9515112,14.0335753 L18.0683205,14.0347288 C20.2213596,14.1802785 21.8813904,14.7876525 23.0130897,15.8958397 C23.5916808,16.4623828 23.9388003,17.2206225 23.9926356,18.0235027 L24,18.2434663 L24,18.75 C24,19.940864 23.0748384,20.9156449 21.9040488,20.9948092 L21.75,21 L19,21 C18.4477153,21 18,20.5522847 18,20 C18,19.4871642 18.3860402,19.0644928 18.8833789,19.0067277 L19,19 L21.75,19 C21.8683467,19 21.9674868,18.9177666 21.9933973,18.8073227 L22,18.75 L22,18.2434663 C22,17.8977921 21.8608093,17.5666871 21.6138154,17.3248364 C20.8641159,16.5907126 19.6490875,16.1461566 17.9334244,16.0301743 C17.3823973,15.9929238 16.9658991,15.5160306 17.0031496,14.9650035 C17.0377394,14.4533355 17.4514089,14.0576643 17.9515112,14.0335753 L17.9515112,14.0335753 Z M8,15 C5.21130036,15 3.33538166,15.6435809 2.30428673,16.861943 C2.10781409,17.0940989 2,17.3883868 2,17.6925212 L2,18.5 C2,18.7761424 2.22385763,19 2.5,19 L13.5,19 C13.7761424,19 14,18.7761424 14,18.5 L14,17.6925226 C14,17.3883883 13.8921864,17.0941004 13.6957148,16.8619448 C12.6646202,15.6435815 10.788701,15 8,15 Z M17,5 C18.9329966,5 20.5,6.56700338 20.5,8.5 C20.5,10.4329966 18.9329966,12 17,12 C15.0670034,12 13.5,10.4329966 13.5,8.5 C13.5,6.56700338 15.0670034,5 17,5 Z M8,3 C10.209139,3 12,4.790861 12,7 C12,9.209139 10.209139,11 8,11 C5.790861,11 4,9.209139 4,7 C4,4.790861 5.790861,3 8,3 Z M17,7 C16.1715729,7 15.5,7.67157288 15.5,8.5 C15.5,9.32842712 16.1715729,10 17,10 C17.8284271,10 18.5,9.32842712 18.5,8.5 C18.5,7.67157288 17.8284271,7 17,7 Z M8,5 C6.8954305,5 6,5.8954305 6,7 C6,8.1045695 6.8954305,9 8,9 C9.1045695,9 10,8.1045695 10,7 C10,5.8954305 9.1045695,5 8,5 Z' />,\n    'Group'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M7.41421356,19 L3.87781746,22.5363961 C3.44824074,22.9659728 2.75175926,22.9659728 2.32218254,22.5363961 C2.11589252,22.3301061 2,22.0503168 2,21.7585786 L2,6 C2,3.790861 3.790861,2 6,2 L18,2 C20.209139,2 22,3.790861 22,6 L22,15 C22,17.209139 20.209139,19 18,19 L7.41421356,19 Z M4,19.5857864 L6.20502525,17.3807612 C6.44882255,17.1369639 6.77948263,17 7.12426407,17 L18,17 C19.1045695,17 20,16.1045695 20,15 L20,6 C20,4.8954305 19.1045695,4 18,4 L6,4 C4.8954305,4 4,4.8954305 4,6 L4,19.5857864 Z' />,\n    'Message'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M6,2 L18,2 C20.1421954,2 21.8910789,3.68396847 21.9951047,5.80035966 L22,6 L22,10 C22,10.5522847 21.5522847,11 21,11 C20.4871642,11 20.0644928,10.6139598 20.0067277,10.1166211 L20,10 L20,6 C20,4.9456382 19.1841222,4.08183488 18.1492623,4.00548574 L18,4 L6,4 C4.9456382,4 4.08183488,4.81587779 4.00548574,5.85073766 L4,6 L4,19.5857864 L6.20502525,17.3807612 C6.41399436,17.1717921 6.68678103,17.0413128 6.97757724,17.0082977 L7.12426407,17 L13,17 C13.5522847,17 14,17.4477153 14,18 C14,18.5128358 13.6139598,18.9355072 13.1166211,18.9932723 L13,19 L7.41421356,19 L3.87781746,22.5363961 C3.44824074,22.9659728 2.75175926,22.9659728 2.32218254,22.5363961 C2.14536253,22.3595761 2.034957,22.1287566 2.00702113,21.8826983 L2,21.7585786 L2,6 C2,3.85780461 3.68396847,2.10892112 5.80035966,2.00489531 L6,2 L18,2 L6,2 Z M19,12 C21.209139,12 23,13.790861 23,16 C23,18.209139 21.209139,20 19,20 C16.790861,20 15,18.209139 15,16 C15,13.790861 16.790861,12 19,12 Z M19,14 C17.8954305,14 17,14.8954305 17,16 C17,17.1045695 17.8954305,18 19,18 C20.1045695,18 21,17.1045695 21,16 C21,14.8954305 20.1045695,14 19,14 Z' />,\n    'Unread'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport Popover from '@material-ui/core/Popover';\nimport ChatTile from './ChatTile';\nimport DialogContent from './DialogContent';\nimport DialogBadge from './DialogBadge';\nimport DialogTitle from './DialogTitle';\nimport DialogMeta from './DialogMeta';\nimport ArchiveIcon from '../../Assets/Icons/Archive';\nimport BroomIcon from '../../Assets/Icons/Broom';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport UnarchiveIcon from '../../Assets/Icons/Unarchive';\nimport PinIcon from '../../Assets/Icons/Pin2';\nimport UnpinIcon from '../../Assets/Icons/Pin2';\nimport MuteIcon from '../../Assets/Icons/Mute';\nimport UnmuteIcon from '../../Assets/Icons/Unmute';\nimport UserIcon from '../../Assets/Icons/User';\nimport GroupIcon from '../../Assets/Icons/Group';\nimport MessageIcon from '../../Assets/Icons/Message';\nimport UnreadIcon from '../../Assets/Icons/Unread';\nimport {\n    canAddChatToList, canClearHistory,\n    canDeleteChat,\n    getDeleteChatTitle,\n    getViewInfoTitle,\n    isChatArchived,\n    isChatMuted,\n    isChatPinned,\n    isChatSecret,\n    isChatUnread,\n    isMeChat,\n    isPrivateChat\n} from '../../Utils/Chat';\nimport {\n    addChatToList,\n    leaveChat,\n    toggleChatIsMarkedAsUnread,\n    toggleChatIsPinned,\n    toggleChatNotificationSettings\n} from '../../Actions/Chat';\nimport { openChat } from '../../Actions/Client';\nimport { viewMessages } from '../../Actions/Message';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport OptionStore from '../../Stores/OptionStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Dialog.css';\n\nclass Dialog extends Component {\n    static contextMenuId;\n\n    constructor(props) {\n        super(props);\n\n        this.dialog = React.createRef();\n\n        const chat = ChatStore.get(this.props.chatId);\n        this.state = {\n            chat,\n            contextMenu: false,\n            left: 0,\n            top: 0\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, t, hidden, isLastPinned, chatList, style } = this.props;\n        const { contextMenu } = this.state;\n\n        if (nextProps.chatId !== chatId) {\n            // console.log('[vl] Dialog.shouldUpdate true chatId');\n            return true;\n        }\n\n        if (nextProps.t !== t) {\n            // console.log('[vl] Dialog.shouldUpdate true t');\n            return true;\n        }\n\n        if (nextProps.hidden !== hidden) {\n            // console.log('[vl] Dialog.shouldUpdate true hidden');\n            return true;\n        }\n\n        if (nextProps.isLastPinned !== isLastPinned) {\n            // console.log('[vl] Dialog.shouldUpdate true isLastPinned');\n            return true;\n        }\n\n        if (nextState.contextMenu !== contextMenu) {\n            // console.log('[vl] Dialog.shouldUpdate true contextMenu');\n            return true;\n        }\n\n        if (nextState.chatList !== chatList) {\n            // console.log('[vl] Dialog.shouldUpdate true contextMenu');\n            return true;\n        }\n\n        if (nextProps.style && style && style.top !== nextProps.style.top) {\n            // console.log('[vl] Dialog.shouldUpdate true style');\n            return true;\n        }\n\n        // console.log('[vl] Dialog.shouldUpdate false');\n        return false;\n    }\n\n    componentDidMount() {\n        ApplicationStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.off('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    onClientUpdateChatId = update => {\n        const { chatId } = this.props;\n\n        if (chatId === update.previousChatId || chatId === update.nextChatId) {\n            this.forceUpdate();\n        }\n    };\n\n    handleSelect = event => {\n        if (event.button === 0) {\n            openChat(this.props.chatId);\n        }\n    };\n\n    handleContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { chatId, chatList } = this.props;\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const contextMenuId = new Date();\n            Dialog.contextMenuId = contextMenuId;\n\n            const left = event.clientX;\n            const top = event.clientY;\n            const isPinned = isChatPinned(chatId, chatList);\n            const canTogglePin = (await this.canPinChats(chatId)) || isPinned;\n            const canToggleArchive = canAddChatToList(chatId);\n            const canMute = !isMeChat(chatId);\n\n            if (Dialog.contextMenuId !== contextMenuId) {\n                return;\n            }\n\n            this.setState({\n                contextMenu: true,\n                canTogglePin,\n                canToggleArchive,\n                canMute,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    handleMute = event => {\n        this.handleCloseContextMenu(event);\n\n        const { chatId } = this.props;\n\n        toggleChatNotificationSettings(chatId, !isChatMuted(chatId));\n    };\n\n    canPinChats = async chatId => {\n        const { chatList } = this.props;\n\n        const pinnedSumMaxOption = isChatArchived(chatId)\n            ? OptionStore.get('pinned_archived_chat_count_max')\n            : OptionStore.get('pinned_chat_count_max');\n        if (!pinnedSumMaxOption) return false;\n\n        const isSecret = isChatSecret(chatId);\n        const chats = await TdLibController.send({\n            '@type': 'getChats',\n            chat_list: chatList,\n            offset_order: '9223372036854775807',\n            offset_chat_id: 0,\n            limit: pinnedSumMaxOption.value + 10\n        });\n\n        const pinnedSum = chats.chat_ids.reduce((x, id) => {\n            if (isChatSecret(id) !== isSecret) return x;\n\n            const chat = ChatStore.get(id);\n\n            return x + (chat && isChatPinned(chat.id, chatList) ? 1 : 0);\n        }, 0);\n\n        return pinnedSum < pinnedSumMaxOption.value;\n    };\n\n    handlePin = async event => {\n        this.handleCloseContextMenu(event);\n\n        const { chatId, chatList } = this.props;\n        const isPinned = isChatPinned(chatId, chatList);\n\n        if (!isPinned && !this.canPinChats(chatId)) return;\n\n        toggleChatIsPinned(chatId, chatList, !isPinned);\n    };\n\n    handleArchive = async event => {\n        this.handleCloseContextMenu(event);\n\n        const { chatId } = this.props;\n        if (!canAddChatToList(chatId)) return;\n\n        addChatToList(chatId, { '@type': isChatArchived(chatId) ? 'chatListMain' : 'chatListArchive' });\n    };\n\n    handleViewInfo = event => {\n        this.handleCloseContextMenu(event);\n\n        const { chatId } = this.props;\n\n        openChat(chatId, null, true);\n    };\n\n    handleRead = event => {\n        this.handleCloseContextMenu(event);\n\n        const { chatId } = this.props;\n\n        const isUnread = isChatUnread(chatId);\n        if (isUnread) {\n            const chat = ChatStore.get(chatId);\n            if (!chat) return;\n\n            const { is_marked_as_unread, last_message, unread_count } = chat;\n            if (unread_count > 0 && last_message) {\n                viewMessages(chatId, [last_message.id], true);\n            } else if (is_marked_as_unread) {\n                toggleChatIsMarkedAsUnread(chatId, false);\n            }\n        } else {\n            toggleChatIsMarkedAsUnread(chatId, true);\n        }\n    };\n\n    handleDeleteChat = event => {\n        this.handleCloseContextMenu(event);\n\n        const { chatId } = this.props;\n\n        leaveChat(chatId)\n    };\n\n    render() {\n        const { chatId, chatList, showSavedMessages, hidden, t, isLastPinned, style } = this.props;\n        const { contextMenu, left, top, canToggleArchive, canTogglePin, canMute } = this.state;\n\n        const deleteChat = canDeleteChat(chatId);\n        const deleteChatTitle = getDeleteChatTitle(chatId, t);\n\n        const isPinned = isChatPinned(chatId, chatList);\n        const currentChatId = ApplicationStore.getChatId();\n        const isSelected = currentChatId === chatId;\n        const isMuted = isChatMuted(chatId);\n        const isUnread = isChatUnread(chatId);\n        const isArchived = isChatArchived(chatId);\n        return (\n            <div\n                ref={this.dialog}\n                className={classNames('dialog', { 'item-selected': isSelected }, { 'dialog-hidden': hidden })}\n                onMouseDown={this.handleSelect}\n                onContextMenu={this.handleContextMenu}\n                style={style}>\n                <div className='dialog-wrapper'>\n                    <ChatTile chatId={chatId} dialog showSavedMessages={showSavedMessages} showOnline />\n                    <div className='dialog-inner-wrapper'>\n                        <div className='tile-first-row'>\n                            <DialogTitle chatId={chatId} />\n                            <DialogMeta chatId={chatId} />\n                        </div>\n                        <div className='tile-second-row'>\n                            <DialogContent chatId={chatId} />\n                            <DialogBadge chatId={chatId} chatList={chatList} />\n                        </div>\n                    </div>\n                </div>\n                <Popover\n                    open={contextMenu}\n                    onClose={this.handleCloseContextMenu}\n                    anchorReference='anchorPosition'\n                    anchorPosition={{ top, left }}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'left'\n                    }}\n                    onMouseDown={e => e.stopPropagation()}>\n                    <MenuList onClick={e => e.stopPropagation()}>\n                        {canToggleArchive && (\n                            <MenuItem onClick={this.handleArchive}>\n                                {isArchived ? (\n                                    <>\n                                        <ListItemIcon>\n                                            <UnarchiveIcon />\n                                        </ListItemIcon>\n                                        <ListItemText primary={t('Unarchive')} />\n                                    </>\n                                ) : (\n                                    <>\n                                        <ListItemIcon>\n                                            <ArchiveIcon />\n                                        </ListItemIcon>\n                                        <ListItemText primary={t('Archive')} />\n                                    </>\n                                )}\n                            </MenuItem>\n                        )}\n                        {canTogglePin && (\n                            <MenuItem onClick={this.handlePin}>\n                                {isPinned ? (\n                                    <>\n                                        <ListItemIcon>\n                                            <UnpinIcon />\n                                        </ListItemIcon>\n                                        <ListItemText primary={t('UnpinFromTop')} />\n                                    </>\n                                ) : (\n                                    <>\n                                        <ListItemIcon>\n                                            <PinIcon />\n                                        </ListItemIcon>\n                                        <ListItemText primary={t('PinToTop')} />\n                                    </>\n                                )}\n                            </MenuItem>\n                        )}\n                        <MenuItem onClick={this.handleViewInfo}>\n                            <ListItemIcon>\n                                {isPrivateChat(chatId) ? <UserIcon /> : <GroupIcon />}\n                            </ListItemIcon>\n                            <ListItemText primary={getViewInfoTitle(chatId, t)} />\n                        </MenuItem>\n                        { canMute && (\n                            <MenuItem onClick={this.handleMute}>\n                                {isMuted ? (\n                                    <>\n                                        <ListItemIcon>\n                                            <UnmuteIcon />\n                                        </ListItemIcon>\n                                        <ListItemText primary={t('ChatsUnmute')} />\n                                    </>\n                                ) : (\n                                    <>\n                                        <ListItemIcon>\n                                            <MuteIcon />\n                                        </ListItemIcon>\n                                        <ListItemText primary={t('ChatsMute')} />\n                                    </>\n                                )}\n                            </MenuItem>\n                        )}\n                        <MenuItem onClick={this.handleRead}>\n                            {isUnread ? (\n                                <>\n                                    <ListItemIcon>\n                                        <MessageIcon />\n                                    </ListItemIcon>\n                                    <ListItemText primary={t('MarkAsRead')} />\n                                </>\n                            ) : (\n                                <>\n                                    <ListItemIcon>\n                                        <UnreadIcon />\n                                    </ListItemIcon>\n                                    <ListItemText primary={t('MarkAsUnread')} />\n                                </>\n                            )}\n                        </MenuItem>\n                        {/*{clearHistory && (*/}\n                        {/*    <MenuItem onClick={this.handleClearHistory}>*/}\n                        {/*        <ListItemIcon>*/}\n                        {/*            <BroomIcon />*/}\n                        {/*        </ListItemIcon>*/}\n                        {/*        <ListItemText primary={t('ClearHistory')} />*/}\n                        {/*    </MenuItem>*/}\n                        {/*)}*/}\n                        {deleteChat && deleteChatTitle && (\n                            <MenuItem onClick={this.handleDeleteChat}>\n                                <ListItemIcon>\n                                    <DeleteIcon />\n                                </ListItemIcon>\n                                <ListItemText primary={deleteChatTitle} />\n                            </MenuItem>\n                        )}\n                    </MenuList>\n                </Popover>\n            </div>\n        );\n    }\n}\n\nDialog.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    chatList: PropTypes.object.isRequired,\n    hidden: PropTypes.bool,\n    showSavedMessages: PropTypes.bool,\n    isLastPinned: PropTypes.bool,\n    style: PropTypes.object\n};\n\nDialog.defaultProps = {\n    hidden: false,\n    showSavedMessages: true\n};\n\nexport default withTranslation()(Dialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport TdLibController from '../Controllers/TdLibController';\n\nexport function viewMessages(chatId, messageIds, forceRead) {\n    TdLibController.send({\n        '@type': 'viewMessages',\n        chat_id: chatId,\n        message_ids: messageIds,\n        force_read: forceRead\n    });\n}\n\nexport function pinMessage(chatId, messageId, disableNotification = false) {\n    TdLibController.send({\n        '@type': 'pinChatMessage',\n        chat_id: chatId,\n        message_id: messageId,\n        disable_notification: disableNotification\n    });\n}\n\nexport function unpinMessage(chatId) {\n    TdLibController.send({\n        '@type': 'unpinChatMessage',\n        chat_id: chatId\n    });\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { getChatTitle } from '../../Utils/Chat';\nimport './DialogPlaceholder.css';\n\nclass DialogPlaceholder extends React.Component {\n    render() {\n        const { chatId, index, showTitle } = this.props;\n\n        let title = null;\n        if (showTitle) {\n            title = getChatTitle(chatId, true);\n        }\n\n        const titleWidth = `${50 + Math.sin(index) * 10}%`;\n        const contentWidth = `${70 + Math.cos(index) * 10}%`;\n\n        return (\n            <div className='dialog-placeholder'>\n                <div className='dialog-placeholder-wrapper'>\n                    <div className='dialog-placeholder-tile' />\n                    <div className='dialog-placeholder-inner-wrapper'>\n                        <div className='tile-first-row'>\n                            {showTitle ? (\n                                title\n                            ) : (\n                                <div className='dialog-placeholder-title' style={{ width: titleWidth }} />\n                            )}\n                        </div>\n                        <div className='tile-second-row'>\n                            <div className='dialog-placeholder-content' style={{ width: contentWidth }} />\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nDialogPlaceholder.propTypes = {\n    index: PropTypes.number.isRequired,\n    showTitle: PropTypes.bool\n};\n\nexport default DialogPlaceholder;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport './VirtualizedList.css';\n\nconst style = {\n    listWrapper: height => ({\n        height,\n        position: 'relative'\n    }),\n    item: (index, height) => ({\n        height,\n        left: 0,\n        right: 0,\n        top: height * index,\n        position: 'absolute'\n    })\n};\n\nexport class VirtualizedList extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.listRef = React.createRef();\n\n        this.state = {\n            scrollTop: 0,\n            renderIds: new Map(),\n            renderIdsList: [],\n            viewportHeight: 0\n        };\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (prevProps.source !== this.props.source) {\n            this.setViewportHeight();\n        }\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        return true;\n\n        // const { renderIds } = this.state;\n        // const { renderIds: nextRenderIds } = nextState;\n        //\n        // if (renderIds.size === nextRenderIds.size) {\n        //     renderIds.forEach((value, key) => {\n        //         if (!nextRenderIds.has(key)) {\n        //             return true;\n        //         }\n        //     });\n        //\n        //     return false;\n        // }\n        //\n        // return true;\n    }\n\n    componentDidMount() {\n        window.addEventListener('resize', this.setViewportHeight, true);\n\n        const { current } = this.listRef;\n        if (!current) return;\n        current.addEventListener('scroll', this.setScrollPosition, true);\n\n        this.setViewportHeight();\n    }\n\n    setViewportHeight = () => {\n        const { source } = this.props;\n        const { scrollTop } = this.state;\n        const { current } = this.listRef;\n        if (!current) return;\n\n        const viewportHeight = parseFloat(window.getComputedStyle(current, null).getPropertyValue('height'));\n        const renderIds = this.getRenderIds(source, viewportHeight, scrollTop);\n\n        // console.log('[vl] setViewportHeight');\n        this.setState({ viewportHeight, ...renderIds });\n    };\n\n    getRenderIds(source, viewportHeight, scrollTop) {\n        const renderIds = new Map();\n        const renderIdsList = [];\n        source.forEach((item, index) => {\n            if (this.isVisibleItem(index, viewportHeight, scrollTop)) {\n                renderIds.set(index, index);\n                renderIdsList.push(index);\n            }\n        });\n\n        return { renderIds, renderIdsList };\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener('resize', this.setViewportHeight);\n\n        const { current } = this.listRef;\n        if (!current) return;\n        current.removeEventListener('scroll', this.setScrollPosition);\n    }\n\n    getListRenderIds() {\n        const { renderIds } = this.state;\n\n        return renderIds;\n    }\n\n    setScrollPosition = event => {\n        const { source, rowHeight, onScroll } = this.props;\n        const { viewportHeight, scrollTop } = this.state;\n\n        if (Math.abs(event.target.scrollTop - scrollTop) >= rowHeight) {\n            const renderIds = this.getRenderIds(source, viewportHeight, event.target.scrollTop);\n\n            this.setState({\n                scrollTop: event.target.scrollTop,\n                ...renderIds\n            });\n        }\n\n        if (onScroll) {\n            onScroll(event);\n        }\n    };\n\n    getListRef() {\n        return this.listRef;\n    }\n\n    isVisibleItem = (index, viewportHeight, scrollTop) => {\n        const { overScanCount, rowHeight } = this.props;\n\n        const itemTop = index * rowHeight;\n        const itemBottom = (index + 1) * rowHeight;\n\n        return (\n            itemTop > scrollTop - overScanCount * rowHeight &&\n            itemBottom < scrollTop + viewportHeight + overScanCount * rowHeight\n        );\n    };\n\n    render() {\n        const { className, source, renderItem, rowHeight } = this.props;\n        const { renderIds } = this.state;\n\n        const items = (source || []).map((item, index) => {\n            return renderIds.has(index) && renderItem({ index, style: style.item(index, rowHeight) });\n        });\n\n        // console.log('[vl] render', source, renderIds);\n\n        return (\n            <div ref={this.listRef} className={classNames('vlist', className)}>\n                <div style={style.listWrapper((source || []).length * rowHeight)}>\n                    {items}\n                </div>\n                {/*<div className='vlist-top-border'/>*/}\n            </div>\n        );\n    }\n}\n\nVirtualizedList.defaultProps = {\n    source: [],\n    rowHeight: 72,\n    overScanCount: 5\n};\n\nVirtualizedList.propTypes = {\n    renderItem: PropTypes.func,\n    onScroll: PropTypes.func,\n    rowHeight: PropTypes.number,\n    className: PropTypes.string,\n    source: PropTypes.array.isRequired,\n    overScanCount: PropTypes.number.isRequired\n};\n\nexport default VirtualizedList;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nexport function findLastTextNode(element) {\n    if (element.nodeType === Node.TEXT_NODE) {\n        return element;\n    }\n\n    for (let i = element.childNodes.length - 1; i >= 0; i--) {\n        const textNode = findLastTextNode(element.childNodes[i]);\n        if (textNode) {\n            return textNode;\n        }\n    }\n\n    return null;\n}\n\nexport function focusInput(element) {\n    if (!element) return;\n\n    const textNode = findLastTextNode(element);\n    if (textNode) {\n        const range = document.createRange();\n        range.setStart(textNode, textNode.length);\n        range.collapse(true);\n\n        const selection = window.getSelection();\n        selection.removeAllRanges();\n        selection.addRange(range);\n    }\n\n    element.focus();\n}\n\nexport function scrollTop(element, behavior = 'smooth') {\n    if (!element) return;\n\n    element.scrollTop = Math.min(element.scrollTop, 100);\n    setTimeout(() => {\n        element.scrollTo({\n            top: 0,\n            behavior\n        });\n    }, 50);\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M18.5,1.6784749 C19.8807119,1.6784749 21,2.79776303 21,4.1784749 L21,19.8215251 C21,20.4013736 20.7984395,20.9631907 20.4298256,21.4107932 C19.552097,22.4766065 17.9765451,22.6290792 16.9107319,21.7513507 L12,17.7064749 L12,19.5 C12,21.0976809 10.75108,22.4036609 9.17627279,22.4949073 L9,22.5 C7.34314575,22.5 6,21.1568542 6,19.5 L6,19.5 L5.99981203,16.8999437 C3.71766536,16.4366008 2,14.4188915 2,12 C2,9.23857625 4.23857625,7 7,7 L11.1412346,7 L16.9107319,2.24864931 C17.3583344,1.88003543 17.9201515,1.6784749 18.5,1.6784749 Z M8,19.5 C8,20.0522847 8.44771525,20.5 9,20.5 C9.55228475,20.5 10,20.0522847 10,19.5 L10,19.5 L10,16.9994749 L8,16.9994749 Z M18.5,3.6784749 C18.3840303,3.6784749 18.2716669,3.71878701 18.1821464,3.79250978 L12.4126491,8.54386047 C12.054567,8.83875158 11.6051134,9 11.1412346,9 L7,9 C5.34314575,9 4,10.3431458 4,12 C4,13.6568542 5.34314575,15 7,15 L11.1412346,15 C11.6051134,15 12.054567,15.1612484 12.4126491,15.4561395 L18.1821464,20.2074902 C18.395309,20.3830359 18.7104194,20.3525414 18.8859651,20.1393787 C18.9596879,20.0498582 19,19.9374948 19,19.8215251 L19,4.1784749 C19,3.90233253 18.7761424,3.6784749 18.5,3.6784749 Z' />,\n    'Channel'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M4,16 L20,16 C20.5522847,16 21,16.4477153 21,17 C21,17.5128358 20.6139598,17.9355072 20.1166211,17.9932723 L20,18 L4,18 C3.44771525,18 3,17.5522847 3,17 C3,16.4871642 3.38604019,16.0644928 3.88337887,16.0067277 L4,16 L20,16 L4,16 Z M4,11 L20,11 C20.5522847,11 21,11.4477153 21,12 C21,12.5128358 20.6139598,12.9355072 20.1166211,12.9932723 L20,13 L4,13 C3.44771525,13 3,12.5522847 3,12 C3,11.4871642 3.38604019,11.0644928 3.88337887,11.0067277 L4,11 Z M4,6 L20,6 C20.5522847,6 21,6.44771525 21,7 C21,7.51283584 20.6139598,7.93550716 20.1166211,7.99327227 L20,8 L4,8 C3.44771525,8 3,7.55228475 3,7 C3,6.48716416 3.38604019,6.06449284 3.88337887,6.00672773 L4,6 Z' />,\n    'Menu'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M12,1 C18.0751322,1 23,5.92486775 23,12 C23,18.0751322 18.0751322,23 12,23 C5.92486775,23 1,18.0751322 1,12 C1,5.92486775 5.92486775,1 12,1 Z M12,3 C7.02943725,3 3,7.02943725 3,12 C3,16.9705627 7.02943725,21 12,21 C16.9705627,21 21,16.9705627 21,12 C21,7.02943725 16.9705627,3 12,3 Z M11.9779053,15.294165 C12.6523978,15.294165 13.1985107,15.8124506 13.1985107,16.4732666 C13.1985107,17.1238794 12.6418359,17.6523682 11.9779053,17.6523682 C11.3175981,17.6523682 10.7572998,17.1168932 10.7572998,16.4732666 C10.7572998,15.8194152 11.3070616,15.294165 11.9779053,15.294165 Z M12.3306885,6.9 C14.2795758,6.9 15.719873,7.96860761 15.719873,9.65625 C15.719873,10.6709643 15.2884676,11.3128276 14.2962576,12.0165438 L13.7962596,12.3573922 C13.1714716,12.7953495 12.9391113,13.1198405 12.9391113,13.5887451 L12.9391113,13.7132568 C12.9391113,14.2033083 12.5618823,14.5499512 11.9986572,14.5499512 C11.4068652,14.5499512 11.0789551,14.2281702 11.0789551,13.630249 L11.0789551,13.4953613 C11.0789551,12.5573197 11.487326,11.9745882 12.4189711,11.3276124 L12.7619755,11.0871498 C13.5110635,10.5470305 13.7248291,10.2540011 13.7248291,9.73925781 C13.7248291,8.99900037 13.149745,8.51113281 12.2580566,8.51113281 C11.6278214,8.51113281 11.1498312,8.8062186 10.7980484,9.38963394 L10.5277106,9.73161327 L10.5277106,9.73161327 L10.4428973,9.8298462 C10.2452762,10.0412654 10.0433297,10.1297852 9.70556641,10.1297852 C9.27040611,10.1297852 8.9,9.79174463 8.9,9.31384277 C8.9,9.13743147 8.92867764,8.96536563 8.98734042,8.76592778 C9.31829759,7.6784971 10.623966,6.9 12.3306885,6.9 Z' />,\n    'Help'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M13.4542714,1 C14.5034049,1 15.447759,1.80035641 15.6254934,2.83409123 L15.8863908,4.35151652 C16.4016786,4.58533298 16.8892685,4.86975342 17.3418997,5.20083722 L18.729489,4.68523838 C19.7215225,4.31661974 20.8874905,4.74674629 21.4093705,5.66596818 L22.3631385,7.34590292 C22.8807104,8.25753682 22.6641696,9.47960173 21.8668015,10.158283 L20.7203437,11.1340925 C20.7523279,11.4263818 20.768775,11.713662 20.768775,12 C20.768775,12.2863013 20.7523321,12.5735444 20.7203561,12.8657949 L21.8666717,13.8411466 C22.6665193,14.5217032 22.8803536,15.7423983 22.3631806,16.6535107 L21.4094127,18.3337799 C20.8871999,19.2537711 19.7186485,19.6823124 18.729489,19.3147616 L17.3418997,18.7991628 C16.8892685,19.1302466 16.4016786,19.414667 15.8863908,19.6484835 L15.6254934,21.1659088 C15.4482371,22.1968626 14.500959,23 13.4542714,23 L11.5464067,23 C10.4973482,23 9.55294448,22.1997516 9.37499917,21.1661206 L9.11371177,19.6483803 C8.59870239,19.4145642 8.11116816,19.1301583 7.65836517,18.7991106 L6.27103566,19.3147347 C5.27906015,19.683419 4.11313098,19.25315 3.59116388,18.3339086 L2.63706709,16.6536394 C2.11936149,15.741903 2.33579039,14.5197379 3.13332831,13.8411466 L4.27990265,12.8655748 C4.24777315,12.5724368 4.23122501,12.2856623 4.23122501,12 C4.23122501,11.7143012 4.24777739,11.4274899 4.27991498,11.1343127 L3.1331985,10.158283 C2.33341387,9.47754488 2.11971252,8.25678535 2.6371093,7.34577419 L3.59120609,5.66583945 C4.11357343,4.74607633 5.28204594,4.31769072 6.27103566,4.68526527 L7.65836517,5.20088944 C8.02060756,4.93605128 8.40507795,4.70106385 8.80806121,4.49794854 L9.11371177,4.35161967 L9.37499917,2.83387942 C9.55246572,1.80302941 10.4997942,1 11.5464067,1 L13.4542714,1 Z M13.4542714,3 L11.5464067,3 C11.4759721,3 11.3587093,3.09940116 11.3460046,3.17319893 L10.9911423,5.23448734 C10.9307198,5.5854636 10.6881938,5.87781899 10.3544182,6.00203275 C9.66471384,6.25870451 9.03276419,6.62813555 8.48454956,7.09507573 C8.20871593,7.3300162 7.82737524,7.39737412 7.48774669,7.2711455 L5.57427032,6.55997006 C5.50662795,6.53482964 5.36908018,6.58525743 5.33030218,6.65353615 L4.37620539,8.3334709 C4.33235155,8.41068695 4.36153792,8.57741281 4.42951339,8.63527025 L5.99467372,9.96745916 C6.26327177,10.1960769 6.39156502,10.5492878 6.3322987,10.8969923 C6.26535074,11.2897637 6.23122501,11.6509097 6.23122501,12 C6.23122501,12.3490903 6.26535074,12.7102363 6.3322987,13.1030077 C6.39157523,13.4507721 6.26322722,13.80404 5.99454391,14.0326513 L4.42938358,15.3643802 C4.36263141,15.4211768 4.33280785,15.5895892 4.3762476,15.6660914 L5.33034439,17.3463606 C5.36962791,17.4155432 5.5053715,17.4656373 5.57427032,17.4400299 L7.48774669,16.7288545 C7.82737524,16.6026259 8.20871593,16.6699838 8.48454956,16.9049243 C9.03276419,17.3718644 9.66471384,17.7412955 10.3544182,17.9979673 C10.6881938,18.122181 10.9307198,18.4145364 10.9911423,18.7655127 L11.3460046,20.8268011 C11.3591616,20.9032262 11.473368,21 11.5464067,21 L13.4542714,21 C13.5246311,21 13.6417446,20.9007069 13.6544151,20.8270129 L14.0088212,18.7657245 C14.0691981,18.4145617 14.3118672,18.1220527 14.6458423,17.9978703 C15.3359969,17.7412494 15.9677081,17.3719578 16.5150513,16.9052644 C16.7908836,16.6700754 17.1723926,16.6025695 17.512181,16.7288276 L19.4261097,17.4400031 C19.4938321,17.4651673 19.631347,17.4147366 19.6700861,17.3464893 L20.623854,15.6662201 C20.6677382,15.5889085 20.6385289,15.422164 20.5706164,15.3643802 L19.0054561,14.0326513 C18.7363402,13.803672 18.6080436,13.4496677 18.6679701,13.1014383 C18.7347206,12.7135552 18.768775,12.3516302 18.768775,12 C18.768775,11.6483698 18.7347206,11.2864448 18.6679701,10.8985617 C18.6080539,10.5503923 18.7362957,10.196445 19.0053263,9.96745916 L20.5704866,8.63527025 C20.6374086,8.57830946 20.6672761,8.40975011 20.6238962,8.33334216 L19.6701283,6.65340742 C19.6309511,6.58440211 19.4952014,6.53432393 19.4261097,6.55999695 L17.512181,7.27117239 C17.1723926,7.39743055 16.7908836,7.32992456 16.5150513,7.09473562 C15.9677081,6.62804223 15.3359969,6.25875055 14.6458423,6.00212967 C14.3118672,5.87794735 14.0691981,5.58543825 14.0088212,5.23427554 L13.6544151,3.17298713 C13.6412929,3.0966658 13.5272352,3 13.4542714,3 Z M12.5,10 C13.6045695,10 14.5,10.8954305 14.5,12 C14.5,13.1045695 13.6045695,14 12.5,14 C11.3954305,14 10.5,13.1045695 10.5,12 C10.5,10.8954305 11.3954305,10 12.5,10 Z' />,\n    'Settings'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nclass CacheManager {\n    async load(key) {\n        const value = localStorage.getItem(key);\n        if (!value) return null;\n\n        try {\n            return JSON.parse(value);\n        } catch {\n            return null;\n        }\n    }\n\n    async save(key, value) {\n        localStorage.setItem(key, JSON.stringify(value));\n    }\n\n    async remove(key) {\n        localStorage.removeItem(key);\n    }\n\n    async clear() {\n        localStorage.clear();\n    }\n}\n\nconst manager = new CacheManager();\nexport default manager;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport EventEmitter from './EventEmitter';\nimport { debounce } from '../Utils/Common';\nimport CacheManager from '../Workers/CacheManager';\nimport BasicGroupStore from './BasicGroupStore';\nimport ChatStore from './ChatStore';\nimport FileStore from './FileStore';\nimport MessageStore from './MessageStore';\nimport OptionStore from './OptionStore';\nimport SupergroupStore from './SupergroupStore';\nimport UserStore from './UserStore';\nimport TdLibController from '../Controllers/TdLibController';\n\nclass CacheStore extends EventEmitter {\n    constructor() {\n        super();\n\n        this.cacheContacts = false;\n\n        this.reset();\n\n        this.addTdLibListener();\n\n        this.saveInternal = debounce(this.saveInternal, 2000);\n    }\n\n    reset = () => {\n        this.filters = null;\n        this.chatIds = [];\n        this.archiveChatIds = [];\n        this.meChat = null;\n        if (this.cacheContacts) {\n            this.contacts = null;\n        }\n\n        this.cache = null;\n    };\n\n    onUpdate = update => {\n        switch (update['@type']) {\n            case 'updateAuthorizationState': {\n                const { authorization_state } = update;\n                if (!authorization_state) break;\n\n                switch (authorization_state['@type']) {\n                    case 'authorizationStateClosed': {\n                        this.reset();\n                        this.clear();\n                        break;\n                    }\n                    case 'authorizationStateLoggingOut':\n                    case 'authorizationStateWaitCode':\n                    case 'authorizationStateWaitPhoneNumber':\n                    case 'authorizationStateWaitPassword':\n                    case 'authorizationStateWaitRegistration': {\n                        CacheManager.remove('cache');\n                        CacheManager.remove('files');\n                        if (this.cacheContacts) {\n                            CacheManager.remove('contacts');\n                        }\n                        break;\n                    }\n                }\n\n                break;\n            }\n            default:\n                break;\n        }\n    };\n\n    onClientUpdate = update => {\n        switch (update['@type']) {\n            case 'clientUpdateDialogsReady': {\n                this.clearDataUrls();\n            }\n            default:\n                break;\n        }\n    };\n\n    addTdLibListener = () => {\n        TdLibController.on('update', this.onUpdate);\n        TdLibController.on('clientUpdate', this.onClientUpdate);\n    };\n\n    removeTdLibListener = () => {\n        TdLibController.off('update', this.onUpdate);\n        TdLibController.off('clientUpdate', this.onClientUpdate);\n    };\n\n    async load() {\n        // console.log('[cm] getChats start');\n        const promises = [];\n        promises.push(CacheManager.load('cache').catch(error => null));\n        promises.push(CacheManager.load('files').catch(error => null));\n        promises.push(CacheManager.load('filters').catch(error => null));\n        if (this.cacheContacts) {\n            promises.push(CacheManager.load('contacts').catch(error => null));\n        }\n        const [cache, files, filters, contacts] = await Promise.all(promises);\n        this.cache = cache;\n        if (this.cache) {\n            this.cache.files = files || [];\n        }\n\n        if (this.cacheContacts) {\n            if (contacts) {\n                (contacts || []).forEach(x => {\n                    UserStore.set(x);\n                })\n\n                this.contacts = {\n                    '@type': 'users',\n                    user_ids: contacts.map(x => x.id),\n                    total_count: contacts.length\n                };\n            }\n        }\n\n        this.filters = filters;\n\n        if (this.cache) {\n            this.parseCache(this.cache);\n        }\n\n        // console.log('[cm] load', this.filters, filters);\n        return this.cache;\n    }\n\n    parseCache(cache) {\n        if (!cache) return;\n\n        const { meChat, chats, archiveChats, users, basicGroups, supergroups, files, options } = cache;\n        // console.log('[cache] parseCache', cache);\n\n        (files || []).filter(x => Boolean(x)).forEach(({ id, url }) => {\n            FileStore.setDataUrl(id, url);\n        });\n\n        (users || []).forEach(x => {\n            UserStore.set(x);\n        });\n\n        (basicGroups || []).forEach(x => {\n            BasicGroupStore.set(x);\n        });\n\n        (supergroups || []).forEach(x => {\n            SupergroupStore.set(x);\n        });\n\n        (chats || []).concat(archiveChats || []).concat([meChat]).forEach(x => {\n            if (x) {\n                delete x.OutputTypingManager;\n\n                ChatStore.set(x);\n                if (x.photo) {\n                    if (x.photo.small) FileStore.set(x.photo.small);\n                    if (x.photo.big) FileStore.set(x.photo.big);\n                }\n                if (x.position) {\n                    ChatStore.updateChatChatLists(x.id);\n                }\n                if (x.last_message) {\n                    MessageStore.set(x.last_message);\n                }\n            }\n        });\n\n        (options || []).forEach(([id, option]) => {\n            OptionStore.set(id, option);\n        });\n    }\n\n    async getCache(chatIds, archiveChatIds) {\n        const fileMap = new Map();\n        const userMap = new Map();\n        const basicGroupMap = new Map();\n        const supergroupMap = new Map();\n        const meChat = this.meChat;\n        const chats = chatIds.map(x => ChatStore.get(x));\n        const archiveChats = archiveChatIds.map(x => ChatStore.get(x));\n\n\n        chats.concat(archiveChats).concat([meChat]).forEach(x => {\n            const { photo, type, last_message } = x;\n            if (photo && photo.small) {\n                const { id } = photo.small;\n                if (id) {\n                    const blob = FileStore.getBlob(id);\n                    if (blob) {\n                        fileMap.set(id, blob);\n                    }\n                }\n            }\n\n            switch (type['@type']) {\n                case 'chatTypeBasicGroup': {\n                    const basicGroup = BasicGroupStore.get(type.basic_group_id);\n                    if (basicGroup) {\n                        basicGroupMap.set(basicGroup.id, basicGroup);\n                    }\n                }\n                case 'chatTypePrivate':\n                case 'chatTypeSecret': {\n                    const user = UserStore.get(type.user_id);\n                    if (user) {\n                        userMap.set(user.id, user);\n                    }\n                }\n                case 'chatTypeSupergroup': {\n                    const supergroup = SupergroupStore.get(type.supergroup_id);\n                    if (supergroup) {\n                        supergroupMap.set(supergroup.id, supergroup);\n                    }\n                }\n            }\n\n            if (last_message) {\n                const { sender_user_id } = last_message;\n                if (sender_user_id) {\n                    const user = UserStore.get(sender_user_id);\n                    if (user) {\n                        userMap.set(user.id, user);\n                    }\n                }\n            }\n        });\n\n        return {\n            date: new Date(),\n            meChat,\n            chats,\n            archiveChats,\n            users: [...userMap.values()],\n            basicGroups: [...basicGroupMap.values()],\n            supergroups: [...supergroupMap.values()],\n            files: [...fileMap.entries()],\n            options: [...OptionStore.items.entries()]\n        };\n    }\n\n    async save(filters, chatIds, archiveChatIds) {\n        this.chatIds = chatIds;\n        this.archiveChatIds = archiveChatIds;\n        this.meChat = this.meChat || await TdLibController.send({\n            '@type': 'createPrivateChat',\n            user_id: UserStore.getMyId(),\n            force: false\n        });\n        if (this.cacheContacts) {\n            this.contacts = this.contacts || await TdLibController.send({\n                '@type': 'getContacts'\n            });\n        }\n        this.filters = filters;\n\n        this.saveInternal();\n    }\n\n    async saveInternal() {\n        // console.log('[cm] saveInternal', this.filters, this.chatIds, this.archiveChatIds);\n        const cache = await this.getCache(this.chatIds, this.archiveChatIds);\n        const files = cache.files;\n        cache.files = [];\n        // console.log('[cm] save cache', cache);\n        await CacheManager.save('cache', cache);\n\n        const promises = [];\n        files.forEach(x => {\n            const [id, blob] = x;\n            promises.push(\n                new Promise((resolve, reject) => {\n                    const fileReader = new FileReader();\n                    fileReader.readAsDataURL(blob);\n                    fileReader.onload = e => {\n                        resolve({ id, url: e.target.result });\n                    };\n                    fileReader.onerror = e => {\n                        resolve(null);\n                    };\n                })\n            );\n        });\n        // console.log('[cm] save files start', files);\n        const results = await Promise.all(promises);\n        // console.log('[cm] save files', results);\n        await CacheManager.save('files', results);\n\n        if (this.cacheContacts) {\n            const contacts = this.contacts.user_ids.map(x => UserStore.get(x));\n            await CacheManager.save('contacts', contacts);\n        }\n\n        if (this.filters) {\n            await CacheManager.save('filters', this.filters);\n        }\n    }\n\n    clear() {\n        const promises = [];\n        promises.push(CacheManager.remove('cache').catch(error => null));\n        promises.push(CacheManager.remove('files').catch(error => null));\n        promises.push(CacheManager.remove('filters').catch(error => null));\n        promises.push(CacheManager.remove('contacts').catch(error => null));\n        promises.push(CacheManager.remove('register').catch(error => null));\n\n        Promise.all(promises)\n    }\n\n    clearDataUrls() {\n        if (this.cache) {\n            const { files } = this.cache;\n\n            files.forEach(({ id, url }) => {\n                FileStore.deleteDataUrl(id);\n            });\n        }\n    }\n}\n\nconst store = new CacheStore();\nwindow.cache = store;\nexport default store;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport SpeedDialIcon from '@material-ui/lab/SpeedDialIcon';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport ChannelIcon from '../../Assets/Icons/Channel';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport ArchiveIcon from '../../Assets/Icons/Archive';\nimport SearchIcon from '../../Assets/Icons/Search';\nimport MenuIcon from '../../Assets/Icons/Menu';\nimport GroupIcon from '../../Assets/Icons/Group';\nimport HelpIcon from '../../Assets/Icons/Help';\nimport SavedIcon from '../../Assets/Icons/Saved';\nimport SettingsIcon from '../../Assets/Icons/Settings';\nimport UserIcon from '../../Assets/Icons/User';\nimport { isAuthorizationReady } from '../../Utils/Common';\nimport { openArchive, openChat, searchChat } from '../../Actions/Client';\nimport AppStore from '../../Stores/ApplicationStore';\nimport CacheStore from '../../Stores/CacheStore';\nimport UserStore from '../../Stores/UserStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MainMenuButton.css';\n\nclass MainMenuButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            authorizationState: AppStore.getAuthorizationState(),\n            anchorEl: null,\n            isSmallWidth: AppStore.isSmallWidth\n        };\n    }\n\n    componentDidMount() {\n        AppStore.on('updateAuthorizationState', this.onUpdateAuthorizationState);\n        AppStore.on('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('updateAuthorizationState', this.onUpdateAuthorizationState);\n        AppStore.off('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n    }\n\n    onClientUpdatePageWidth = update => {\n        const { isSmallWidth } = update;\n\n        this.setState({ isSmallWidth });\n    };\n\n    onUpdateAuthorizationState = update => {\n        this.setState({ authorizationState: update.authorization_state });\n    };\n\n    handleMenuOpen = event => {\n        const { authorizationState } = this.state;\n        if (!isAuthorizationReady(authorizationState)) return;\n\n        this.setState({ anchorEl: event.currentTarget });\n    };\n\n    handleMenuClose = () => {\n        this.setState({ anchorEl: null });\n    };\n\n    handleCheckUpdates = async () => {\n        this.handleMenuClose();\n\n        //await update();\n    };\n\n    handleNewChannel = event => {\n        this.handleMenuClose();\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateNewChannel',\n            open: true\n        });\n    };\n\n    handleNewGroup = event => {\n        this.handleMenuClose();\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateNewGroup',\n            open: true\n        });\n    };\n\n    handleContacts = event => {\n        this.handleMenuClose();\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateContacts',\n            open: true\n        });\n    };\n\n    handleArchived = event => {\n        this.handleMenuClose();\n\n        openArchive();\n    };\n\n    handleSaved = async event => {\n        this.handleMenuClose();\n\n        let chat = CacheStore.cache ? CacheStore.cache.meChat : null;\n        if (!chat) {\n            chat = await TdLibController.send({\n                '@type': 'createPrivateChat',\n                user_id: UserStore.getMyId(),\n                force: false\n            });\n        }\n\n        if (!chat) return;\n\n        openChat(chat.id);\n    };\n\n    handleSettings = async event => {\n        this.handleMenuClose();\n\n        let chat = CacheStore.cache ? CacheStore.cache.meChat : null;\n        if (!chat) {\n            chat = await TdLibController.send({\n                '@type': 'createPrivateChat',\n                user_id: UserStore.getMyId(),\n                force: false\n            });\n        }\n\n        if (!chat) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateSettings',\n            open: true,\n            chatId: chat.id\n        });\n    };\n\n    handleHelp = async event => {\n        this.handleMenuClose();\n        // unregister();\n    };\n\n    handleSearch = () => {\n        this.handleMenuClose();\n\n        searchChat(0);\n    };\n\n    render() {\n        const { t, timeout, popup, showClose, onClose } = this.props;\n        const { anchorEl, authorizationState, isSmallWidth } = this.state;\n\n        const mainMenuControl =\n            !showClose && isAuthorizationReady(authorizationState) ? (\n                <Menu\n                    id='main-menu'\n                    anchorEl={anchorEl}\n                    open={Boolean(anchorEl)}\n                    onClose={this.handleMenuClose}\n                    getContentAnchorEl={null}\n                    disableAutoFocusItem\n                    disableRestoreFocus={true}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'left'\n                    }}>\n                    <MenuItem onClick={this.handleNewChannel}>\n                        <ListItemIcon>\n                            <ChannelIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('NewChannel')} />\n                    </MenuItem>\n                    <MenuItem onClick={this.handleNewGroup}>\n                        <ListItemIcon>\n                            <GroupIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('NewGroup')} />\n                    </MenuItem>\n                    { isSmallWidth && (\n                        <MenuItem onClick={this.handleSearch}>\n                            <ListItemIcon>\n                                <SearchIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Search')} />\n                        </MenuItem>\n                    )}\n                    <MenuItem onClick={this.handleContacts}>\n                        <ListItemIcon>\n                            <UserIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('Contacts')} />\n                    </MenuItem>\n                    <MenuItem onClick={this.handleArchived}>\n                        <ListItemIcon>\n                            <ArchiveIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('Archived')} />\n                    </MenuItem>\n                    <MenuItem onClick={this.handleSaved}>\n                        <ListItemIcon>\n                            <SavedIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('Saved')} />\n                    </MenuItem>\n                    <MenuItem onClick={this.handleSettings}>\n                        <ListItemIcon>\n                            <SettingsIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('Settings')} />\n                    </MenuItem>\n                    <MenuItem onClick={this.handleHelp}>\n                        <ListItemIcon>\n                            <HelpIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('SettingsHelp')} />\n                    </MenuItem>\n                </Menu>\n            ) : null;\n\n        const closeIcon = popup\n            ? <CloseIcon/>\n            : <ArrowBackIcon/>;\n\n        return (\n            <>\n                <IconButton\n                    aria-owns={anchorEl ? 'simple-menu' : null}\n                    aria-haspopup='true'\n                    className='header-left-button main-menu-button'\n                    aria-label='Menu'\n                    onClick={showClose ? onClose : this.handleMenuOpen}>\n                    { timeout\n                        ? (<SpeedDialIcon open={showClose} openIcon={<ArrowBackIcon />} icon={<MenuIcon />} />)\n                        : (<>{showClose ? closeIcon : <MenuIcon />}</>)\n                    }\n\n                </IconButton>\n                {mainMenuControl}\n            </>\n        );\n    }\n}\n\nexport default withTranslation()(MainMenuButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport SearchIcon from '../../../Assets/Icons/Search';\nimport './SearchInput.css';\n\nclass SearchInput extends React.Component {\n    handleKeyDown = event => {\n        if (event.keyCode === 13) {\n            event.preventDefault();\n        } else if (event.keyCode === 27) {\n            const { onChange, onClose } = this.props;\n\n            const element = event.target;\n            if (!element) return;\n\n            if (element.innerText) {\n                event.stopPropagation();\n                event.nativeEvent.stopImmediatePropagation();\n\n                element.innerText = null;\n                if (onChange) onChange(element.innerText);\n                return;\n            }\n\n            if (onClose) {\n                onClose(event);\n            }\n        } else if (event.keyCode === 8) {\n            const { onBackspace } = this.props;\n\n            const element = event.target;\n            if (!element) return;\n            if (element.innerText) return;\n\n            if (onBackspace) {\n                event.stopPropagation();\n                onBackspace();\n            }\n        }\n    };\n\n    handleKeyUp = event => {\n        const element = event.target;\n        if (!element) return;\n\n        const { innerHTML } = element;\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\n            element.innerHTML = null;\n        }\n    };\n\n    handlePaste = event => {\n        const plainText = event.clipboardData.getData('text/plain');\n        if (plainText) {\n            event.preventDefault();\n            document.execCommand('insertText', false, plainText);\n        }\n    };\n\n    handleInput = event => {\n        const { onChange } = this.props;\n\n        const element = event.target;\n        if (!element) return;\n\n        if (onChange) {\n            onChange(element.innerText);\n        }\n    };\n\n    render() {\n        const { inputRef, t, onFocus, hint, showIcon } = this.props;\n\n        return (\n            <div className='search-input'>\n                <div\n                    id='search-inputbox'\n                    ref={inputRef}\n                    placeholder={hint || t('Search')}\n                    contentEditable\n                    suppressContentEditableWarning\n                    onKeyDown={this.handleKeyDown}\n                    onKeyUp={this.handleKeyUp}\n                    onPaste={this.handlePaste}\n                    onInput={this.handleInput}\n                    onFocus={onFocus}\n                />\n                {showIcon && <SearchIcon className='search-input-icon' />}\n            </div>\n        );\n    }\n}\n\nSearchInput.propTypes = {\n    inputRef: PropTypes.object,\n    hint: PropTypes.string,\n    showIcon: PropTypes.bool,\n    onBackspace: PropTypes.func,\n    onChange: PropTypes.func,\n    onFocus: PropTypes.func,\n    onClose: PropTypes.func\n};\n\nSearchInput.defaultProps = {\n    showIcon: true\n}\n\nexport default withTranslation()(SearchInput);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport MainMenuButton from './MainMenuButton';\nimport SearchInput from './Search/SearchInput';\nimport { isAuthorizationReady } from '../../Utils/Common';\nimport AppStore from '../../Stores/ApplicationStore';\nimport '../ColumnMiddle/Header.css';\n\nclass DialogsHeader extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.searchInputRef = React.createRef();\n\n        this.state = {\n            authorizationState: AppStore.getAuthorizationState(),\n            open: false\n        };\n    }\n\n    setInitQuery(query) {\n        const { onSearchTextChange } = this.props;\n\n        const searchInput = this.searchInputRef.current;\n        if (searchInput) {\n            searchInput.innerText = query;\n            if (searchInput.childNodes.length > 0) {\n                const range = document.createRange();\n                range.setStart(searchInput.childNodes[0], searchInput.childNodes[0].length);\n                range.collapse(true);\n\n                const selection = window.getSelection();\n                selection.removeAllRanges();\n                selection.addRange(range);\n            }\n            searchInput.focus();\n            onSearchTextChange(query);\n        }\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { openSearch } = this.props;\n\n        if (openSearch !== prevProps.openSearch) {\n            if (openSearch) {\n                this.focusInput();\n            } else {\n                const searchInput = this.searchInputRef.current;\n                if (searchInput) {\n                    searchInput.innerText = null;\n                }\n            }\n        }\n    }\n\n    focusInput() {\n        const searchInput = this.searchInputRef.current;\n        if (searchInput) {\n            searchInput.focus();\n        }\n    }\n\n    componentDidMount() {\n        if (this.props.popup) {\n            this.focusInput();\n        }\n\n        AppStore.on('updateAuthorizationState', this.onUpdateAuthorizationState);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('updateAuthorizationState', this.onUpdateAuthorizationState);\n    }\n\n    onUpdateAuthorizationState = update => {\n        this.setState({ authorizationState: update.authorization_state });\n    };\n\n    handleSearch = () => {\n        const { onSearch, openSearch } = this.props;\n        const { authorizationState } = this.state;\n        if (!isAuthorizationReady(authorizationState)) return;\n\n        onSearch(!openSearch);\n    };\n\n    handleSearchTextChange = () => {\n        const { onSearchTextChange } = this.props;\n\n        const element = this.searchInputRef.current;\n        if (!element) return;\n\n        const { innerHTML } = element;\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\n            element.innerHTML = null;\n        }\n        const { innerText } = element;\n\n        onSearchTextChange(innerText);\n    };\n\n    handleCloseSearch = () => {\n        this.handleSearch();\n    };\n\n    handleFocus = () => {\n        this.handleSearch();\n    };\n\n    render() {\n        const { openSearch, timeout, popup } = this.props;\n\n        let content = null;\n        let showBack = false;\n        if (openSearch) {\n            showBack = true;\n            content = (\n                <SearchInput\n                    inputRef={this.searchInputRef}\n                    onChange={this.handleSearchTextChange}\n                    onClose={this.handleCloseSearch}\n                />\n            );\n        } else {\n            content = <SearchInput inputRef={this.searchInputRef} onFocus={this.handleFocus} />;\n        }\n\n        return (\n            <div className='header-master'>\n                <MainMenuButton timeout={timeout} showClose={showBack} popup={popup} onClose={this.handleCloseSearch} />\n                {content}\n            </div>\n        );\n    }\n}\n\nDialogsHeader.propTypes = {\n    openSearch: PropTypes.bool.isRequired,\n    onClick: PropTypes.func,\n    onSearch: PropTypes.func.isRequired,\n    onSearchTextChange: PropTypes.func.isRequired,\n    timeout: PropTypes.bool,\n    popup: PropTypes.bool\n};\n\nexport default DialogsHeader;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport classNames from 'classnames';\nimport Animator from '../../Utils/Animatior';\nimport { clamp, getFirstLetter, throttle } from '../../Utils/Common';\nimport AppStore from '../../Stores/ApplicationStore';\nimport CacheStore from '../../Stores/CacheStore';\nimport FilterStore from '../../Stores/FilterStore';\nimport LocalizationStore from '../../Stores/LocalizationStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Filters.css';\n\nclass Filters extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.filterRef = new Map();\n        this.filtersRef = React.createRef();\n        this.filterSelectionRef = React.createRef();\n\n        const { isSmallWidth } = AppStore;\n        const { filters, chatList } = FilterStore;\n\n        this.state = {\n            isSmallWidth,\n            filters,\n            chatList\n        };\n\n        this.onWindowResize = throttle(this.onWindowResize, 250);\n    }\n\n    componentDidMount() {\n        this.observeResize();\n        AppStore.on('clientUpdateCacheLoaded', this.onClientUpdateCacheLoaded);\n        AppStore.on('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n        FilterStore.on('clientUpdateChatList', this.onClientUpdateChatList);\n        FilterStore.on('updateChatFilters', this.onUpdateChatFilters);\n        LocalizationStore.on('clientUpdateLanguageChange', this.onClientUpdateLanguageChange);\n\n        this.setSelection();\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        this.unobserveResize();\n        this.observeResize();\n    }\n\n    componentWillUnmount() {\n        this.unobserveResize();\n        AppStore.off('clientUpdateCacheLoaded', this.onClientUpdateCacheLoaded);\n        AppStore.off('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n        FilterStore.off('clientUpdateChatList', this.onClientUpdateChatList);\n        FilterStore.off('updateChatFilters', this.onUpdateChatFilters);\n        LocalizationStore.off('clientUpdateLanguageChange', this.onClientUpdateLanguageChange);\n    }\n\n    hasObserver = () => {\n        return 'ResizeObserver' in window;\n    };\n\n    observeResize() {\n        if (!this.hasObserver()) return;\n        const filters = this.filtersRef.current;\n        if (!filters) return;\n\n        const observer = new ResizeObserver(this.onWindowResize);\n        observer.observe(filters);\n\n        this.resizeObserver = { observer, filters }\n    }\n\n    unobserveResize() {\n        if (!this.hasObserver()) return;\n        if (!this.resizeObserver) return;\n\n        const { observer, filters } = this.resizeObserver;\n        if (!observer) return;\n        if (!filters) return;\n\n        observer.unobserve(filters);\n    }\n\n    onClientUpdateLanguageChange = update => {\n        if (!this.hasObserver()) this.setSelection(false);\n    };\n\n    onClientUpdateCacheLoaded = update => {\n        const { filters } = this.state;\n        if (filters) return;\n\n        const { filters: cachedFilters } = CacheStore;\n        if (!cachedFilters) return;\n\n        this.setState({\n            filters: cachedFilters\n        }, () => {\n            if (!this.hasObserver()) this.setSelection(false);\n        });\n    };\n\n    onWindowResize = () => {\n        this.setSelection(true);\n    };\n\n    onClientUpdatePageWidth = update => {\n        const { isSmallWidth } = AppStore;\n        this.setState({\n            isSmallWidth\n        }, () => {\n            if (!this.hasObserver()) this.setSelection(false);\n        });\n    };\n\n    setSelection = (transition = true) => {\n        const { chatList, filters, isSmallWidth } = this.state;\n\n        const scroll = this.filtersRef.current;\n        const padding = 3;\n\n        let item = null;\n        let left = 9;\n        if (chatList['@type'] === 'chatListMain') {\n            const main = this.filterRef.get('chatListMain');\n            if (main){\n                item = main.firstChild;\n                left = item.offsetLeft;\n            }\n        } else if (chatList['@type'] === 'chatListFilter') {\n            for (let i = 0; i < filters.length; i++) {\n                const filter = this.filterRef.get('chatListFilter_id=' + filters[i].id);\n                if (filters[i].id === chatList.chat_filter_id) {\n                    item = filter.firstChild;\n                    left = item.offsetLeft;\n                    break;\n                }\n            }\n        }\n        if (!item) return;\n\n        const filterSelection = this.filterSelectionRef.current;\n        if (filterSelection) {\n            const transitionStyle = transition ? 'transition: left 0.25s ease, width 0.25s ease' : null;\n            filterSelection.style.cssText = `left: ${left - padding}px; width: ${item.scrollWidth + 2 * padding}px; ${transitionStyle}`;\n        }\n\n        if (item && transition){\n            const { animator } = this;\n\n            if (animator) {\n                animator.stop();\n            }\n\n            this.animator = new Animator(250, [\n                {\n                    from: scroll.scrollLeft,\n                    to: clamp(left - scroll.offsetWidth / 2 + item.offsetWidth / 2, 0, scroll.scrollWidth - scroll.offsetWidth),\n                    func: left => (scroll.scrollLeft = left)\n                }\n            ]);\n\n            setTimeout(() => {\n                if (!this.animator) return;\n\n                this.animator.start();\n            }, 0);\n\n\n            // item.scrollIntoView();\n        }\n    };\n\n    onUpdateChatFilters = update => {\n        const { chatList } = this.state;\n        const { filters } = FilterStore;\n\n        this.setState({\n            filters\n        }, () => {\n            if (chatList['@type'] === 'chatListFilter' && filters.findIndex(x => x.id === chatList.chat_filter_id) === -1) {\n                this.handleMainClick();\n            } else {\n                if (!this.hasObserver()) this.setSelection();\n            }\n        });\n    };\n\n    onClientUpdateChatList = update => {\n        const { chatList } = FilterStore;\n\n        this.setState({\n            chatList\n        }, () => {\n            if (!this.hasObserver()) this.setSelection();\n        });\n    };\n\n    handleMainClick = event => {\n        if (event && event.button !== 0) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateChatList',\n            chatList: {\n                '@type': 'chatListMain'\n            }\n        });\n    };\n\n    handleFilterClick = (event, id) => {\n        if (event && event.button !== 0) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateChatList',\n            chatList: {\n                '@type': 'chatListFilter',\n                chat_filter_id: id\n            }\n        });\n    };\n\n    handleWheel = event => {\n        if (!event.deltaY) {\n            return;\n        }\n\n        event.currentTarget.scrollLeft += event.deltaY;\n        event.stopPropagation();\n    };\n\n    render() {\n        const { t } = this.props;\n        const { filters, chatList, isSmallWidth } = this.state;\n\n        if (!filters) return null;\n        if (!filters.length) return null;\n\n        this.filterRef = new Map();\n        return (\n            <div className='tabs'>\n                <div className='tabs-bottom-border'/>\n                <div ref={this.filtersRef} className='filters' onWheel={this.handleWheel}>\n                    <div\n                        ref={r => this.filterRef.set('chatListMain', r)}\n                        className={classNames('filter', { 'item-selected': chatList['@type'] === 'chatListMain'})}\n                        onMouseDown={this.handleMainClick}\n                        title={isSmallWidth ? t('FilterAllChats') : null}>\n                        <span>{isSmallWidth ? getFirstLetter(t('FilterAllChats')) : t('FilterAllChats')}</span>\n                    </div>\n                    {filters.map(x => (\n                        <div\n                            key={x.id}\n                            ref={r => this.filterRef.set('chatListFilter_id=' + x.id, r)}\n                            className={classNames('filter', { 'item-selected': chatList.chat_filter_id === x.id})}\n                            onMouseDown={e => this.handleFilterClick(e, x.id)}\n                            title={isSmallWidth ? x.title : null}>\n                            <span>{isSmallWidth ? getFirstLetter(x.title) : x.title}</span>\n                        </div>))}\n                    <div ref={this.filterSelectionRef} className='filter-selection'/>\n                </div>\n            </div>\n        );\n    }\n}\n\nFilters.propTypes = {\n\n};\n\nexport default withTranslation()(Filters);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Dialog from '../Tile/Dialog';\nimport DialogPlaceholder from '../Tile/DialogPlaceholder';\nimport VirtualizedList from '../Additional/VirtualizedList';\nimport { changeChatDetailsVisibility } from '../../Actions/Chat';\nimport { loadChatsContent } from '../../Utils/File';\nimport { isAuthorizationReady, orderCompare } from '../../Utils/Common';\nimport { scrollTop } from '../../Utils/DOM';\nimport { chatListEquals, getChatOrder, hasChatList, isChatMember, isChatPinned, positionListEquals } from '../../Utils/Chat';\nimport { CHAT_SLICE_LIMIT, SCROLL_CHATS_PRECISION } from '../../Constants';\nimport AppStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './DialogsList.css';\nimport FilterStore from '../../Stores/FilterStore';\nimport DialogsHeader from './DialogsHeader';\nimport Filters from './Filters';\n\nclass DialogListItem extends React.Component {\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { chatId, chatList, style, hidden } = this.props;\n        if (nextProps.chatId !== chatId) {\n            // console.log('[vl] UserListItem.shouldUpdate true userId');\n            return true;\n        }\n\n        if (nextProps.chatList !== chatList) {\n            // console.log('[vl] UserListItem.shouldUpdate true userId');\n            return true;\n        }\n\n        if (nextProps.hidden !== hidden) {\n            // console.log('[vl] UserListItem.shouldUpdate true userId');\n            return true;\n        }\n\n        if (nextProps.style.top !== style.top) {\n            // console.log('[vl] UserListItem.shouldUpdate true style');\n            return true;\n        }\n\n        // console.log('[vl] UserListItem.shouldUpdate false', nextProps, this.props);\n        return false;\n    }\n\n    render() {\n        const { chatId, chatList, hidden, style } = this.props;\n\n        return (\n            <div className='dialog-list-item' style={style}>\n                <Dialog chatId={chatId} chatList={chatList} hidden={hidden} />\n            </div>\n        );\n    }\n}\n\nclass DialogsList extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.hiddenChats = new Map();\n\n        this.listRef = React.createRef();\n\n        const { authorizationState } = AppStore;\n\n        this.state = {\n            authorizationState,\n            chats: null,\n            fistSliceLoaded: false,\n            chatList: props.type === 'chatListMain' ? { '@type': 'chatListMain' } : { '@type': 'chatListArchive' },\n            params: {\n                loading: false,\n                completed: false\n            }\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { theme, open, showArchive, archiveTitle, items, cacheItems } = this.props;\n        const { chats, chatList } = this.state;\n\n        if (nextProps.theme !== theme) {\n            return true;\n        }\n\n        if (nextProps.open !== open) {\n            return true;\n        }\n\n        if (nextProps.items !== items) {\n            return true;\n        }\n\n        if (nextProps.cacheItems !== cacheItems) {\n            return true;\n        }\n\n        if (nextProps.showArchive !== showArchive) {\n            return true;\n        }\n\n        if (nextProps.archiveTitle !== archiveTitle) {\n            return true;\n        }\n\n        if (nextState.chats !== chats) {\n            return true;\n        }\n\n        // if (nextState.chatList !== chatList) {\n        //     return true;\n        // }\n\n        return false;\n    }\n\n    getSnapshotBeforeUpdate(prevProps, prevState) {\n        const { current: list } = this.listRef;\n        if (!list) return { scrollTop: 0 };\n\n        return { scrollTop: list.scrollTop };\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n\n    }\n\n    componentDidMount() {\n        this.loadFirstSlice();\n\n        AppStore.on('updateAuthorizationState', this.onUpdateAuthorizationState);\n\n        ChatStore.on('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.on('clientUpdateLeaveChat', this.onClientUpdateLeaveChat);\n        ChatStore.on('updateChatDraftMessage', this.onUpdateChatOrder);\n        ChatStore.on('updateChatLastMessage', this.onUpdateChatOrder);\n        ChatStore.on('updateChatPosition', this.onUpdateChatPosition);\n\n        FilterStore.on('clientUpdateChatList', this.onClientUpdateChatList);\n\n        SupergroupStore.on('updateSupegroup', this.onUpdateSupergroup);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('updateAuthorizationState', this.onUpdateAuthorizationState);\n\n        ChatStore.off('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.off('clientUpdateLeaveChat', this.onClientUpdateLeaveChat);\n        ChatStore.off('updateChatDraftMessage', this.onUpdateChatOrder);\n        ChatStore.off('updateChatLastMessage', this.onUpdateChatOrder);\n        ChatStore.off('updateChatPosition', this.onUpdateChatPosition);\n\n        FilterStore.off('clientUpdateChatList', this.onClientUpdateChatList);\n\n        SupergroupStore.off('updateSupegroup', this.onUpdateSupergroup);\n    }\n\n    onClientUpdateChatList = update => {\n        const { chatList } = update;\n\n        this.setState({\n            chatList,\n            params: {\n                loading: false,\n                completed: false\n            }\n        }, () => {\n            this.loadFirstSlice();\n        });\n    };\n\n    onUpdateSupergroup = update => {\n        // const { supegroup, prevSupergroup } = update;\n        //\n        // if (!hasLeftSupergroup(supegroup, prevSupergroup)) {\n        //     return;\n        // }\n\n\n    };\n\n    onClientUpdateLeaveChat = update => {\n        const { inProgress, chatId } = update;\n\n        if (inProgress) {\n            this.hiddenChats.set(chatId, chatId);\n        } else {\n            this.hiddenChats.delete(chatId);\n        }\n\n        this.forceUpdate();\n    };\n\n    onUpdateAuthorizationState = update => {\n        const { authorization_state: authorizationState } = update;\n\n        this.setState({ authorizationState }, () => this.loadFirstSlice());\n    };\n\n    onFastUpdatingComplete = update => {\n        this.onLoadNext(true);\n    };\n\n    loadFirstSlice = async () => {\n        const { authorizationState } = this.state;\n        if (!isAuthorizationReady(authorizationState)) return;\n\n        await FileStore.initDB(() => this.onLoadNext(true));\n    };\n\n    saveCache = () => {\n        const { onSaveCache, type } = this.props;\n        const { chatList } = this.state;\n        if (type !== 'chatListMain') return;\n        if (chatList['@type'] !== 'chatListMain') return;\n\n        if (onSaveCache) onSaveCache();\n    };\n\n    onUpdateChatPosition = update => {\n        const { chatList } = this.state;\n        const { position } = update;\n\n        if (!chatListEquals(chatList, position.list)) {\n            return;\n        }\n\n        this.onUpdateChatOrder(update);\n    };\n\n    onUpdateChatOrder = update => {\n        const { chats, chatList, params } = this.state;\n        if (!chats) return;\n\n        const { loading } = params;\n        if (loading && !chats.length) return;\n\n        const { chat_id } = update;\n\n        const chat = ChatStore.get(chat_id);\n        if (!chat) {\n            return;\n        }\n\n        if (!hasChatList(chat_id, chatList)) {\n            return;\n        }\n\n        const order = getChatOrder(chat_id, chatList);\n        const currentIndex = chats.findIndex(x => x === chat_id);\n        if (currentIndex === -1 && order === '0') {\n            return;\n        }\n\n        const chatIds = [];\n        for (let i = 0; i < chats.length; i++) {\n            const chat = ChatStore.get(chats[i]);\n            const chatOrder = getChatOrder(chats[i], chatList);\n            if (chat && chatOrder !== '0') {\n                chatIds.push(chat.id);\n            }\n        }\n\n        const newChatIds = [];\n        if (order === '0') {\n            // unselect deleted chat\n            if (chat_id === AppStore.getChatId() && !chat.last_message) {\n                TdLibController.setChatId(0);\n                changeChatDetailsVisibility(false);\n            }\n        } else {\n            if (currentIndex === -1) {\n                if (loading) {\n                    console.error('[vl] skip add while getChats', update);\n                    // TODO: check and add if within loaded part\n                } else {\n                    newChatIds.push(chat_id);\n                }\n            }\n        }\n\n        this.reorderChats(chatIds, newChatIds, () => {\n            this.loadChatContents(newChatIds);\n            this.saveCache();\n        });\n    };\n\n    reorderChats(chatIds, newChatIds = [], callback) {\n        const { chatList } = this.state;\n\n        const orderedChatIds = chatIds.concat(newChatIds).sort((a, b) => {\n            return orderCompare(getChatOrder(b, chatList), getChatOrder(a, chatList));\n        });\n\n        if (!DialogsList.isDifferentOrder(this.state.chats, orderedChatIds)) {\n            if (callback) callback();\n            return;\n        }\n\n        this.setState({ chats: orderedChatIds }, callback);\n    }\n\n    static isDifferentOrder(oldChatIds, newChatIds) {\n        if (oldChatIds.length === newChatIds.length) {\n            for (let i = 0; i < oldChatIds.length; i++) {\n                if (oldChatIds[i] !== newChatIds[i]) return true;\n            }\n\n            return false;\n        }\n\n        return true;\n    }\n\n    handleScroll = () => {\n        // console.log('[vl] onScroll');\n        const list = this.listRef.current.getListRef().current;\n        if (!list) return;\n\n        // console.log(`[vl] onScroll [scrollTop, offsetHeight, scrollHeight] = [${list.scrollTop}, ${list.offsetHeight}, ${list.scrollHeight}]`, list.scrollTop + list.offsetHeight, (list.scrollHeight - SCROLL_CHATS_PRECISION));\n        if (list.scrollTop <= SCROLL_CHATS_PRECISION) {\n            this.onLoadPrev();\n        } else if (list.scrollTop + list.offsetHeight >= list.scrollHeight - list.offsetHeight) {\n            // console.log(`[vl] onScroll onLoadNext`);\n            this.onLoadNext();\n        }\n    };\n\n    onLoadPrev() {\n\n    }\n\n    async onLoadNext(replace = false, limit = CHAT_SLICE_LIMIT) {\n        const { type } = this.props;\n        const { chats, chatList, params } = this.state;\n\n        // console.log('[folders] onLoadNext', chatList, limit);\n        if (params.loading) {\n            // console.log('[folders] onLoadNext cancel loading', chatList);\n            return;\n        }\n\n        if (params.completed) {\n            // console.log('[folders] onLoadNext cancel loaded', chatList);\n            return;\n        }\n\n        let offsetOrder = '9223372036854775807'; // 2^63 - 1\n        let offsetChatId = 0;\n        if (!replace && chats && chats.length > 0) {\n            const chat = ChatStore.get(chats[chats.length - 1]);\n            if (chat) {\n                offsetOrder = getChatOrder(chat.id, chatList);\n                offsetChatId = chat.id;\n            }\n        }\n\n        // if (type === 'chatListMain') console.log('[folders] GETCHATS start', type, offsetOrder, offsetChatId);\n        params.loading = true;\n        const result = await TdLibController.send({\n            '@type': 'getChats',\n            chat_list: chatList,\n            offset_chat_id: offsetChatId,\n            offset_order: offsetOrder,\n            limit: CHAT_SLICE_LIMIT\n        }).finally(() => {\n            params.loading = false;\n            if (replace) {\n                TdLibController.clientUpdate({ '@type': 'clientUpdateDialogsReady', list: chatList });\n            }\n        });\n        // if (type === 'chatListMain') console.log('[folders] GETCHATS stop', replace, type, result);\n\n        if (params !== this.state.params) {\n            // console.log('[folders] onLoadNext cancel', chatList);\n            return;\n        }\n\n        if (result.chat_ids.length > 0 && result.chat_ids[0] === offsetChatId) {\n            result.chat_ids.shift();\n        }\n\n        params.completed = !result.chat_ids.length;\n\n        if (replace) {\n            this.replaceChats(result.chat_ids, () => {\n                this.loadChatContents(result.chat_ids);\n                this.saveCache();\n\n                if (result.chat_ids.length < CHAT_SLICE_LIMIT) {\n                    this.onLoadNext(false, CHAT_SLICE_LIMIT - result.chat_ids.length);\n                }\n\n                const list = this.listRef.current.getListRef().current;\n                if (!list) return;\n                list.scrollTop = 0;\n            });\n        } else {\n            // console.log('DialogsList.onLoadNext setState start', offsetChatId, offsetOrder);\n            this.appendChats(result.chat_ids, () => {\n                // console.log('DialogsList.onLoadNext setState stop', offsetChatId, offsetOrder);\n                this.loadChatContents(result.chat_ids);\n\n                if (result.chat_ids.length && result.chat_ids.length < limit) {\n                    this.onLoadNext(false, limit - result.chat_ids.length);\n                }\n            });\n        }\n    }\n\n    loadChatContents(chatIds) {\n        const store = FileStore.getStore();\n        loadChatsContent(store, chatIds);\n    }\n\n    appendChats(chatIds, callback) {\n        if (chatIds.length === 0) {\n            if (callback) callback();\n            return;\n        }\n\n        const { chats } = this.state;\n\n        const newChats = (chats || []).concat(chatIds);\n        this.setState({ chats: newChats }, callback);\n    }\n\n    replaceChats(chats, callback) {\n        this.setState({ chats }, callback);\n    }\n\n    scrollToTop() {\n        const list = this.listRef.current.getListRef().current;\n\n        scrollTop(list);\n    }\n\n    renderItem = ({ index, style }, source) => {\n        const { chatList } = this.state;\n        const x = source[index];\n\n        return <DialogListItem key={x} chatId={x} chatList={chatList} hidden={this.hiddenChats.has(x)} style={style} />;\n\n        // return <Dialog key={x} chatId={x} hidden={this.hiddenChats.has(x)} style={style} />\n    };\n\n    render() {\n        const { open, cacheItems, showArchive, archiveTitle } = this.props;\n        const { chats, chatList } = this.state;\n\n        // console.log('[dl] render', type, open, chats, cacheChats);\n        if (!open) return null;\n\n        this.source = [];\n        let dialogs = null;\n        if (chats) {\n            let lastPinnedId = 0;\n            chats.forEach(x => {\n                if (isChatPinned(x, chatList)) {\n                    lastPinnedId = x;\n                }\n            });\n            this.source = chats;\n        } else if (cacheItems) {\n            let lastPinnedId = 0;\n            cacheItems.forEach(x => {\n                if (isChatPinned(x, chatList)) {\n                    lastPinnedId = x;\n                }\n            });\n            this.source = cacheItems.map(x => x.id);\n            // dialogs = cacheItems.map(x => (\n            //     <Dialog\n            //         key={x.id}\n            //         chatId={x.id}\n            //         isLastPinned={x === lastPinnedId}\n            //         hidden={this.hiddenChats.has(x.id)}\n            //     />\n            // ));\n        } else {\n            if (chatList['@type'] === 'chatListMain') {\n                dialogs = Array.from(Array(10)).map((x, index) => <DialogPlaceholder key={index} index={index} />);\n            }\n        }\n\n        // console.log('[vl] render', this.source);\n\n        return (\n            <VirtualizedList\n                ref={this.listRef}\n                className='dialogs-list'\n                source={this.source}\n                rowHeight={76}\n                overScanCount={20}\n                renderItem={x => this.renderItem(x, this.source)}\n                onScroll={this.handleScroll}\n            />\n        );\n    }\n}\n\nDialogsList.propTypes = {\n    type: PropTypes.oneOf(['chatListMain', 'chatListArchive']).isRequired,\n    showArchive: PropTypes.bool,\n    archiveTitle: PropTypes.string,\n    cacheItems: PropTypes.array,\n    items: PropTypes.array\n};\n\nexport default DialogsList;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport DialogsList from './DialogsList';\n\nclass Archive extends React.Component {\n    render() {\n        const { t, innerListRef, items, cacheItems, onClose } = this.props;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button main-menu-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('ArchivedChats')}</span>\n                    </div>\n                </div>\n                <div className='dialogs-content'>\n                    <DialogsList\n                        type='chatListArchive'\n                        ref={innerListRef}\n                        cacheItems={cacheItems}\n                        open={true}\n                        items={items}\n                    />\n                </div>\n            </>\n        );\n    }\n}\n\nArchive.propTypes = {};\n\nexport default withTranslation()(Archive);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport Popover from '@material-ui/core/Popover';\nimport ChatTile from './ChatTile';\nimport { getChatShortTitle } from '../../Utils/Chat';\nimport './TopChat.css';\n\nclass TopChat extends React.PureComponent {\n    state = {\n        contextMenu: false,\n        top: 0,\n        left: 0\n    };\n\n    handleContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    handleDelete = event => {\n        this.handleCloseContextMenu();\n\n        const { onDelete } = this.props;\n\n        onDelete();\n    };\n\n    render() {\n        const { chatId, onSelect, showSavedMessages, t } = this.props;\n        const { contextMenu, top, left } = this.state;\n\n        const shortTitle = getChatShortTitle(chatId, showSavedMessages, t);\n\n        return (\n            <>\n                <ListItem button className='top-chat' onClick={onSelect} onContextMenu={this.handleContextMenu}>\n                    <ChatTile dialog chatId={chatId} showSavedMessages={showSavedMessages} showOnline />\n                    <div className='top-chat-title'>{shortTitle}</div>\n                </ListItem>\n                <Popover\n                    open={contextMenu}\n                    onClose={this.handleCloseContextMenu}\n                    anchorReference='anchorPosition'\n                    anchorPosition={{ top, left }}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'left'\n                    }}\n                    onMouseDown={e => e.stopPropagation()}>\n                    <MenuList onClick={e => e.stopPropagation()}>\n                        <MenuItem onClick={this.handleDelete}>\n                            <ListItemIcon>\n                                <DeleteIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Delete')} />\n                        </MenuItem>\n                    </MenuList>\n                </Popover>\n            </>\n        );\n    }\n}\n\nTopChat.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onSelect: PropTypes.func,\n    onDelete: PropTypes.func,\n    showSavedMessages: PropTypes.bool\n};\n\nTopChat.defaultProps = {\n    showSavedMessages: true\n};\n\nexport default withTranslation()(TopChat);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport Popover from '@material-ui/core/Popover';\nimport Chat from './Chat';\nimport './RecentlyFoundChat.css';\n\nclass RecentlyFoundChat extends React.PureComponent {\n    state = {\n        contextMenu: false,\n        top: 0,\n        left: 0\n    };\n\n    handleContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    handleDelete = event => {\n        this.handleCloseContextMenu();\n\n        const { onDelete } = this.props;\n\n        onDelete();\n    };\n\n    render() {\n        const { t, chatId, onClick } = this.props;\n        const { contextMenu, top, left } = this.state;\n\n        return (\n            <>\n                <ListItem\n                    button\n                    className='recently-found-chat'\n                    onClick={onClick}\n                    onContextMenu={this.handleContextMenu}>\n                    <Chat chatId={chatId} />\n                </ListItem>\n                <Popover\n                    open={contextMenu}\n                    onClose={this.handleCloseContextMenu}\n                    anchorReference='anchorPosition'\n                    anchorPosition={{ top, left }}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'left'\n                    }}\n                    onMouseDown={e => e.stopPropagation()}>\n                    <MenuList onClick={e => e.stopPropagation()}>\n                        <MenuItem onClick={this.handleDelete}>\n                            <ListItemIcon>\n                                <DeleteIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Delete')} />\n                        </MenuItem>\n                    </MenuList>\n                </Popover>\n            </>\n        );\n    }\n}\n\nRecentlyFoundChat.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onSelect: PropTypes.func,\n    onDelete: PropTypes.func\n};\n\nexport default withTranslation()(RecentlyFoundChat);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport ListItem from '@material-ui/core/ListItem';\nimport Chat from './Chat';\nimport { getChatUsername } from '../../Utils/Chat';\nimport AppStore from '../../Stores/ApplicationStore';\nimport './FoundPublicChat.css';\n\nclass FoundPublicChat extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            nextChatId: AppStore.getChatId(),\n            previousChatId: null\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId } = this.props;\n\n        if (nextState.nextChatId === chatId) {\n            return true;\n        }\n\n        if (nextState.previousChatId === chatId) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    onClientUpdateChatId = update => {\n        const { nextChatId, previousChatId } = update;\n\n        this.setState({\n            nextChatId: nextChatId,\n            previousChatId: previousChatId\n        });\n    };\n\n    render() {\n        const { chatId, onClick } = this.props;\n        const { nextChatId: selectedChatId } = this.state;\n\n        const username = getChatUsername(chatId);\n\n        return (\n            <ListItem\n                button\n                className={classNames('found-public-chat', { 'item-selected': chatId === selectedChatId })}\n                onClick={onClick}>\n                <div className='found-public-chat-wrapper'>\n                    <Chat chatId={chatId} subtitle={username ? '@' + username : null} />\n                </div>\n            </ListItem>\n        );\n    }\n}\n\nFoundPublicChat.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onClick: PropTypes.func\n};\n\nexport default FoundPublicChat;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport ListItem from '@material-ui/core/ListItem';\nimport ChatTile from './ChatTile';\nimport UserTile from './UserTile';\nimport DialogTitle from './DialogTitle';\nimport { getMessageDate, getMessageSenderFullName, getMessageSenderName } from '../../Utils/Chat';\nimport { getContent } from '../../Utils/Message';\nimport AppStore from '../../Stores/ApplicationStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport './FoundMessage.css';\n\nclass FoundMessage extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            nextChatId: AppStore.getChatId(),\n            nextMessageId: AppStore.getMessageId()\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId } = this.props;\n\n        if (nextState.nextChatId === chatId && nextState.nextMessageId === messageId) {\n            return true;\n        }\n\n        if (nextState.previousChatId === chatId && nextState.previousMessageId === messageId) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    onClientUpdateChatId = update => {\n        this.setState({\n            ...update\n        });\n    };\n\n    render() {\n        const { chatId, messageId, chatSearch, onClick, t } = this.props;\n        const selectedChatId = this.state.nextChatId;\n        const selectedMessageId = this.state.nextMessageId;\n        const message = MessageStore.get(chatId, messageId);\n\n        const { sender_user_id } = message;\n\n        const date = getMessageDate(message);\n        const senderName = getMessageSenderName(message, t);\n        const senderFullName = getMessageSenderFullName(message, t);\n        const content = getContent(message, t) || '\\u00A0';\n        const selected = chatId === selectedChatId && messageId === selectedMessageId;\n\n        const tile =\n            sender_user_id && chatSearch ? (\n                <UserTile userId={sender_user_id} dialog />\n            ) : (\n                <ChatTile chatId={chatId} dialog />\n            );\n\n        return (\n            <ListItem button className={classNames('found-message', { 'item-selected': selected })} onClick={onClick}>\n                <div className='dialog-wrapper'>\n                    {tile}\n                    <div className='dialog-inner-wrapper'>\n                        <div className='tile-first-row'>\n                            {chatSearch && senderFullName ? (\n                                <div className='dialog-title'>{senderFullName}</div>\n                            ) : (\n                                <DialogTitle chatId={chatId} />\n                            )}\n                            <div className='dialog-meta'>{date}</div>\n                        </div>\n                        <div className='tile-second-row'>\n                            <div className='dialog-content'>\n                                {\n                                    <>\n                                        {!chatSearch && senderName && (\n                                            <span className='dialog-content-accent'>{senderName}: </span>\n                                        )}\n                                        {content}\n                                    </>\n                                }\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </ListItem>\n        );\n    }\n}\n\nFoundMessage.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    chatSearch: PropTypes.bool,\n    onClick: PropTypes.func\n};\n\nexport default withTranslation()(FoundMessage);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport './SectionHeader.css';\n\nfunction SectionHeader({ command, multiline, onClick, children }) {\n    return (\n        <div className='section-header'>\n            <div className={classNames('section-header-title', { 'section-header-title-multiline': multiline })}>{children}</div>\n            {Boolean(command) && <a onClick={onClick}>{command}</a>}\n        </div>\n    );\n}\n\nSectionHeader.propTypes = {\n    command: PropTypes.string,\n    multiline: PropTypes.bool,\n    onClick: PropTypes.func\n};\n\nexport default SectionHeader;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport KeyboardManager, { KeyboardHandler } from '../../Additional/KeyboardManager';\nimport CloseIcon from '../../../Assets/Icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport Chat from '../../Tile/Chat';\nimport TopChat from '../../Tile/TopChat';\nimport RecentlyFoundChat from '../../Tile/RecentlyFoundChat';\nimport FoundPublicChat from '../../Tile/FoundPublicChat';\nimport FoundMessage from '../../Tile/FoundMessage';\nimport SectionHeader from '../SectionHeader';\nimport { loadChatsContent, loadUsersContent } from '../../../Utils/File';\nimport { filterDuplicateMessages } from '../../../Utils/Message';\nimport { getCyrillicInput, getLatinInput } from '../../../Utils/Language';\nimport { orderCompare } from '../../../Utils/Common';\nimport { getChatOrder } from '../../../Utils/Chat';\nimport { modalManager } from '../../../Utils/Modal';\nimport { SCROLL_PRECISION, USERNAME_LENGTH_MIN } from '../../../Constants';\nimport ChatStore from '../../../Stores/ChatStore';\nimport FileStore from '../../../Stores/FileStore';\nimport MessageStore from '../../../Stores/MessageStore';\nimport UserStore from '../../../Stores/UserStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './Search.css';\n\nclass Search extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.keyboardHandler = new KeyboardHandler(this.handleKeyDown);\n        this.listRef = React.createRef();\n        this.state = {};\n    }\n\n    componentDidMount() {\n        const { text } = this.props;\n\n        this.searchOrLoadContent(text);\n\n        KeyboardManager.add(this.keyboardHandler);\n    }\n\n    componentWillUnmount() {\n        KeyboardManager.remove(this.keyboardHandler);\n    }\n\n    handleKeyDown = event => {\n        if (modalManager.modals.length > 0) {\n            return;\n        }\n\n        if (event.isComposing) {\n            return;\n        }\n\n        switch (event.key) {\n            case 'Escape':\n                event.preventDefault();\n                event.stopPropagation();\n                event.target.blur();\n\n                this.handleClose();\n                break;\n        }\n    };\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { chatId, text } = this.props;\n\n        if (prevProps.text !== text) {\n            this.searchOrLoadContent(text);\n        } else if (prevProps.chatId !== chatId) {\n            this.searchOrLoadContent(text);\n        }\n    }\n\n    searchOrLoadContent(text) {\n        const trimmedText = text ? text.trim() : '';\n\n        if (!trimmedText) {\n            this.loadContent();\n        } else {\n            this.searchText(trimmedText);\n        }\n    }\n\n    concatSearchResults = results => {\n        const arr = [];\n        const map = new Map();\n\n            for (let i = 0; i < results.length; i++) {\n            let result = results[i] && results[i].chat_ids;\n            if (result) {\n                for (let j = 0; j < result.length; j++) {\n                    if (!map.has(result[j])) {\n                        map.set(result[j], result[j]);\n                        arr.push(result[j]);\n                    }\n                }\n            }\n        }\n\n        arr.sort((a, b) => {\n            return orderCompare(getChatOrder(b), getChatOrder(a));\n        });\n\n        return arr;\n    };\n\n    searchText = async text => {\n        this.sessionId = new Date();\n        this.text = text;\n        const sessionId = this.sessionId;\n        let store = null;\n\n        // console.log('[se] searchText=' + text);\n\n        const { chatId } = this.props;\n        const { savedMessages } = this.state;\n\n        if (!chatId) {\n            const promises = [];\n            const localPromise = TdLibController.send({\n                '@type': 'searchChats',\n                query: text,\n                limit: 100\n            });\n            promises.push(localPromise);\n\n            const latinText = getLatinInput(text);\n            if (latinText && latinText !== text) {\n                const latinLocalPromise = TdLibController.send({\n                    '@type': 'searchChats',\n                    query: latinText,\n                    limit: 100\n                });\n                promises.push(latinLocalPromise);\n            }\n\n            const cyrillicText = getCyrillicInput(text);\n            if (cyrillicText && cyrillicText !== text) {\n                const cyrillicLocalPromise = TdLibController.send({\n                    '@type': 'searchChats',\n                    query: cyrillicText,\n                    limit: 100\n                });\n                promises.push(cyrillicLocalPromise);\n            }\n\n            const results = await Promise.all(promises.map(x => x.catch(e => null)));\n            const local = this.concatSearchResults(results);\n\n            if (sessionId !== this.sessionId) {\n                return;\n            }\n\n            if (savedMessages) {\n                const { t } = this.props;\n\n                const searchText = text.toUpperCase();\n                const savedMessagesStrings = ['SAVED MESSAGES', t('SavedMessages').toUpperCase()];\n\n                if (\n                    savedMessagesStrings.some(el => el.includes(searchText)) ||\n                    (latinText && savedMessagesStrings.some(el => el.includes(latinText.toUpperCase())))\n                ) {\n                    local.splice(0, 0, savedMessages.id);\n                }\n            }\n\n            this.setState({\n                top: null,\n                recentlyFound: null,\n                local: local\n            });\n\n            store = FileStore.getStore();\n            loadChatsContent(store, local);\n\n            let trimmedText = text.trim();\n            trimmedText = trimmedText.startsWith('@') ? trimmedText.substr(1) : trimmedText;\n            if (trimmedText.length >= USERNAME_LENGTH_MIN) {\n                const globalPromises = [];\n\n                const globalPromise = TdLibController.send({\n                    '@type': 'searchPublicChats',\n                    query: trimmedText\n                });\n                globalPromises.push(globalPromise);\n\n                if (latinText) {\n                    let latinTrimmedText = latinText.trim();\n                    latinTrimmedText = latinTrimmedText.startsWith('@') ? latinTrimmedText.substr(1) : latinTrimmedText;\n                    if (latinTrimmedText.length >= USERNAME_LENGTH_MIN && latinTrimmedText !== trimmedText) {\n                        const globalLatinPromise = TdLibController.send({\n                            '@type': 'searchPublicChats',\n                            query: latinTrimmedText\n                        });\n                        globalPromises.push(globalLatinPromise);\n                    }\n                }\n\n                const globalResults = await Promise.all(globalPromises.map(x => x.catch(e => null)));\n                const global = this.concatSearchResults(globalResults);\n\n                if (sessionId !== this.sessionId) {\n                    return;\n                }\n\n                this.setState({\n                    global\n                });\n\n                store = FileStore.getStore();\n                loadChatsContent(store, global);\n            } else {\n                this.setState({\n                    global: null\n                });\n            }\n        }\n\n        let messages = [];\n        if (chatId) {\n            messages = await TdLibController.send({\n                '@type': 'searchChatMessages',\n                chat_id: chatId,\n                query: text,\n                sender_user_id: 0,\n                from_message_id: 0,\n                offset: 0,\n                limit: 50,\n                filter: null\n            });\n        } else {\n            messages = await TdLibController.send({\n                '@type': 'searchMessages',\n                chat_list: { '@type': 'chatListMain' },\n                query: text,\n                offset_date: 0,\n                offset_chat_id: 0,\n                offset_message_id: 0,\n                limit: 50\n            });\n        }\n\n        MessageStore.setItems(messages.messages);\n\n        let linkMessage = null;\n        if (!chatId) {\n            try {\n                const messageLinkInfo = await TdLibController.send({\n                    '@type': 'getMessageLinkInfo',\n                    url: text\n                });\n                // console.log('[se] searchText=' + text + ' messageLinkInfo', messageLinkInfo);\n\n                MessageStore.setItems([messageLinkInfo.message]);\n\n                linkMessage = messageLinkInfo;\n            } catch (error) {\n                console.log('[se] searchText=' + text + ' messageLinkInfo error', error);\n            }\n        }\n\n        // console.log('[se] searchText=' + text + ' result', messages, linkMessage);\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        // console.log('[se] searchText=' + text + ' result session', messages, linkMessage);\n\n        this.setState({\n            messages,\n            linkMessage\n        });\n\n        const chats = new Map();\n        const users = new Map();\n        for (let i = 0; i < messages.messages.length; i++) {\n            chats.set(messages.messages[i].chat_id, messages.messages[i].chat_id);\n            if (messages.messages[i].sender_user_id) {\n                users.set(messages.messages[i].sender_user_id, messages.messages[i].sender_user_id);\n            }\n        }\n\n        if (linkMessage) {\n            const { chat_id, sender_user_id } = linkMessage;\n\n            chats.set(chat_id, chat_id);\n            if (sender_user_id) {\n                users.set(sender_user_id, sender_user_id);\n            }\n        }\n\n        store = FileStore.getStore();\n        loadChatsContent(store, [...chats.keys()]);\n        loadUsersContent(store, [...users.keys()]);\n    };\n\n    loadContent = async () => {\n        const { chatId } = this.props;\n        if (chatId) {\n            this.setState({\n                top: null,\n                recentlyFound: null,\n                local: null,\n                global: null,\n                messages: null,\n                linkMessage: null\n            });\n\n            return;\n        }\n\n        const topPromise = TdLibController.send({\n            '@type': 'getTopChats',\n            category: { '@type': 'topChatCategoryUsers' },\n            limit: 30\n        }).catch(() => {\n            return { '@type': 'chats', chat_ids: [] };\n        });\n\n        const recentlyFoundPromise = TdLibController.send({\n            '@type': 'searchChats',\n            query: '',\n            limit: 100\n        }).catch(() => {\n            return { '@type': 'chats', chat_ids: [] };\n        });\n\n        const savedMessagesPromise = TdLibController.send({\n            '@type': 'createPrivateChat',\n            user_id: UserStore.getMyId(),\n            force: true\n        }).catch(error => {});\n\n        const [top, recentlyFound, savedMessages] = await Promise.all([\n            topPromise,\n            recentlyFoundPromise,\n            savedMessagesPromise\n        ]);\n\n        this.setState({\n            top,\n            recentlyFound,\n            savedMessages,\n            local: null,\n            global: null,\n            messages: null,\n            linkMessage: null\n        });\n\n        const store = FileStore.getStore();\n        loadChatsContent(store, top.chat_ids);\n        loadChatsContent(store, recentlyFound.chat_ids);\n    };\n\n    handleClearRecentlyFound = event => {\n        event.stopPropagation();\n\n        TdLibController.send({\n            '@type': 'clearRecentlyFoundChats'\n        });\n\n        this.setState({ recentlyFound: null });\n    };\n\n    handleSelectMessage = (chatId, messageId, addToRecent, keepOpen) => {\n        const { onSelectMessage } = this.props;\n\n        if (addToRecent) {\n            TdLibController.send({\n                '@type': 'addRecentlyFoundChat',\n                chat_id: chatId\n            });\n        }\n\n        onSelectMessage(chatId, messageId, keepOpen);\n    };\n\n    handleScroll = () => {\n        const list = this.listRef.current;\n\n        if (list.scrollTop + list.offsetHeight >= list.scrollHeight - SCROLL_PRECISION) {\n            this.onLoadPrevious();\n        }\n    };\n\n    getOffset = messages => {\n        const length = messages ? messages.messages.length : 0;\n\n        const offsetDate = length > 0 ? messages.messages[length - 1].date : 0;\n        const offsetChatId = length > 0 ? messages.messages[length - 1].chat_id : 0;\n        const offsetMessageId = length > 0 ? messages.messages[length - 1].id : 0;\n\n        return {\n            offset_date: offsetDate,\n            offset_chat_id: offsetChatId,\n            offset_message_id: offsetMessageId\n        };\n    };\n\n    concatMessages = (messages, result) => {\n        if (!result) return messages;\n        if (!result.messages.length) return messages;\n\n        if (!messages) return result;\n        if (!messages.messages.length) return result;\n\n        return {\n            total_count: result.total_count,\n            messages: messages.messages.concat(result.messages)\n        };\n    };\n\n    onLoadPrevious = async () => {\n        if (this.loading) return;\n\n        const { chatId } = this.props;\n\n        const sessionId = this.sessionId;\n\n        const { messages } = this.state;\n\n        const offset = this.getOffset(messages);\n\n        this.loading = true;\n        let result = [];\n        if (chatId) {\n            result = await TdLibController.send({\n                '@type': 'searchChatMessages',\n                chat_id: chatId,\n                query: this.text,\n                sender_user_id: 0,\n                from_message_id: offset.offset_message_id,\n                limit: 50,\n                filter: null\n            });\n        } else {\n            result = await TdLibController.send({\n                '@type': 'searchMessages',\n                chat_list: { '@type': 'chatListMain' },\n                query: this.text,\n                ...offset,\n                limit: 50\n            });\n        }\n        this.loading = false;\n\n        filterDuplicateMessages(result, messages ? messages.messages : []);\n        MessageStore.setItems(result.messages);\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        this.setState({\n            messages: this.concatMessages(messages, result)\n        });\n\n        const chats = new Map();\n        const users = new Map();\n        for (let i = 0; i < result.messages.length; i++) {\n            chats.set(result.messages[i].chat_id, result.messages[i].chat_id);\n            if (result.messages[i].sender_user_id) {\n                users.set(result.messages[i].sender_user_id, result.messages[i].sender_user_id);\n            }\n        }\n\n        const store = FileStore.getStore();\n        loadChatsContent(store, [...chats.keys()]);\n        loadUsersContent(store, [...users.keys()]);\n    };\n\n    handleTopChatsScroll = event => {\n        event.stopPropagation();\n    };\n\n    handleClose = () => {\n        const { onClose } = this.props;\n\n        onClose();\n    };\n\n    handleDeleteRecentlyFoundChat = async chatId => {\n        if (!chatId) return;\n\n        await TdLibController.send({\n            '@type': 'removeRecentlyFoundChat',\n            chat_id: chatId\n        });\n\n        const { recentlyFound } = this.state;\n        if (!recentlyFound) return;\n\n        this.setState({\n            recentlyFound: { ...recentlyFound, chat_ids: recentlyFound.chat_ids.filter(x => x !== chatId) }\n        });\n    };\n\n    handleDeleteTopChat = async chatId => {\n        if (!chatId) return;\n\n        await TdLibController.send({\n            '@type': 'removeTopChat',\n            chat_id: chatId,\n            category: {\n                '@type': 'topChatCategoryUsers'\n            }\n        });\n\n        const { top } = this.state;\n        if (!top) return;\n\n        this.setState({\n            top: { ...top, chat_ids: top.chat_ids.filter(x => x !== chatId) }\n        });\n    };\n\n    render() {\n        const { chatId, t } = this.props;\n        const { top, recentlyFound, local, global, messages, linkMessage } = this.state;\n\n        const chat = ChatStore.get(chatId);\n\n        const topChats =\n            top && top.chat_ids\n                ? top.chat_ids.map(x => (\n                      <TopChat\n                          key={x}\n                          chatId={x}\n                          onSelect={() => this.handleSelectMessage(x, null, false, false)}\n                          onDelete={() => this.handleDeleteTopChat(x)}\n                      />\n                  ))\n                : [];\n\n        const recentlyFoundChats =\n            recentlyFound && recentlyFound.chat_ids\n                ? recentlyFound.chat_ids.map(x => (\n                      <RecentlyFoundChat\n                          key={x}\n                          chatId={x}\n                          onClick={() => this.handleSelectMessage(x, null, true, false)}\n                          onDelete={() => this.handleDeleteRecentlyFoundChat(x)}\n                      />\n                  ))\n                : [];\n\n        const localChats = local\n            ? local.map(x => (\n                  <RecentlyFoundChat\n                      key={x}\n                      chatId={x}\n                      onClick={() => this.handleSelectMessage(x, null, true, false)}\n                  />\n              ))\n            : [];\n\n        const globalChatsMap = new Map();\n        const globalChats = global\n            ? global.map(x => {\n                  globalChatsMap.set(x, x);\n\n                  return (\n                      <FoundPublicChat\n                          key={x}\n                          chatId={x}\n                          onClick={() => this.handleSelectMessage(x, null, true, true)}\n                      />\n                  );\n              })\n            : [];\n\n        const globalLinkChat =\n            linkMessage && linkMessage.chat_id && !linkMessage.message && !globalChatsMap.has(linkMessage.chat_id) ? (\n                <FoundPublicChat\n                    key={linkMessage.chat_id}\n                    chatId={linkMessage.chat_id}\n                    onClick={() => this.handleSelectMessage(linkMessage.chat_id, null, true, true)}\n                />\n            ) : null;\n\n        const globalMessagesMap = new Map();\n        const globalMessages =\n            messages && messages.messages\n                ? messages.messages.map(x => {\n                      const key = `${x.chat_id}_${x.id}`;\n                      globalMessagesMap.set(key, key);\n\n                      return (\n                          <FoundMessage\n                              key={key}\n                              chatId={x.chat_id}\n                              messageId={x.id}\n                              chatSearch={Boolean(chatId)}\n                              onClick={() => this.handleSelectMessage(x.chat_id, x.id, false, true)}\n                          />\n                      );\n                  })\n                : [];\n\n        const globalLinkMessage =\n            linkMessage &&\n            linkMessage.message &&\n            !globalMessagesMap.has(`${linkMessage.message.chat_id}_${linkMessage.message.id}`) ? (\n                <FoundMessage\n                    key={`${linkMessage.message.chat_id}_${linkMessage.message.id}`}\n                    chatId={linkMessage.message.chat_id}\n                    messageId={linkMessage.message.id}\n                    chatSearch={false}\n                    onClick={() =>\n                        this.handleSelectMessage(linkMessage.message.chat_id, linkMessage.message.id, false, true)\n                    }\n                />\n            ) : null;\n\n        let count = messages ? messages.total_count : 0;\n        if (\n            linkMessage &&\n            linkMessage.message &&\n            !globalMessagesMap.has(`${linkMessage.message.chat_id}_${linkMessage.message.id}`)\n        ) {\n            count++;\n        }\n\n        let messagesCaption = t('NoMessages');\n        if (count) {\n            messagesCaption = count === 1 ? 'Found 1 message' : `Found ${count} messages`;\n        }\n\n        return (\n            <div ref={this.listRef} className='search' onScroll={this.handleScroll}>\n                {chat && (\n                    <>\n                        <div className='sidebar-page-section'>\n                            <SectionHeader>{t('SearchMessagesIn')}</SectionHeader>\n                            <div className='search-chat-wrapper'>\n                                <div className='search-chat-control'>\n                                    <Chat chatId={chatId} showStatus={false} />\n                                </div>\n                                <IconButton\n                                    className='header-right-button'\n                                    aria-label='Search'\n                                    onMouseDown={this.handleClose}>\n                                    <CloseIcon />\n                                </IconButton>\n                            </div>\n                        </div>\n                        <div className='sidebar-page-section-divider' />\n                    </>\n                )}\n                {topChats.length > 0 && (\n                    <>\n                        <div className='sidebar-page-section'>\n                            <SectionHeader>{t('ChatHints')}</SectionHeader>\n                            <div className='search-top-chats-list' onScroll={this.handleTopChatsScroll}>\n                                <div className='search-top-chats-placeholder' />\n                                {topChats}\n                                <div className='search-top-chats-placeholder' />\n                            </div>\n                        </div>\n                        <div className='sidebar-page-section-divider' />\n                    </>\n                )}\n                {recentlyFoundChats.length > 0 && (\n                    <div className='sidebar-page-section'>\n                        <SectionHeader command={t('ClearButton')} onClick={this.handleClearRecentlyFound}>\n                            {t('Recent')}\n                        </SectionHeader>\n                        {recentlyFoundChats}\n                    </div>\n                )}\n                {localChats.length > 0 && (\n                    <>\n                        <div className='sidebar-page-section'>\n                            <SectionHeader>{t('ChatsAndContacts')}</SectionHeader>\n                            {localChats}\n                        </div>\n                        <div className='sidebar-page-section-divider' />\n                    </>\n                )}\n                {globalChats.length > 0 && (\n                    <>\n                        <div className='sidebar-page-section'>\n                            <SectionHeader>{t('GlobalSearch')}</SectionHeader>\n                            {globalLinkChat}\n                            {globalChats}\n                        </div>\n                        <div className='sidebar-page-section-divider' />\n                    </>\n                )}\n                {(messages || (linkMessage && linkMessage.message)) && (\n                    <div className='sidebar-page-section'>\n                        <SectionHeader>{messagesCaption}</SectionHeader>\n                        {globalLinkMessage}\n                        {globalMessages}\n                    </div>\n                )}\n            </div>\n        );\n    }\n}\n\nSearch.propTypes = {\n    chatId: PropTypes.number,\n    text: PropTypes.string,\n    onSelectMessage: PropTypes.func.isRequired,\n    onClose: PropTypes.func.isRequired\n};\n\nexport default withTranslation()(Search);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes, { number } from 'prop-types';\nimport { Slide } from '@material-ui/core';\nimport KeyboardManager, { KeyboardHandler } from '../Additional/KeyboardManager';\nimport { modalManager } from '../../Utils/Modal';\nimport './SidebarPage.css';\n\nclass SidebarPage extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.keyboardHandler = new KeyboardHandler(this.handleKeyDown);\n    }\n\n    handleKeyDown = event => {\n        if (modalManager.modals.length > 0) {\n            return;\n        }\n\n        if (event.isComposing) {\n            return;\n        }\n\n        switch (event.key) {\n            case 'Escape':\n                const { onClose } = this.props;\n                if (onClose) {\n                    event.preventDefault();\n                    event.stopPropagation();\n                    event.target.blur();\n\n                    onClose();\n                }\n                break;\n        }\n    };\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { open } = this.props;\n\n        if (prevProps.open !== open) {\n            if (open) {\n                KeyboardManager.add(this.keyboardHandler);\n            } else {\n                KeyboardManager.remove(this.keyboardHandler);\n            }\n        }\n    }\n\n    render() {\n        const { children, open, timeout, onClose } = this.props;\n\n        return (\n            <Slide direction='right' in={open} timeout={timeout} mountOnEnter unmountOnExit>\n                <div className='sidebar-page'>{onClose ? React.cloneElement(children, { onClose }) : children}</div>\n            </Slide>\n        );\n    }\n}\n\nSidebarPage.propTypes = {\n    open: PropTypes.bool.isRequired,\n    timeout: PropTypes.oneOfType([PropTypes.object, PropTypes.number]),\n    onClose: PropTypes.func\n};\n\nexport default SidebarPage;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M9.37867966,2 C9.97541676,2 10.5501571,2.2133476 11.0009229,2.59780217 L11.1464466,2.73223305 L13.267767,4.85355339 C13.3427815,4.92856794 13.4391777,4.97728504 13.542631,4.9937713 L13.6213203,5 L19,5 C21.1421954,5 22.8910789,6.68396847 22.9951047,8.80035966 L23,9 L23,18 C23,20.1421954 21.3160315,21.8910789 19.1996403,21.9951047 L19,22 L5,22 C2.85780461,22 1.10892112,20.3160315 1.00489531,18.1996403 L1,18 L1,6 C1,3.85780461 2.68396847,2.10892112 4.80035966,2.00489531 L5,2 L9.37867966,2 Z M9.37867966,4 L5,4 C3.9456382,4 3.08183488,4.81587779 3.00548574,5.85073766 L3,6 L3,18 C3,19.0543618 3.81587779,19.9181651 4.85073766,19.9945143 L5,20 L19,20 C20.0543618,20 20.9181651,19.1841222 20.9945143,18.1492623 L21,18 L21,9 C21,7.9456382 20.1841222,7.08183488 19.1492623,7.00548574 L19,7 L13.6213203,7 C13.0245832,7 12.4498429,6.7866524 11.9990771,6.40219783 L11.8535534,6.26776695 L9.73223305,4.14644661 C9.6572185,4.07143206 9.56082233,4.02271496 9.45736903,4.0062287 L9.37867966,4 Z M19,10 C19.5522847,10 20,10.4477153 20,11 C20,11.5128358 19.6139598,11.9355072 19.1166211,11.9932723 L19,12 L5,12 C4.44771525,12 4,11.5522847 4,11 C4,10.4871642 4.38604019,10.0644928 4.88337887,10.0067277 L5,10 L19,10 Z'/>,\n    'Folder'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M7.70710678,20.7071068 C7.5195704,20.8946432 7.26521649,21 7,21 L4,21 C3.44771525,21 3,20.5522847 3,20 L3,17 C3,16.7347835 3.10535684,16.4804296 3.29289322,16.2928932 L16.5857864,3 C17.3257272,2.26005924 18.5012114,2.22111499 19.2869988,2.88316725 L19.4142136,3 L21,4.58578644 C21.7399408,5.3257272 21.778885,6.50121136 21.1168328,7.28699879 L21,7.41421356 L7.70710678,20.7071068 Z M5,17.4142136 L5,19 L6.58578644,19 L16.5857864,9 L15,7.41421356 L5,17.4142136 Z M18,4.41421356 L16.414,5.99921356 L18,7.58521356 L19.5857864,6 L18,4.41421356 Z' />,\n    'Edit'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M11,2 C13.209139,2 15,3.790861 15,6 C15,6.55228475 14.5522847,7 14,7 C13.4477153,7 13,6.55228475 13,6 L13,6 L12.9945143,5.85073766 C12.9181651,4.81587779 12.0543618,4 11,4 L11,4 L6,4 C4.8954305,4 4,4.8954305 4,6 L4,6 L4,18 C4,19.1045695 4.8954305,20 6,20 L6,20 L11,20 C12.1045695,20 13,19.1045695 13,18 L13,18 L13.0067277,17.8833789 C13.0644928,17.3860402 13.4871642,17 14,17 C14.5522847,17 15,17.4477153 15,18 C15,20.209139 13.209139,22 11,22 L11,22 L6,22 C3.790861,22 2,20.209139 2,18 L2,18 L2,6 C2,3.790861 3.790861,2 6,2 L6,2 Z M18.7071068,7.29289322 L22.7071068,11.2928932 C22.7355731,11.3213595 22.7623312,11.3515341 22.787214,11.3832499 L22.7071068,11.2928932 C22.7425008,11.3282873 22.774687,11.3656744 22.8036654,11.4046934 C22.8215099,11.4288693 22.8382813,11.453725 22.8539326,11.4793398 C22.8613931,11.4913869 22.8685012,11.5036056 22.8753288,11.5159379 C22.8862061,11.5357061 22.8966234,11.5561086 22.9063462,11.5769009 C22.914321,11.5939015 22.9218036,11.6112044 22.9287745,11.628664 C22.9366843,11.6484208 22.9438775,11.6682023 22.9504533,11.6882636 C22.9552713,11.7031487 22.9599023,11.7185367 22.9641549,11.734007 C22.9701664,11.7555635 22.9753602,11.7772539 22.9798348,11.7992059 C22.9832978,11.8166247 22.9863719,11.834051 22.9889822,11.8515331 C22.9962388,11.8996379 23,11.9493797 23,12 L22.9962979,11.9137692 C22.9978436,11.9317345 22.9989053,11.9497336 22.9994829,11.9677454 L23,12 C23,12.0112225 22.9998151,12.0224019 22.9994483,12.0335352 C22.9988772,12.050591 22.997855,12.0679231 22.996384,12.0852242 C22.994564,12.1070574 22.9920941,12.1281144 22.9889807,12.1489612 C22.9863719,12.165949 22.9832978,12.1833753 22.9797599,12.2007258 C22.9753602,12.2227461 22.9701664,12.2444365 22.964279,12.2658396 C22.9599023,12.2814633 22.9552713,12.2968513 22.9502619,12.3121425 C22.9438775,12.3317977 22.9366843,12.3515792 22.928896,12.3710585 C22.9218036,12.3887956 22.914321,12.4060985 22.9063266,12.4232215 C22.8966234,12.4438914 22.8862061,12.4642939 22.8751242,12.484277 C22.8685012,12.4963944 22.8613931,12.5086131 22.8540045,12.5207088 C22.8382813,12.546275 22.8215099,12.5711307 22.8036865,12.5951593 C22.7982466,12.602603 22.7927155,12.6098424 22.7870723,12.6170223 C22.7849289,12.6196628 22.7826279,12.6225624 22.7803112,12.625449 L22.7071068,12.7071068 L22.7071068,12.7071068 L18.7071068,16.7071068 C18.3165825,17.0976311 17.6834175,17.0976311 17.2928932,16.7071068 C16.9023689,16.3165825 16.9023689,15.6834175 17.2928932,15.2928932 L19.585,13 L13,13 C12.4871642,13 12.0644928,12.6139598 12.0067277,12.1166211 L12,12 C12,11.4477153 12.4477153,11 13,11 L13,11 L19.585,11 L17.2928932,8.70710678 C16.9023689,8.31658249 16.9023689,7.68341751 17.2928932,7.29289322 C17.6834175,6.90236893 18.3165825,6.90236893 18.7071068,7.29289322 Z' />,\n    'LogOut'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M12,16 C13.1045695,16 14,16.8954305 14,18 C14,19.1045695 13.1045695,20 12,20 C10.8954305,20 10,19.1045695 10,18 C10,16.8954305 10.8954305,16 12,16 Z M12,10 C13.1045695,10 14,10.8954305 14,12 C14,13.1045695 13.1045695,14 12,14 C10.8954305,14 10,13.1045695 10,12 C10,10.8954305 10.8954305,10 12,10 Z M12,4 C13.1045695,4 14,4.8954305 14,6 C14,7.1045695 13.1045695,8 12,8 C10.8954305,8 10,7.1045695 10,6 C10,4.8954305 10.8954305,4 12,4 Z' />,\n    'More'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport LogOutIcon from '../../../Assets/Icons/LogOut';\nimport MoreIcon from '../../../Assets/Icons/More';\nimport { Button, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle } from '@material-ui/core';\nimport { modalManager } from '../../../Utils/Modal';\nimport TdLibController from '../../../Controllers/TdLibController';\n\nclass SettingsMenuButton extends React.Component {\n    state = {\n        anchorEl: null,\n        open: false\n    };\n\n    handleMenuOpen = event => {\n        this.setState({ anchorEl: event.currentTarget });\n    };\n\n    handleMenuClose = () => {\n        this.setState({ anchorEl: null });\n    };\n\n    handleLogOut = () => {\n        this.handleMenuClose();\n\n        this.setState({ open: true });\n    };\n\n    handleDone = () => {\n        this.handleClose();\n        TdLibController.logOut();\n    };\n\n    handleClose = () => {\n        this.setState({ open: false });\n    };\n\n    render() {\n        const { t } = this.props;\n        const { anchorEl, open } = this.state;\n\n        return (\n            <>\n                <IconButton\n                    aria-owns={anchorEl ? 'simple-menu' : null}\n                    aria-haspopup='true'\n                    className='header-right-button'\n                    aria-label='Menu'\n                    onClick={this.handleMenuOpen}>\n                    <MoreIcon />\n                </IconButton>\n                <Menu\n                    id='main-menu'\n                    anchorEl={anchorEl}\n                    open={Boolean(anchorEl)}\n                    onClose={this.handleMenuClose}\n                    getContentAnchorEl={null}\n                    disableAutoFocusItem\n                    disableRestoreFocus={true}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'right'\n                    }}>\n                    <MenuItem onClick={this.handleLogOut}>\n                        <ListItemIcon>\n                            <LogOutIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('LogOut')} />\n                    </MenuItem>\n                </Menu>\n                <Dialog\n                    manager={modalManager}\n                    transitionDuration={0}\n                    open={open}\n                    onClose={this.handleClose}\n                    aria-labelledby='form-dialog-title'>\n                    <DialogTitle id='form-dialog-title'>{t('Confirm')}</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText style={{ whiteSpace: 'pre-wrap' }}>\n                            {t('AreYouSureLogout')}\n                        </DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleClose} color='primary'>\n                            {t('Cancel')}\n                        </Button>\n                        <Button onClick={this.handleDone} color='primary'>\n                            {t('Ok')}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </>\n        );\n    }\n}\n\nSettingsMenuButton.propTypes = {};\n\nexport default withTranslation()(SettingsMenuButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M12,1 C14.6887547,1 16.8818181,3.12230671 16.9953805,5.78311038 L17,6 L17,8 C18.6568542,8 20,9.34314575 20,11 L20,19 C20,20.6568542 18.6568542,22 17,22 L7,22 C5.34314575,22 4,20.6568542 4,19 L4,11 C4,9.34314575 5.34314575,8 7,8 L7,6 C7,3.23857625 9.23857625,1 12,1 Z M17,10 L7,10 C6.44771525,10 6,10.4477153 6,11 L6,19 C6,19.5522847 6.44771525,20 7,20 L17,20 C17.5522847,20 18,19.5522847 18,19 L18,11 C18,10.4477153 17.5522847,10 17,10 Z M12,13.5 C12.8284271,13.5 13.5,14.1715729 13.5,15 C13.5,15.8284271 12.8284271,16.5 12,16.5 C11.1715729,16.5 10.5,15.8284271 10.5,15 C10.5,14.1715729 11.1715729,13.5 12,13.5 Z M12.1762728,3.00509269 L12,3 C10.4023191,3 9.09633912,4.24891996 9.00509269,5.82372721 L9,6 L9,8 L15,8 L15,6 C15,4.40231912 13.75108,3.09633912 12.1762728,3.00509269 L12,3 L12.1762728,3.00509269 Z' />,\n    'Data'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M12.4100787,14.6155108 L10.33,12.56 L10.33,12.56 L10.36,12.53 C12.1,10.59 13.34,8.36 14.07,6 L16,6 C16.5522847,6 17,5.55228475 17,5 C17,4.44771525 16.5522847,4 16,4 L10,4 L10,4 L10,3 C10,2.44771525 9.55228475,2 9,2 C8.44771525,2 8,2.44771525 8,3 L8,4 L8,4 L1.995,4 C1.44547667,4 1,4.44547667 1,4.995 C1,5.54452333 1.44547667,5.99 1.995,5.99 L12.17,5.99 L12.17,5.99 C11.5,7.92 10.44,9.75 9,11.35 C8.29025814,10.5639418 7.67370319,9.7196418 7.15033516,8.83487918 C7.09974701,8.74935905 7.03930045,8.64304956 6.96899548,8.51595071 C6.79288115,8.1975972 6.45776707,8 6.09394677,8 L5.69,8 C5.34408921,8 5.06367311,8.2804161 5.06367311,8.62632689 C5.06367311,8.72554854 5.08724633,8.82335055 5.13246346,8.91167013 C5.1653189,8.97586688 5.19575217,9.03408878 5.22376326,9.08633583 C5.88285067,10.3156835 6.70136504,11.4828779 7.67,12.56 L3.29489879,16.8749328 C2.90279535,17.2616439 2.89842396,17.8929978 3.28513501,18.2851012 C3.28675102,18.2867397 3.28837269,18.2883727 3.29,18.29 L3.29289322,18.2928932 C3.68341751,18.6834175 4.31658249,18.6834175 4.70710678,18.2928932 L9,14 L9,14 L11.3403247,16.3403247 C11.6133932,16.6133932 12.0561246,16.6133932 12.3291931,16.3403247 C12.4001325,16.2693853 12.4549762,16.1840114 12.49,16.09 L12.6442671,15.6759147 C12.7816472,15.3071575 12.6899849,14.8921111 12.4100787,14.6155108 Z M17.8069995,10 L17.1930005,10 C16.7761559,10 16.4030352,10.2585728 16.2566713,10.6488766 L12.3511234,21.0636708 C12.2167367,21.4220355 12.3983067,21.8214894 12.7566713,21.9558761 C12.8344793,21.9850541 12.916901,22 13,22 L13.3059169,22 C13.7232965,22 14.0967782,21.7407727 14.2427584,21.3497542 L15.12,19 L15.12,19 L19.87,19 L20.7561047,21.3524905 C20.9028501,21.74208 21.2756099,22 21.6919201,22 L22,22 C22.3827336,22 22.6930005,21.6897331 22.6930005,21.3069995 C22.6930005,21.2239005 22.6780546,21.1414789 22.6488766,21.0636708 L18.7433287,10.6488766 C18.5969648,10.2585728 18.2238441,10 17.8069995,10 Z M17.5,12.67 L19.12,17 L15.88,17 L17.5,12.67 Z' />,\n    'Language'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { IconButton } from '@material-ui/core';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport CloseIcon from '../../../Assets/Icons/Close';\nimport FilterIcon from '../../../Assets/Icons/Folder';\nimport Chat from '../../Tile/Chat';\nimport EditIcon from '../../../Assets/Icons/Edit';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport SettingsIcon from '../../../Assets/Icons/Settings';\nimport SettingsMenuButton from './SettingsMenuButton';\nimport UnmuteIcon from '../../../Assets/Icons/Unmute';\nimport DataIcon from '../../../Assets/Icons/Data';\nimport LanguageIcon from '../../../Assets/Icons/Language';\nimport packageJson from '../../../../package.json';\nimport { setProfileMediaViewerContent } from '../../../Actions/Client';\nimport ChatStore from '../../../Stores/ChatStore';\nimport './Main.css';\n\nclass Main extends React.Component {\n\n    handleOpenViewer = () => {\n        const { chatId } = this.props;\n        \n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.photo) return;\n\n        setProfileMediaViewerContent({ chatId });\n    };\n\n    render() {\n        const {\n            chatId,\n            popup,\n            t,\n            onClose,\n            onEditProfile,\n            onGeneral,\n            onNotifications,\n            onPrivacySecurity,\n            onLanguage,\n            onFilters\n        } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        const { photo } = chat;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        { popup ? <CloseIcon/> : <ArrowBackIcon /> }\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('Settings')}</span>\n                    </div>\n                    <SettingsMenuButton />\n                </div>\n                <div className='sidebar-page-content settings-main-content'>\n                    <div className='chat-details-info'>\n                        <Chat\n                            chatId={chatId}\n                            big={true}\n                            showStatus={true}\n                            showSavedMessages={false}\n                            onTileSelect={photo ? this.handleOpenViewer : null}\n                        />\n                    </div>\n                    <ListItem className='settings-list-item' button onClick={onEditProfile}>\n                        <ListItemIcon>\n                            <EditIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('EditProfile')} />\n                    </ListItem>\n                    <ListItem className='settings-list-item' button onClick={onGeneral}>\n                        <ListItemIcon>\n                            <SettingsIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('GeneralSettings')} />\n                    </ListItem>\n                    <ListItem className='settings-list-item' button onClick={onNotifications}>\n                        <ListItemIcon>\n                            <UnmuteIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('Notifications')} />\n                    </ListItem>\n                    <ListItem className='settings-list-item' button onClick={onPrivacySecurity}>\n                        <ListItemIcon>\n                            <DataIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('PrivacySettings')} />\n                    </ListItem>\n                    <ListItem autoFocus={false} className='settings-list-item' button onClick={onFilters}>\n                        <ListItemIcon>\n                            <FilterIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('Filters')} />\n                    </ListItem>\n                    <ListItem autoFocus={false} className='settings-list-item' button onClick={onLanguage}>\n                        <ListItemIcon>\n                            <LanguageIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('Language')} />\n                    </ListItem>\n                    <div className='settings-main-footer'>\n                        {packageJson.version}\n                    </div>\n                </div>\n            </>\n        );\n    }\n}\n\nMain.propTypes = {\n    chatId: PropTypes.number,\n    popup: PropTypes.bool,\n    onClose: PropTypes.func,\n    onEditProfile: PropTypes.func,\n    onGeneral: PropTypes.func,\n    onNotifications: PropTypes.func,\n    onPrivacySecurity: PropTypes.func,\n    onLanguage: PropTypes.func,\n    onFilters: PropTypes.func\n};\n\nexport default withTranslation()(Main);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M19.8833789,16.0067277 L20,16 C20.5128358,16 20.9355072,16.3860402 20.9932723,16.8833789 L21,17 L21,19 L23,19 C23.5128358,19 23.9355072,19.3860402 23.9932723,19.8833789 L24,20 C24,20.5128358 23.6139598,20.9355072 23.1166211,20.9932723 L23,21 L21,21 L21,23 C21,23.5128358 20.6139598,23.9355072 20.1166211,23.9932723 L20,24 C19.4871642,24 19.0644928,23.6139598 19.0067277,23.1166211 L19,23 L19,21 L17,21 C16.4871642,21 16.0644928,20.6139598 16.0067277,20.1166211 L16,20 C16,19.4871642 16.3860402,19.0644928 16.8833789,19.0067277 L17,19 L19,19 L19,17 C19,16.4871642 19.3860402,16.0644928 19.8833789,16.0067277 L20,16 L19.8833789,16.0067277 Z M8.41421356,2 L13.5857864,2 C14.0572824,2 14.5116128,2.16648982 14.8701798,2.46691315 L15,2.58578644 L16.4142136,4 L18,4 C19.5976809,4 20.9036609,5.24891996 20.9949073,6.82372721 L21,7 L21,12 C21,12.5522847 20.5522847,13 20,13 C19.4871642,13 19.0644928,12.6139598 19.0067277,12.1166211 L19,12 L19,7 C19,6.48716416 18.6139598,6.06449284 18.1166211,6.00672773 L18,6 L16.4142136,6 C15.9427176,6 15.4883872,5.83351018 15.1298202,5.53308685 L15,5.41421356 L13.5857864,4 L8.41421356,4 L7,5.41421356 C6.66660199,5.74761157 6.22761579,5.95114561 5.76163928,5.99225938 L5.58578644,6 L4,6 C3.48716416,6 3.06449284,6.38604019 3.00672773,6.88337887 L3,7 L3,18 C3,18.5128358 3.38604019,18.9355072 3.88337887,18.9932723 L4,19 L13,19 C13.5522847,19 14,19.4477153 14,20 C14,20.5128358 13.6139598,20.9355072 13.1166211,20.9932723 L13,21 L4,21 C2.40231912,21 1.09633912,19.75108 1.00509269,18.1762728 L1,18 L1,7 C1,5.40231912 2.24891996,4.09633912 3.82372721,4.00509269 L4,4 L5.58578644,4 L7,2.58578644 C7.33339801,2.25238843 7.77238421,2.04885439 8.23836072,2.00774062 L8.41421356,2 L13.5857864,2 L8.41421356,2 Z M11,7 C13.7614237,7 16,9.23857625 16,12 C16,14.7614237 13.7614237,17 11,17 C8.23857625,17 6,14.7614237 6,12 C6,9.23857625 8.23857625,7 11,7 Z M11,9 C9.34314575,9 8,10.3431458 8,12 C8,13.6568542 9.34314575,15 11,15 C12.6568542,15 14,13.6568542 14,12 C14,10.3431458 12.6568542,9 11,9 Z' />,\n    'AddImage'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Cropper from 'react-cropper';\nimport IconButton from '@material-ui/core/IconButton';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport AddImageIcon from '../../Assets/Icons/AddImage';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport CheckIcon from '../../Assets/Icons/Check';\nimport { getFitSize, readImageSize } from '../../Utils/Common';\nimport 'cropperjs/dist/cropper.css';\nimport './NewChatPhoto.css';\n\nclass NewChatPhoto extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.attachPhotoRef = React.createRef();\n        this.cropperRef = React.createRef();\n\n        const { defaultURL } = this.props;\n\n        this.state = {\n            blobURL: defaultURL,\n            open: false\n        }\n    }\n\n    handleCancel = () => {\n        this.setState({\n            open: false\n        });\n    }\n\n    handleDone = () => {\n        const cropper = this.cropperRef.current;\n        if (!cropper) return;\n\n        cropper.getCroppedCanvas().toBlob(blob => {\n            const blobURL = URL.createObjectURL(blob);\n\n            this.setState({\n                blob,\n                blobURL\n            });\n\n            const { onChoose } = this.props;\n            if (!onChoose) return;\n\n            onChoose(blob, blobURL);\n        }, 'image/jpeg');\n\n        this.handleCancel();\n    };\n\n    handleAttach = () => {\n        this.attachPhotoRef.current.click();\n    };\n\n    handleAttachComplete = async () => {\n        const { files } = this.attachPhotoRef.current;\n        if (files.length === 0) return;\n\n        if (files.length === 1) {\n            const [ file, ...rest ] = Array.from(files);\n            if (!file) return;\n\n            const [width, height] = await readImageSize(file);\n\n            this.setState({\n                open: true,\n                file,\n                fileURL: URL.createObjectURL(file),\n                width,\n                height\n            });\n        }\n\n        this.attachPhotoRef.current.value = '';\n    };\n\n    render() {\n        const { t } = this.props;\n        const { open, width, height, fileURL, blobURL } = this.state;\n\n        const { width: fitWidth, height: fitHeight } = getFitSize({ width, height }, 400, true);\n\n        return (\n            <>\n                <div className='new-chat-photo'>\n                    { blobURL ? (\n                        <img className='new-chat-photo-image-button' alt='' src={blobURL} onClick={this.handleAttach}/>\n                        ) : (\n                        <div className='new-chat-photo-image-button new-chat-photo-button' onClick={this.handleAttach}>\n                            <AddImageIcon className='new-chat-photo-icon'/>\n                        </div>\n                    )}\n                </div>\n                <input\n                    ref={this.attachPhotoRef}\n                    className='inputbox-attach-button'\n                    type='file'\n                    multiple={false}\n                    accept='image/*'\n                    onChange={this.handleAttachComplete}\n                />\n                { open && (\n                    <Dialog\n                        transitionDuration={0}\n                        open={true}\n                        onClose={this.handleCancel}\n                        aria-labelledby='dialog-title'>\n                        <div className='header-master'>\n                            <IconButton className='header-left-button' onClick={this.handleCancel}>\n                                <CloseIcon/>\n                            </IconButton>\n                            <div className='header-status grow cursor-pointer'>\n                                <span className='header-status-content'>{t('DragToReposition')}</span>\n                            </div>\n                        </div>\n                        <DialogContent>\n                            <Cropper\n                                ref={this.cropperRef}\n                                src={fileURL}\n                                style={{ height: fitHeight, width: fitWidth, margin: '0 46px 62px' }}\n                                // Cropper.js options\n                                aspectRatio={1}\n                                viewMode={3}\n                                guides={false} />\n                        </DialogContent>\n                        <div className='new-chat-photo-done-button ' onClick={this.handleDone}>\n                            <CheckIcon/>\n                        </div>\n                    </Dialog>\n                )}\n            </>\n        );\n    }\n\n}\n\nNewChatPhoto.propTypes = {\n    defaultURL: PropTypes.string,\n    onChoose: PropTypes.func\n};\n\nexport default withTranslation()(NewChatPhoto);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../../Utils/HOC';\nimport TextField from '@material-ui/core/TextField';\nimport { IconButton } from '@material-ui/core';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport NewChatPhoto from '../NewChatPhoto';\nimport { getSrc, loadChatContent } from '../../../Utils/File';\nimport ChatStore from '../../../Stores/ChatStore';\nimport FileStore from '../../../Stores/FileStore';\nimport UserStore from '../../../Stores/UserStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './EditProfile.css';\nimport { getSimpleMarkupEntities, getFormattedText } from '../../../Utils/Message';\n\nclass EditProfile extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.firstNameRef = React.createRef();\n        this.lastNameRef = React.createRef();\n        this.bioRef = React.createRef();\n        this.usernameRef = React.createRef();\n\n        const user = UserStore.get(UserStore.getMyId());\n        const userFullInfo = UserStore.getFullInfo(UserStore.getMyId());\n\n        this.state = {\n            firstName: user ? user.first_name : '',\n            lastName: user ? user.last_name : '',\n            bio: userFullInfo ? userFullInfo.bio : '',\n            username: user ? user.username : '',\n            usernameCheck: null\n        };\n    }\n\n    componentWillUnmount() {\n        this.setName();\n        this.setBio();\n        this.setUsername();\n    }\n\n    setUsername() {\n        const { username, usernameCheck } = this.state;\n        let newUsername = this.usernameRef.current.value;\n        if (newUsername.startsWith('@') && newUsername.length > 1) {\n            newUsername = newUsername.substr(1);\n        }\n\n        if (username === newUsername) return;\n        if (!usernameCheck) return;\n        if (usernameCheck['@type'] !== 'checkChatUsernameResultOk') return;\n\n        TdLibController.send({\n            '@type': 'setUsername',\n            username: newUsername\n        });\n    }\n\n    setName() {\n        const { firstName, lastName } = this.state;\n        const newFirstName = this.firstNameRef.current.value;\n        const newLastName = this.lastNameRef.current.value;\n\n        if (newFirstName === firstName && newLastName === lastName) {\n            return;\n        }\n\n        TdLibController.send({\n            '@type': 'setName',\n            first_name: newFirstName,\n            last_name: newLastName\n        });\n    }\n\n    setBio() {\n        const { bio } = this.state;\n        const newBio = this.bioRef.current.value;\n        if (newBio === bio) {\n            return;\n        }\n\n        TdLibController.send({\n            '@type': 'setBio',\n            bio: newBio\n        });\n    }\n\n    handleUsernameChange = async () => {\n        const { chatId } = this.props;\n        const { username } = this.state;\n        let newUsername = this.usernameRef.current.value;\n        if (newUsername.startsWith('@') && newUsername.length > 1) {\n            newUsername = newUsername.substr(1);\n        }\n        if (username === newUsername || newUsername === '') {\n            this.setState({\n                usernameCheck: null\n            });\n\n            // console.log('[un] checkChatUsername', 'null');\n        } else {\n            // console.log('[un] checkChatUsername start', chatId, newUsername);\n            const result = await TdLibController.send({\n                '@type': 'checkChatUsername',\n                chat_id: chatId,\n                username: newUsername\n            });\n\n            // console.log('[un] checkChatUsername end', chatId, newUsername, result);\n\n            let newUsername2 = this.usernameRef.current.value;\n            if (newUsername2.startsWith('@') && newUsername2.length > 1) {\n                newUsername2 = newUsername2.substr(1);\n            }\n            if (newUsername2 === newUsername) {\n                this.setState({\n                    usernameCheck: result\n                });\n            }\n        }\n    };\n\n    handleChoosePhoto = async data => {\n        const { chatId } = this.props;\n\n        await TdLibController.send({\n            '@type': 'setProfilePhoto',\n            photo: { '@type': 'inputFileBlob', name: 'profile_photo.jpg', data }\n        });\n\n        const store = FileStore.getStore();\n        loadChatContent(store, chatId, true);\n    };\n\n    render() {\n        let { chatId, t, onClose } = this.props;\n        const { firstName, lastName, bio, username, usernameCheck } = this.state;\n\n        let hasError = false;\n        let usernameLabel = t('Username');\n        if (usernameCheck) {\n            switch (usernameCheck['@type']) {\n                case 'checkChatUsernameResultOk': {\n                    hasError = false;\n                    usernameLabel = 'Username is available';\n                    break;\n                }\n                case 'checkChatUsernameResultPublicChatsTooMuch':\n                case 'checkChatUsernameResultPublicGroupsUnavailable':\n                case 'checkChatUsernameResultUsernameInvalid': {\n                    hasError = true;\n                    usernameLabel = 'Invalid username';\n                    break;\n                }\n                case 'checkChatUsernameResultUsernameOccupied': {\n                    hasError = true;\n                    usernameLabel = 'Username is already taken';\n                    break;\n                }\n            }\n        }\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        const { photo } = chat;\n\n        const src = getSrc(photo ? photo.small : null);\n        const entities = [];\n        const text = getSimpleMarkupEntities(t('UsernameHelp'), entities);\n        const formattedText = getFormattedText({ '@type': 'formattedText', text, entities });\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('EditProfile')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>\n                    <NewChatPhoto defaultURL={src} onChoose={this.handleChoosePhoto}/>\n                    <div className='edit-profile-name'>\n                        <TextField\n                            inputRef={this.firstNameRef}\n                            className='edit-profile-input'\n                            variant='outlined'\n                            fullWidth\n                            label={t('FirstName')}\n                            defaultValue={firstName}\n                        />\n                        <TextField\n                            inputRef={this.lastNameRef}\n                            className='edit-profile-input'\n                            variant='outlined'\n                            fullWidth\n                            label={t('LastName')}\n                            defaultValue={lastName}\n                        />\n                        <TextField\n                            inputRef={this.bioRef}\n                            className='edit-profile-input'\n                            variant='outlined'\n                            fullWidth\n                            label={t('Bio')}\n                            defaultValue={bio}\n                        />\n                        <div className='edit-profile-hint'>{t('BioAbout')}</div>\n                    </div>\n                    <div className='sidebar-page-section-divider' />\n                    <div className='edit-profile-username'>\n                        <TextField\n                            inputRef={this.usernameRef}\n                            error={hasError}\n                            className='edit-profile-input'\n                            variant='outlined'\n                            fullWidth\n                            label={usernameLabel}\n                            defaultValue={username}\n                            onChange={this.handleUsernameChange}\n                        />\n                        <div className='edit-profile-hint'>\n                            {formattedText}\n                        </div>\n                    </div>\n                </div>\n            </>\n        );\n    }\n}\n\nEditProfile.propTypes = {\n    chatId: PropTypes.number\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(EditProfile);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path fill='currentColor' fillRule='nonzero' d='M11.8833789,4.00672773 L12,4 C12.5128358,4 12.9355072,4.38604019 12.9932723,4.88337887 L13,5 L13,11 L19,11 C19.5128358,11 19.9355072,11.3860402 19.9932723,11.8833789 L20,12 C20,12.5128358 19.6139598,12.9355072 19.1166211,12.9932723 L19,13 L13,13 L13,19 C13,19.5128358 12.6139598,19.9355072 12.1166211,19.9932723 L12,20 C11.4871642,20 11.0644928,19.6139598 11.0067277,19.1166211 L11,19 L11,13 L5,13 C4.48716416,13 4.06449284,12.6139598 4.00672773,12.1166211 L4,12 C4,11.4871642 4.38604019,11.0644928 4.88337887,11.0067277 L5,11 L11,11 L11,5 C11,4.48716416 11.3860402,4.06449284 11.8833789,4.00672773 L12,4 L11.8833789,4.00672773 Z'/>,\n    'Add'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path fillRule='nonzero' d='M18,18 C23.8608627,18 28.072977,19.5546034 30.5027576,22.7682432 C31.1498637,23.6240893 31.5,24.6677318 31.5,25.7406839 L31.5,27.4285714 C31.5,29.6771593 29.6771593,31.5 27.4285714,31.5 L8.57142857,31.5 C6.32284066,31.5 4.5,29.6771593 4.5,27.4285714 L4.5,25.740741 C4.5,24.6677985 4.85010028,23.6241745 5.49717185,22.7683365 C7.92695186,19.5546298 12.1390883,18 18,18 Z M18,21 C12.9925527,21 9.66714119,22.2273543 7.89018414,24.5776159 C7.63699525,24.9124919 7.5,25.3208649 7.5,25.740741 L7.5,27.4285714 C7.5,28.0203051 7.97969491,28.5 8.57142857,28.5 L27.4285714,28.5 C28.0203051,28.5 28.5,28.0203051 28.5,27.4285714 L28.5,25.7406839 C28.5,25.3208358 28.3629925,24.9124609 28.1097736,24.5775601 C26.3328071,22.2273354 23.0074077,21 18,21 Z M18,3 C21.3137085,3 24,5.6862915 24,9 C24,12.3137085 21.3137085,15 18,15 C14.6862915,15 12,12.3137085 12,9 C12,5.6862915 14.6862915,3 18,3 Z M18,6 C16.3431458,6 15,7.34314575 15,9 C15,10.6568542 16.3431458,12 18,12 C19.6568542,12 21,10.6568542 21,9 C21,7.34314575 19.6568542,6 18,6 Z'/>,\n    'NewPrivate'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path fillRule='nonzero' d='M9,13 C12.3229116,13 14.7530244,13.8337117 16.2223821,15.5699359 C16.6742675,16.1038947 16.9426297,16.7664653 16.9917833,17.4602417 L17,17.6925226 L17,18.5 C17,19.8254834 15.9684641,20.9100387 14.6643757,20.9946823 L14.5,21 L3.5,21 C2.1745166,21 1.08996133,19.9684641 1.00531768,18.6643757 L1,18.5 L1,17.6925204 C1,16.9152876 1.2755246,16.1632192 1.77762117,15.569932 C3.24697824,13.8337108 5.67709024,13 9,13 Z M9,15 C6.21130036,15 4.33538166,15.6435809 3.30428673,16.861943 C3.14055953,17.0554062 3.03840077,17.2920167 3.00889582,17.5415166 L3,17.6925212 L3,18.5 C3,18.7454599 3.17687516,18.9496084 3.41012437,18.9919443 L3.5,19 L14.5,19 C14.7454599,19 14.9496084,18.8231248 14.9919443,18.5898756 L15,18.5 L15,17.6925226 C15,17.3883883 14.8921864,17.0941004 14.6957148,16.8619448 C13.6646202,15.6435815 11.788701,15 9,15 Z M19,14 C19.5522847,14 20,14.4477153 20,15 C20,15.5522847 19.5522847,16 19,16 C18.4477153,16 18,15.5522847 18,15 C18,14.4477153 18.4477153,14 19,14 Z M19,3 C21.209139,3 23,4.790861 23,7 C23,8.80747736 21.8011592,10.3349504 20.1552529,10.8306439 L20,10.873 L20,11.5 C20,12.0128358 19.6139598,12.4355072 19.1166211,12.4932723 L19,12.5 C18.4871642,12.5 18.0644928,12.1139598 18.0067277,11.6166211 L18,11.5 L18,10 C18,9.48716416 18.3860402,9.06449284 18.8833789,9.00672773 L19,9 C20.1045695,9 21,8.1045695 21,7 C21,5.8954305 20.1045695,5 19,5 C17.8954305,5 17,5.8954305 17,7 C17,7.55228475 16.5522847,8 16,8 C15.4477153,8 15,7.55228475 15,7 C15,4.790861 16.790861,3 19,3 Z M9,3 C11.209139,3 13,4.790861 13,7 C13,9.209139 11.209139,11 9,11 C6.790861,11 5,9.209139 5,7 C5,4.790861 6.790861,3 9,3 Z M9,5 C7.8954305,5 7,5.8954305 7,7 C7,8.1045695 7.8954305,9 9,9 C10.1045695,9 11,8.1045695 11,7 C11,5.8954305 10.1045695,5 9,5 Z'/>,\n    'NonContacts'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path fillRule='nonzero' d='M12,19.5 C16.9843673,19.5 20.6295366,20.7505675 22.8335731,23.3549038 C23.5867154,24.2448351 24,25.3729365 24,26.538784 L24,27.75 C24,29.8210678 22.3210678,31.5 20.25,31.5 L3.75,31.5 C1.67893219,31.5 0,29.8210678 0,27.75 L0,26.5387806 C0,25.3729314 0.413286907,24.2448288 1.16643175,23.354898 C3.37046736,20.7505662 7.01563535,19.5 12,19.5 Z M26.9272668,21.0503629 L27.1024807,21.0520931 C30.3320395,21.2704178 32.8220855,22.1814787 34.5196345,23.8437596 C35.3875212,24.6935741 35.9082005,25.8309338 35.9889534,27.0352541 L36,27.3651995 L36,28.125 C36,29.911296 34.6122576,31.3734674 32.8560732,31.4922138 L32.625,31.5 L28.5,31.5 C27.6715729,31.5 27,30.8284271 27,30 C27,29.2307462 27.5790603,28.5967393 28.3250683,28.5100916 L28.5,28.5 L32.625,28.5 C32.8025201,28.5 32.9512302,28.3766499 32.990096,28.2109841 L33,28.125 L33,27.3651995 C33,26.8466882 32.7912139,26.3500306 32.4207231,25.9872546 C31.2961739,24.8860689 29.4736312,24.2192349 26.9001365,24.0452615 C26.0735959,23.9893857 25.4488487,23.2740458 25.5047245,22.4475052 C25.5566091,21.6800032 26.1771133,21.0864965 26.9272668,21.0503629 L26.9272668,21.0503629 Z M12,22.5 C7.81695054,22.5 5.00307249,23.4653713 3.4564301,25.2929144 C3.16172113,25.6411484 3,26.0825803 3,26.5387817 L3,27.75 C3,28.1642136 3.33578644,28.5 3.75,28.5 L20.25,28.5 C20.6642136,28.5 21,28.1642136 21,27.75 L21,26.538784 C21,26.0825825 20.8382796,25.6411507 20.5435722,25.2929172 C18.9969303,23.4653723 16.1830516,22.5 12,22.5 Z M25.5,7.5 C28.3994949,7.5 30.75,9.85050506 30.75,12.75 C30.75,15.6494949 28.3994949,18 25.5,18 C22.6005051,18 20.25,15.6494949 20.25,12.75 C20.25,9.85050506 22.6005051,7.5 25.5,7.5 Z M12,4.5 C15.3137085,4.5 18,7.1862915 18,10.5 C18,13.8137085 15.3137085,16.5 12,16.5 C8.6862915,16.5 6,13.8137085 6,10.5 C6,7.1862915 8.6862915,4.5 12,4.5 Z M25.5,10.5 C24.2573593,10.5 23.25,11.5073593 23.25,12.75 C23.25,13.9926407 24.2573593,15 25.5,15 C26.7426407,15 27.75,13.9926407 27.75,12.75 C27.75,11.5073593 26.7426407,10.5 25.5,10.5 Z M12,7.5 C10.3431458,7.5 9,8.84314575 9,10.5 C9,12.1568542 10.3431458,13.5 12,13.5 C13.6568542,13.5 15,12.1568542 15,10.5 C15,8.84314575 13.6568542,7.5 12,7.5 Z'/>,\n    'NewGroup'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path fillRule='nonzero' d='M27.75,2.51771235 C29.8210678,2.51771235 31.5,4.19664454 31.5,6.26771235 L31.5,29.7322876 C31.5,30.6020604 31.1976592,31.444786 30.6447384,32.1161898 C29.3281456,33.7149097 26.9648177,33.9436189 25.3660978,32.627026 L18,26.5597124 L18,29.25 C18,31.6465213 16.1266201,33.6054913 13.7644092,33.742361 L13.5,33.75 C11.1034787,33.75 9.14450868,31.8766201 9.00763904,29.5144092 L9,29.25 L8.99971804,25.3499156 C5.57649804,24.6549011 3,21.6283372 3,18 C3,13.8578644 6.35786438,10.5 10.5,10.5 L16.7118519,10.5 L25.3660978,3.37297397 C26.0375017,2.82005314 26.8802273,2.51771235 27.75,2.51771235 Z M12,25.4992124 L12,29.25 C12,30.0784271 12.6715729,30.75 13.5,30.75 C14.2692538,30.75 14.9032607,30.1709397 14.9899084,29.4249317 L15,29.25 L15,25.4992124 L12,25.4992124 L12,29.25 L12,25.4992124 Z M27.75,5.51771235 C27.5760455,5.51771235 27.4075003,5.57818051 27.2732196,5.68876467 L18.6189737,12.8157907 C18.0818506,13.2581274 17.4076701,13.5 16.7118519,13.5 L10.5,13.5 C8.01471863,13.5 6,15.5147186 6,18 C6,20.4852814 8.01471863,22.5 10.5,22.5 L16.7118519,22.5 C17.4076701,22.5 18.0818506,22.7418726 18.6189737,23.1842093 L27.2732196,30.3112353 C27.5929635,30.5745539 28.0656291,30.5288121 28.3289477,30.2090681 C28.4395318,30.0747873 28.5,29.9062422 28.5,29.7322876 L28.5,6.26771235 C28.5,5.85349879 28.1642136,5.51771235 27.75,5.51771235 Z'/>,\n    'NewChannel'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path fillRule='nonzero' d='M17,3 C19.1421954,3 20.8910789,4.68396847 20.9951047,6.80035966 L21,7 L21,10.5 C21,11.0522847 20.5522847,11.5 20,11.5 C19.4871642,11.5 19.0644928,11.1139598 19.0067277,10.6166211 L19,10.5 L19,7 C19,5.9456382 18.1841222,5.08183488 17.1492623,5.00548574 L17,5 L7,5 C5.9456382,5 5.08183488,5.81587779 5.00548574,6.85073766 L5,7 L5,19.585 L7.20502525,17.3807612 C7.41399436,17.1717921 7.68678103,17.0413128 7.97757724,17.0082977 L8.12426407,17 L12.5,17 C13.0522847,17 13.5,17.4477153 13.5,18 C13.5,18.5128358 13.1139598,18.9355072 12.6166211,18.9932723 L12.5,19 L8.413,19 L4.87781746,22.5363961 C4.47892479,22.9352888 3.84989486,22.9637811 3.41812544,22.6218731 L3.32218254,22.5363961 C3.14536253,22.3595761 3.034957,22.1287566 3.00702113,21.8826983 L3,21.7585786 L3,7 C3,4.85780461 4.68396847,3.10892112 6.80035966,3.00489531 L7,3 L17,3 Z M22.7071068,12.2928932 C23.0675907,12.6533772 23.0953203,13.2206082 22.7902954,13.6128994 L22.7071068,13.7071068 L17.7071068,18.7071068 C17.3466228,19.0675907 16.7793918,19.0953203 16.3871006,18.7902954 L16.2928932,18.7071068 L13.7928932,16.2071068 C13.4023689,15.8165825 13.4023689,15.1834175 13.7928932,14.7928932 C14.1533772,14.4324093 14.7206082,14.4046797 15.1128994,14.7097046 L15.2071068,14.7928932 L17,16.585 L21.2928932,12.2928932 C21.6834175,11.9023689 22.3165825,11.9023689 22.7071068,12.2928932 Z'/>,\n    'ReadChats'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path fillRule='nonzero' d='M12,1 C12.5128358,1 12.9355072,1.38604019 12.9932723,1.88337887 L13,2 L13,3 L13.5,3 C16.7383969,3 19.3775718,5.56557489 19.4958615,8.77506174 L19.5,9 L19.5,11 L20,11 L20.1762728,11.0050927 C21.6927538,11.0929596 22.9070404,12.3072462 22.9949073,13.8237272 L23,14 L23,17 L22.9932723,17.1166211 C22.9355072,17.6139598 22.5128358,18 22,18 C21.4871642,18 21.0644928,17.6139598 21.0067277,17.1166211 L21,17 L21,14 L20.9932723,13.8833789 C20.9399506,13.424297 20.575703,13.0600494 20.1166211,13.0067277 L20,13 L19.5,13 L19.5,18 C19.5,20.1421954 17.8160315,21.8910789 15.6996403,21.9951047 L15.5,22 L8.5,22 C6.35780461,22 4.60892112,20.3160315 4.50489531,18.1996403 L4.5,18 L4.5,13 L4,13 C3.48716416,13 3.06449284,13.3860402 3.00672773,13.8833789 L3,14 L3,17 C3,17.5522847 2.55228475,18 2,18 C1.48716416,18 1.06449284,17.6139598 1.00672773,17.1166211 L1,17 L1,14 C1,12.4023191 2.24891996,11.0963391 3.82372721,11.0050927 L4,11 L4.5,11 L4.5,9 C4.5,5.76160306 7.06557489,3.12242824 10.2750617,3.00413847 L10.5,3 L11,3 L11,2 C11,1.44771525 11.4477153,1 12,1 Z M16.6762728,12.9949073 L16.5,13 L7.5,13 C7.14939781,13 6.81284272,12.9398572 6.5,12.8293257 L6.5,18 C6.5,19.0543618 7.31587779,19.9181651 8.35073766,19.9945143 L8.5,20 L15.5,20 C16.5543618,20 17.4181651,19.1841222 17.4945143,18.1492623 L17.5,18 L17.5009007,12.8289758 C17.2406443,12.9210572 16.9638938,12.9782422 16.6762728,12.9949073 Z M13.5,5 L10.5,5 C8.35780461,5 6.60892112,6.68396847 6.50489531,8.80035966 L6.5,9 L6.5,10 C6.5,10.5128358 6.88604019,10.9355072 7.38337887,10.9932723 L7.5,11 L16.5,11 C17.0128358,11 17.4355072,10.6139598 17.4932723,10.1166211 L17.5,10 L17.5,9 C17.5,6.85780461 15.8160315,5.10892112 13.6996403,5.00489531 L13.5,5 Z M9.5,7.5 C10.0522847,7.5 10.5,7.94771525 10.5,8.5 C10.5,9.05228475 10.0522847,9.5 9.5,9.5 C8.94771525,9.5 8.5,9.05228475 8.5,8.5 C8.5,7.94771525 8.94771525,7.5 9.5,7.5 Z M14.5,7.5 C15.0522847,7.5 15.5,7.94771525 15.5,8.5 C15.5,9.05228475 15.0522847,9.5 14.5,9.5 C13.9477153,9.5 13.5,9.05228475 13.5,8.5 C13.5,7.94771525 13.9477153,7.5 14.5,7.5 Z'/>,\n    'Bots'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M4.70710678,12.2928932 C4.31658249,11.9023689 3.68341751,11.9023689 3.29289322,12.2928932 C2.90236893,12.6834175 2.90236893,13.3165825 3.29289322,13.7071068 L8.29289322,18.7071068 C8.68341751,19.0976311 9.31658249,19.0976311 9.70710678,18.7071068 L20.7071068,7.70710678 C21.0976311,7.31658249 21.0976311,6.68341751 20.7071068,6.29289322 C20.3165825,5.90236893 19.6834175,5.90236893 19.2928932,6.29289322 L9,16.5857864 L4.70710678,12.2928932 Z' />,\n    'Done'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport Popover from '@material-ui/core/Popover';\nimport Radio from '@material-ui/core/Radio';\nimport ChatTile from './ChatTile';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport { getChatTitle, getChatType } from '../../Utils/Chat';\nimport './FilterChat.css';\n\nclass FilterChat extends React.Component {\n\n    state = {\n        contextMenu: false,\n        left: 0,\n        top: 0,\n        checked: false\n    };\n\n    handleOpenContextMenu = event => {\n        const { onDelete } = this.props;\n        if (!onDelete) return;\n\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        this.setState({\n            contextMenu: true,\n            left: event.clientX,\n            top: event.clientY\n        });\n    };\n\n    handleCloseContextMenu = () => {\n        this.setState({\n            contextMenu: false,\n            left: 0,\n            top: 0\n        });\n    };\n\n    handleDelete = () => {\n        this.handleCloseContextMenu();\n\n        const { chatId, onDelete } = this.props;\n\n        onDelete && onDelete(chatId);\n    };\n\n    render() {\n        const { chatId, t, type, checked, onClick } = this.props;\n        const { contextMenu, left, top } = this.state;\n\n        const title = getChatTitle(chatId, true, t);\n\n        return (\n            <>\n                <ListItem className='settings-list-item2' role={undefined} button onClick={onClick} onContextMenu={this.handleOpenContextMenu}>\n                    <div className='filter-chat-tile'>\n                        <ChatTile chatId={chatId} small={true} showSavedMessages={true}/>\n                    </div>\n                    <div className='filter-chat-content'>\n                        <div className='filter-chat-title'>\n                            {title}\n                        </div>\n                        { type && (\n                            <div className='filter-chat-subtitle'>\n                                {getChatType(chatId, t)}\n                            </div>\n                        )}\n                    </div>\n                    { checked !== undefined && (\n                        <Radio className='filter-chat-checkbox' color='primary' checked={checked} />\n                    )}\n                </ListItem>\n                <Popover\n                    open={contextMenu}\n                    onClose={this.handleCloseContextMenu}\n                    anchorReference='anchorPosition'\n                    anchorPosition={{ top, left }}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'left'\n                    }}\n                    onMouseDown={e => e.stopPropagation()}>\n                    <MenuList onClick={e => e.stopPropagation()}>\n                        <MenuItem onClick={this.handleDelete}>\n                            <ListItemIcon>\n                                <DeleteIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Delete')} />\n                        </MenuItem>\n                    </MenuList>\n                </Popover>\n            </>\n        );\n    }\n}\n\nFilterChat.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    type: PropTypes.bool,\n    onDelete: PropTypes.func,\n    checked: PropTypes.bool,\n    onChange: PropTypes.func\n};\n\nexport default withTranslation()(FilterChat);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport classNames from 'classnames';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport Popover from '@material-ui/core/Popover';\nimport Radio from '@material-ui/core/Radio';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport './FilterText.css';\nimport Checkbox from '@material-ui/core/Checkbox';\n\nclass FilterText extends React.Component {\n\n    state = {\n        contextMenu: false,\n        left: 0,\n        top: 0\n    };\n\n    handleOpenContextMenu = event => {\n        const { onDelete } = this.props;\n        if (!onDelete) return;\n\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        this.setState({\n            contextMenu: true,\n            left: event.clientX,\n            top: event.clientY\n        });\n    };\n\n    handleCloseContextMenu = () => {\n        this.setState({\n            contextMenu: false,\n            left: 0,\n            top: 0\n        });\n    };\n\n    handleDelete = () => {\n        this.handleCloseContextMenu();\n\n        const { onDelete } = this.props;\n\n        onDelete && onDelete();\n    };\n\n    render() {\n        const { t, className, icon, text, checked, onClick } = this.props;\n        const { contextMenu, left, top } = this.state;\n\n        return (\n            <>\n                <ListItem className={classNames(className, 'settings-list-item2', 'filter-chat-text')} role={undefined} button onMouseDown={onClick} onContextMenu={this.handleOpenContextMenu}>\n                    <div className='filter-chat-tile'>\n                        {icon}\n                    </div>\n                    <div className='filter-chat-content'>\n                        {text}\n                    </div>\n                    { checked !== undefined && (\n                        <Radio className='filter-chat-checkbox' color='primary' checked={checked} />\n                    )}\n                </ListItem>\n                <Popover\n                    open={contextMenu}\n                    onClose={this.handleCloseContextMenu}\n                    anchorReference='anchorPosition'\n                    anchorPosition={{ top, left }}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'left'\n                    }}\n                    onMouseDown={e => e.stopPropagation()}>\n                    <MenuList onClick={e => e.stopPropagation()}>\n                        <MenuItem onClick={this.handleDelete}>\n                            <ListItemIcon>\n                                <DeleteIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Delete')} />\n                        </MenuItem>\n                    </MenuList>\n                </Popover>\n            </>\n        );\n    }\n}\n\nFilterText.propTypes = {\n    icon: PropTypes.object,\n    text: PropTypes.string,\n    checked: PropTypes.bool,\n    onClick: PropTypes.func,\n    onChange: PropTypes.func,\n    onDelete: PropTypes.func\n};\n\nexport default withTranslation()(FilterText);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport './Chip.css';\n\nclass Chip extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.divRef = React.createRef();\n    }\n\n    getOffset() {\n        const {\n            offsetLeft: left,\n            offsetTop: top,\n            offsetWidth: width,\n            offsetHeight: height\n        } = this.divRef.current;\n\n        return { left, top, width, height }\n    }\n\n    setStyleCSSText(text) {\n        const div = this.divRef.current;\n        if (!div) return;\n\n        div.style.cssText = text;\n    }\n\n    render() {\n        const { icon, text, selected, onClick } = this.props;\n\n        return (\n            <div ref={this.divRef} className={classNames('chip', { 'item-selected': selected })} onClick={onClick}>\n                <div className='chip-icon'>\n                    {icon}\n                </div>\n                <div className='chip-delete'>\n                    <CloseIcon className='chip-delete-icon'/>\n                </div>\n                <div className='chip-text'>{text}</div>\n            </div>\n        )\n    }\n}\n\nChip.propTypes = {\n    icon: PropTypes.object,\n    text: PropTypes.string,\n    selected: PropTypes.bool,\n    onClick: PropTypes.func\n};\n\nexport default Chip;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport ChatTile from './ChatTile';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport { getChatShortTitle } from '../../Utils/Chat';\nimport './ChatChip.css';\n\nclass ChatChip extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.divRef = React.createRef();\n    }\n\n    getOffset() {\n        const {\n            offsetLeft: left,\n            offsetTop: top,\n            offsetWidth: width,\n            offsetHeight: height\n        } = this.divRef.current;\n\n        return { left, top, width, height }\n    }\n\n    setStyleCSSText(text) {\n        const div = this.divRef.current;\n        if (!div) return;\n\n        div.style.cssText = text;\n    }\n\n    render() {\n        const { chatId, selected, onClick } = this.props;\n\n        return (\n            <div ref={this.divRef} className={classNames('chip', { 'item-selected': selected })} onClick={onClick}>\n                <ChatTile chatId={chatId} small={true}/>\n                <div className='chip-delete'>\n                    <CloseIcon className='chip-delete-icon'/>\n                </div>\n                <div className='chip-text'>{getChatShortTitle(chatId)}</div>\n            </div>\n        )\n    }\n}\n\nChatChip.propTypes = {\n    chatId: PropTypes.number,\n    selected: PropTypes.bool,\n    onClick: PropTypes.func\n};\n\nexport default ChatChip;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport ContactsIcon from '../../../Assets/Icons/NewPrivate';\nimport FilterChat from '../../Tile/FilterChat';\nimport FilterText from '../../Tile/FilterText';\nimport NonContactsIcon from '../../../Assets/Icons/NonContacts';\nimport GroupsIcon from '../../../Assets/Icons/NewGroup';\nimport ChannelsIcon from '../../../Assets/Icons/NewChannel';\nimport BotsIcon from '../../../Assets/Icons/Bots';\nimport SectionHeader from '../SectionHeader';\nimport SearchInput from '../Search/SearchInput';\nimport MutedIcon from '../../../Assets/Icons/Mute';\nimport ReadIcon from '../../../Assets/Icons/ReadChats';\nimport ArchivedIcon from '../../../Assets/Icons/Archive';\nimport Chip from '../../Tile/Chip';\nimport ChatChip from '../../Tile/ChatChip';\nimport { loadChatsContent } from '../../../Utils/File';\nimport FileStore from '../../../Stores/FileStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './EditFilterChats.css';\n\nclass EditFilterChats extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.searchInputRef = React.createRef();\n        this.wrapPanelRef = React.createRef();\n        this.itemsRef = new Map();\n\n        this.state = {\n            focusedItem: null,\n            searchItems: null,\n            error: false\n        }\n    }\n\n    handleChatChange = (chatId, search) => {\n        const { mode } = this.props;\n\n        if (search) {\n            const input = this.searchInputRef.current;\n            input.focus();\n            input.innerText = '';\n            this.handleSearch('');\n        }\n\n        this.handleChange(mode === 'include' ? 'included_chat_ids' : 'excluded_chat_ids', chatId);\n    };\n\n    getSnapshotBeforeUpdate(prevProps, prevState) {\n        const { filter, mode } = this.props;\n        const { filter : prevFilter } = prevProps;\n\n        if (prevProps.filter === filter) {\n            return null;\n        }\n\n        const include = mode === 'include';\n        const prevItems = include ? prevProps.filter.included_chat_ids : prevProps.filter.excluded_chat_ids;\n        const items = include ? filter.included_chat_ids : filter.excluded_chat_ids;\n\n        const isDeleting =\n            prevItems.length > items.length\n            || prevFilter.include_contacts && !filter.include_contacts\n            || prevFilter.include_non_contacts && !filter.include_non_contacts\n            || prevFilter.include_groups && !filter.include_groups\n            || prevFilter.include_channels && !filter.include_channels\n            || prevFilter.include_bots && !filter.include_bots\n            || prevFilter.exclude_read && !filter.exclude_read\n            || prevFilter.exclude_muted && !filter.exclude_muted\n            || prevFilter.exclude_archived && !filter.exclude_archived;\n\n        const wrapPanel = this.wrapPanelRef.current;\n        const prevHeight = wrapPanel.scrollHeight;\n        const prevOffsetHeight = wrapPanel.offsetHeight;\n\n        const prevCSSText = wrapPanel.style.cssText;\n        const prevScrollTop = wrapPanel.scrollTop;\n        if (isDeleting) {\n            wrapPanel.style.cssText = null;\n        }\n\n        const prevMap = new Map();\n        for (let key of this.itemsRef.keys()) {\n            const el = this.itemsRef.get(key);\n            if (el) {\n                const offset = el.getOffset();\n                prevMap.set(key, offset);\n            }\n        }\n\n        return { items: prevMap, panel: { isDeleting, prevHeight, prevOffsetHeight, prevScrollTop, prevCSSText } };\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (prevProps.filter === this.props.filter) {\n            return;\n        }\n\n        this.animatePanel(snapshot.panel);\n        // this.animateItems(snapshot.items);\n    }\n\n    animatePanel(snapshot) {\n        if (!snapshot) return;\n\n        const { isDeleting, prevHeight, prevOffsetHeight, prevScrollTop, prevCSSText } = snapshot;\n\n        const wrapPanel = this.wrapPanelRef.current;\n\n        const currentHeight = wrapPanel.scrollHeight;\n        const currentOffsetHeight = wrapPanel.offsetHeight;\n\n        const expanded = currentHeight > prevHeight;\n        const collapsed = currentHeight < prevHeight;\n\n        const maxHeight = 123;\n        if (expanded) {\n            if (prevHeight < maxHeight) {\n                wrapPanel.style.cssText = `max-height: ${Math.min(prevHeight, maxHeight)}px;`;\n                requestAnimationFrame(() => {\n                    wrapPanel.style.cssText = `max-height: ${Math.min(currentHeight, maxHeight)}px;`;\n                    setTimeout(() => {\n                        this.searchInputRef.current.scrollIntoView({ behavior: 'auto' });\n                    }, 250);\n                });\n            } else {\n                wrapPanel.style.cssText = `max-height: ${maxHeight}px;`;\n                this.searchInputRef.current.scrollIntoView({ behavior: 'smooth' });\n            }\n        } else if (collapsed) {\n            if (currentHeight < maxHeight) {\n                wrapPanel.style.cssText = `min-height: ${Math.min(prevOffsetHeight, maxHeight)}px;`;\n                requestAnimationFrame(() => {\n                    wrapPanel.style.cssText = `min-height: ${Math.min(currentHeight, maxHeight)}px;`;\n                });\n            } else {\n                wrapPanel.style.cssText = `max-height: ${maxHeight}px;`;\n                wrapPanel.scrollTop = prevScrollTop;\n            }\n        } else {\n            if (isDeleting) {\n                wrapPanel.style.cssText = prevCSSText;\n                wrapPanel.scrollTop = prevScrollTop;\n            } else {\n                this.searchInputRef.current.scrollIntoView({ behavior: 'smooth' });\n            }\n        }\n    }\n\n    animateItems(prevOffsets) {\n        if (!prevOffsets) return;\n\n        const doubleTransform = new Map();\n        for (let key of this.itemsRef.keys()) {\n            const el = this.itemsRef.get(key);\n            if (el) {\n                const currentOffset = el.getOffset();\n                const prevOffset = prevOffsets.has(key) ? prevOffsets.get(key) : null;\n                if (prevOffset) {\n                    if (prevOffset.left < currentOffset.left) {\n                        doubleTransform.set(el, { prevOffset, currentOffset });\n                    }\n\n                    const transform = `transform: translate(${prevOffset.left - currentOffset.left}px, ${prevOffset.top - currentOffset.top}px)`;\n                    el.setStyleCSSText(transform);\n                }\n            }\n        }\n\n        requestAnimationFrame(() => {\n            for (let key of this.itemsRef.keys()) {\n                const el = this.itemsRef.get(key);\n                if (el) {\n                    let transition = `transition: transform 0.25s ease`;\n                    if (doubleTransform.has(el)) {\n                        const { prevOffset, currentOffset } = doubleTransform.get(el);\n                        transition = `transform: translate(${prevOffset.left - currentOffset.left - prevOffset.width}px, ${prevOffset.top - currentOffset.top}px);`\n                            + 'transition: transform 0.1s ease;'\n                    }\n\n                    el.setStyleCSSText(transition);\n                }\n            }\n\n            if (!doubleTransform.size) return;\n\n            setTimeout(() => {\n                for (let el of doubleTransform.keys()) {\n                    const { currentOffset } = doubleTransform.get(el);\n                    const transition = `transform: translate(${currentOffset.width}px, 0);`\n                        + 'transition: transform 0s ease;';\n\n                    el.setStyleCSSText(transition);\n                }\n\n                requestAnimationFrame(() => {\n                    for (let el of doubleTransform.keys()) {\n                        const transition = 'transition: transform 0.15s ease';\n\n                        el.setStyleCSSText(transition);\n                    }\n                });\n\n            }, 100);\n        });\n    }\n\n    handleBackspace = () => {\n        const { filter, mode } = this.props;\n        const { focusedItem } = this.state;\n        if (!filter) return;\n\n        if (focusedItem) {\n            switch (focusedItem) {\n                case 'include_contacts':\n                case 'include_non_contacts':\n                case 'include_bots':\n                case 'include_groups':\n                case 'include_channels':\n                case 'exclude_muted':\n                case 'exclude_read':\n                case 'exclude_archived': {\n                    this.handleChange(focusedItem);\n\n                    this.setState({\n                        focusedItem: null\n                    });\n                    break;\n                }\n                default: {\n                    this.handleChatChange(focusedItem);\n\n                    this.setState({\n                        focusedItem: null\n                    });\n                    break;\n                }\n            }\n            return;\n        }\n\n        const include = mode === 'include';\n        if (include) {\n            const {\n                include_contacts,\n                include_non_contacts,\n                include_bots,\n                include_groups,\n                include_channels,\n                included_chat_ids\n            } = filter;\n\n            if (included_chat_ids.length > 0) {\n                const lastItem = included_chat_ids[included_chat_ids.length - 1];\n                if (!lastItem) return;\n\n                this.setState({\n                    focusedItem: lastItem\n                });\n            } else if (include_bots) {\n                this.setState({\n                    focusedItem: 'include_bots'\n                });\n            } else if (include_channels) {\n                this.setState({\n                    focusedItem: 'include_channels'\n                });\n            } else if (include_groups) {\n                this.setState({\n                    focusedItem: 'include_groups'\n                });\n            } else if (include_non_contacts) {\n                this.setState({\n                    focusedItem: 'include_non_contacts'\n                });\n            } else if (include_contacts) {\n                this.setState({\n                    focusedItem: 'include_contacts'\n                });\n            }\n        } else {\n            const {\n                exclude_muted,\n                exclude_read,\n                exclude_archived,\n                excluded_chat_ids\n            } = filter;\n\n            if (excluded_chat_ids.length > 0) {\n                const lastItem = excluded_chat_ids[excluded_chat_ids.length - 1];\n                if (!lastItem) return;\n\n                this.setState({\n                    focusedItem: lastItem\n                });\n            } else if (exclude_archived) {\n                this.setState({\n                    focusedItem: 'exclude_archived'\n                });\n            } else if (exclude_read) {\n                this.setState({\n                    focusedItem: 'exclude_read'\n                });\n            } else if (exclude_muted) {\n                this.setState({\n                    focusedItem: 'exclude_muted'\n                });\n            }\n        }\n    };\n\n    handleChange = (type, value) => {\n        const { onChange } = this.props;\n\n        onChange(type, value);\n\n        this.setState({\n            focusedItem: null\n        });\n    };\n\n    handleSearch = async text => {\n        const query = text.trim();\n        if (!query) {\n            this.setState({\n                searchItems: null,\n                focusedItem: null\n            });\n            return;\n        }\n\n        const promises = [];\n        promises.push(\n            TdLibController.send({\n                '@type': 'searchChats',\n                query,\n                limit: 100\n            })\n        );\n        const [searchItems] = await Promise.all(promises);\n\n        const store = FileStore.getStore();\n        loadChatsContent(store, searchItems.chat_ids);\n\n        this.setState({ searchItems, focusedItem: null });\n    };\n\n    render() {\n        const { t, filter, chats, limit, mode, onClose, onChange, onScroll } = this.props;\n        const { focusedItem, searchItems } = this.state;\n\n        const {\n            include_contacts,\n            include_non_contacts,\n            include_bots,\n            include_groups,\n            include_channels,\n            included_chat_ids\n        } = filter;\n\n        const {\n            exclude_muted,\n            exclude_read,\n            exclude_archived,\n            excluded_chat_ids\n        } = filter;\n\n        const include = mode === 'include';\n        const items = include ? included_chat_ids : excluded_chat_ids;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{mode === 'include' ? t('FilterInclude') : t('FilterExclude')}</span>\n                    </div>\n                </div>\n                <div ref={this.wrapPanelRef} className='animated-wrap-panel'>\n                    { include && (\n                        <>\n                            {include_contacts && <Chip onClick={() => this.handleChange('include_contacts')} ref={el => { this.itemsRef.set('include_contacts', el); }} selected={focusedItem === 'include_contacts'} icon={<ContactsIcon viewBox='0 0 36 36'/>} text={t('FilterContacts')}/>}\n                            {include_non_contacts && <Chip onClick={() => this.handleChange('include_non_contacts')} ref={el => { this.itemsRef.set('include_non_contacts', el); }} selected={focusedItem === 'include_non_contacts'} icon={<NonContactsIcon />} text={t('FilterNonContacts')}/>}\n                            {include_groups && <Chip onClick={() => this.handleChange('include_groups')} ref={el => { this.itemsRef.set('include_groups', el); }} selected={focusedItem === 'include_groups'} icon={<GroupsIcon viewBox='0 0 36 36'/>} text={t('FilterGroups')}/>}\n                            {include_channels && <Chip onClick={() => this.handleChange('include_channels')} ref={el => { this.itemsRef.set('include_channels', el); }} selected={focusedItem === 'include_channels'} icon={<ChannelsIcon viewBox='0 0 36 36'/>} text={t('FilterChannels')}/>}\n                            {include_bots && <Chip onClick={() => this.handleChange('include_bots')} ref={el => { this.itemsRef.set('include_bots', el); }} selected={focusedItem === 'include_bots'} icon={<BotsIcon />} text={t('FilterBots')}/>}\n                        </>\n                    )}\n                    { !include && (\n                        <>\n                            {exclude_muted && <Chip onClick={() => this.handleChange('exclude_muted')} ref={el => { this.itemsRef.set('exclude_muted', el); }} selected={focusedItem === 'exclude_muted'} icon={<GroupsIcon viewBox='0 0 36 36'/>} text={t('FilterMuted')}/>}\n                            {exclude_read && <Chip onClick={() => this.handleChange('exclude_read')} ref={el => { this.itemsRef.set('exclude_read', el); }} selected={focusedItem === 'exclude_read'} icon={<ChannelsIcon viewBox='0 0 36 36'/>} text={t('FilterRead')}/>}\n                            {exclude_archived && <Chip onClick={() => this.handleChange('exclude_archived')} ref={el => { this.itemsRef.set('exclude_archived', el); }} selected={focusedItem === 'exclude_archived'} icon={<BotsIcon />} text={t('FilterArchived')}/>}\n                        </>\n                    )}\n                    {items.map(x => <ChatChip selected={focusedItem === x} ref={el => { this.itemsRef.set(x, el); }} key={x} chatId={x} onClick={() => this.handleChatChange(x)}/>)}\n                    <SearchInput inputRef={this.searchInputRef} hint={t('Search')} onClose={this.handleSearchClose} onChange={this.handleSearch} onBackspace={this.handleBackspace} />\n                </div>\n                <div className='sidebar-page-top-divider' style={{ zIndex: 1 }}/>\n                <div ref={this.scrollRef} className='sidebar-page-content' style={{ marginTop: -3, position: 'relative', height: '100%' }} onScroll={onScroll}>\n                    <SectionHeader>{t('FilterChatTypes')}</SectionHeader>\n                    {include && (\n                        <>\n                            <FilterText onClick={() => this.handleChange('include_contacts')} checked={include_contacts} icon={<ContactsIcon className='filter-text-subtle-icon' viewBox='0 0 36 36'/>} text={t('FilterContacts')} />\n                            <FilterText onClick={() => this.handleChange('include_non_contacts')} checked={include_non_contacts} icon={<NonContactsIcon className='filter-text-subtle-icon'/>} text={t('FilterNonContacts')} />\n                            <FilterText onClick={() => this.handleChange('include_groups')} checked={include_groups} icon={<GroupsIcon className='filter-text-subtle-icon' viewBox='0 0 36 36'/>} text={t('FilterGroups')} />\n                            <FilterText onClick={() => this.handleChange('include_channels')} checked={include_channels} icon={<ChannelsIcon className='filter-text-subtle-icon' viewBox='0 0 36 36'/>} text={t('FilterChannels')} />\n                            <FilterText onClick={() => this.handleChange('include_bots')} checked={include_bots} icon={<BotsIcon className='filter-text-subtle-icon'/>} text={t('FilterBots')} />\n                        </>\n                    )}\n                    {!include && (\n                        <>\n                            <FilterText onClick={() => this.handleChange('exclude_muted')} checked={exclude_muted} icon={<MutedIcon className='filter-text-subtle-icon'/>} text={t('FilterMuted')} />\n                            <FilterText onClick={() => this.handleChange('exclude_read')} checked={exclude_read} icon={<ReadIcon className='filter-text-subtle-icon'/>} text={t('FilterRead')} />\n                            <FilterText onClick={() => this.handleChange('exclude_archived')} checked={exclude_archived} icon={<ArchivedIcon className='filter-text-subtle-icon'/>} text={t('FilterArchived')} />\n                        </>\n                    )}\n                    { chats && chats.length > 0 && (\n                        <>\n                            <div className='sidebar-page-section-divider' style={{ margin: '8px -8px' }}/>\n                            <SectionHeader>{t('FilterChats')}</SectionHeader>\n                            { (chats || []).slice(0, limit).map(x => <FilterChat type={true} onClick={() => this.handleChatChange(x)} key={x} chatId={x} checked={mode === 'include' ? included_chat_ids.includes(x) : excluded_chat_ids.includes(x)}/>) }\n                        </>\n                    )}\n                    { searchItems && (\n                        <div className='edit-filter-chats-search'>\n                            { searchItems.chat_ids.map(x => <FilterChat type={true} onClick={() => this.handleChatChange(x, true)} key={x} chatId={x} checked={mode === 'include' ? included_chat_ids.includes(x) : excluded_chat_ids.includes(x)}/>) }\n                        </div>\n                    )}\n                </div>\n            </>\n        );\n    }\n}\n\nEditFilterChats.propTypes = {\n    filter: PropTypes.object,\n    chats: PropTypes.array,\n    mode: PropTypes.string,\n    onChange: PropTypes.func,\n    onScroll: PropTypes.func\n};\n\nexport default withTranslation()(EditFilterChats);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from '../../../Utils/HOC';\nimport { withSnackbar } from 'notistack';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport TextField from '@material-ui/core/TextField';\nimport AddIcon from '../../../Assets/Icons/Add';\nimport CloseIcon from '../../../Assets/Icons/Close';\nimport ContactsIcon from '../../../Assets/Icons/NewPrivate';\nimport NonContactsIcon from '../../../Assets/Icons/NonContacts';\nimport GroupsIcon from '../../../Assets/Icons/NewGroup';\nimport ChannelsIcon from '../../../Assets/Icons/NewChannel';\nimport MutedIcon from '../../../Assets/Icons/Mute';\nimport ReadIcon from '../../../Assets/Icons/ReadChats';\nimport ArchivedIcon from '../../../Assets/Icons/Archive';\nimport BotsIcon from '../../../Assets/Icons/Bots';\nimport RemoveIcon from '@material-ui/icons/Remove';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport DoneIcon from '../../../Assets/Icons/Done';\nimport EditFilterChats from './EditFilterChats';\nimport FilterChat from '../../Tile/FilterChat';\nimport FilterText from '../../Tile/FilterText';\nimport SectionHeader from '../SectionHeader';\nimport SidebarPage from '../SidebarPage';\nimport { isFilterValid } from '../../../Utils/Filter';\nimport { CHAT_SLICE_LIMIT, FILTER_TITLE_MAX_LENGTH, NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../../../Constants';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './CreateFilter.css';\n\nconst RLottie = React.lazy(() => import('../../Viewer/RLottie'));\n\nclass CreateFilter extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.titleRef = React.createRef();\n        this.lottieRef = React.createRef();\n\n        this.state = {\n            prevFilterId: -1,\n            data: null,\n            openFilterChats: false,\n            mode: null,\n            title: '',\n            error: false,\n            shook: false,\n            chats: [],\n            limit: 0\n        }\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { filter, filterId } = props;\n        const { prevFilterId } = state;\n\n        if (filter && prevFilterId !== filterId){\n            return {\n                prevFilterId: filterId,\n                editFilter: {...filter},\n                title: filter.title\n            }\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        this.loadAnimationData();\n    }\n\n    loadAnimationData = async () => {\n        const { closeData } = this.state;\n        if (closeData) return;\n\n        try {\n            const requests = [ fetch('data/Folders_2.json') ];\n\n            const results = await Promise.all(requests);\n\n            const [data] = await Promise.all(results.map(x => x.text()));\n\n            this.setState({ data });\n        } catch (error) {\n            console.error(error);\n        }\n    };\n\n    handleDone = () => {\n        const { onDone } = this.props;\n        const { editFilter } = this.state;\n\n        const title = this.titleRef.current.value.trim();\n        if (!title) {\n            this.titleRef.current.focus();\n            this.setState({\n                error: true\n            })\n            return;\n        } else {\n            this.setState({\n                error: false\n            })\n        }\n\n        editFilter.title = title;\n\n        if (!isFilterValid(editFilter)) {\n            this.handleScheduledAction('Please choose at least one chat for this folder.');\n            return;\n        }\n\n        onDone && onDone(editFilter);\n    };\n\n    handleAnimationClick = () => {\n        const lottie = this.lottieRef.current;\n        if (!lottie) return;\n        if (!lottie.isPaused) return;\n\n        lottie.play();\n    };\n\n    handleDeleteIncludeContacts = () => {\n        const { t } = this.props;\n        const { editFilter } = this.state;\n        if (!editFilter) return;\n\n        const newEditFilter = { ...editFilter, include_contacts: false };\n\n        this.setState({\n            editFilter: newEditFilter\n        })\n\n        const title = this.titleRef.current.value;\n        if (title === t('FilterContacts')){\n            this.setState({\n                title: ''\n            });\n        }\n    };\n\n    handleDeleteIncludeNonContacts = () => {\n        const { t } = this.props;\n        const { editFilter } = this.state;\n        if (!editFilter) return;\n\n        const newEditFilter = { ...editFilter, include_non_contacts: false };\n\n        this.setState({\n            editFilter: newEditFilter\n        });\n\n        const title = this.titleRef.current.value;\n        if (title === t('FilterNonContacts')){\n            this.setState({\n                title: ''\n            });\n        }\n    };\n\n    handleDeleteIncludeGroups = () => {\n        const { t } = this.props;\n        const { editFilter } = this.state;\n        if (!editFilter) return;\n\n        const newEditFilter = { ...editFilter, include_groups: false };\n\n        this.setState({\n            editFilter: newEditFilter\n        });\n\n        const title = this.titleRef.current.value;\n        if (title === t('FilterGroups')){\n            this.setState({\n                title: ''\n            });\n        }\n    };\n\n    handleDeleteIncludeChannels = () => {\n        const { t } = this.props;\n        const { editFilter } = this.state;\n        if (!editFilter) return;\n\n        const newEditFilter = { ...editFilter, include_channels: false };\n\n        this.setState({\n            editFilter: newEditFilter\n        });\n\n        const title = this.titleRef.current.value;\n        if (title === t('FilterChannels')){\n            this.setState({\n                title: ''\n            });\n        }\n    };\n\n    handleDeleteIncludeBots = () => {\n        const { t } = this.props;\n        const { editFilter } = this.state;\n        if (!editFilter) return;\n\n        const newEditFilter = { ...editFilter, include_bots: false };\n\n        this.setState({\n            editFilter: newEditFilter\n        });\n\n        const title = this.titleRef.current.value;\n        if (title === t('FilterBots')){\n            this.setState({\n                title: ''\n            });\n        }\n    };\n\n    handleDeleteIncludedChat = chatId => {\n        const { editFilter } = this.state;\n        if (!editFilter) return;\n\n        const newEditFilter = { ...editFilter, included_chat_ids: editFilter.included_chat_ids.filter(x => x !== chatId) };\n\n        this.setState({\n            editFilter: newEditFilter\n        })\n    };\n\n    handleDeleteExcludeMuted = () => {\n        const { editFilter } = this.state;\n        if (!editFilter) return;\n\n        const newEditFilter = { ...editFilter, exclude_muted: false };\n\n        this.setState({\n            editFilter: newEditFilter\n        })\n    };\n\n    handleDeleteExcludeRead = () => {\n        const { editFilter } = this.state;\n        if (!editFilter) return;\n\n        const newEditFilter = { ...editFilter, exclude_read: false };\n\n        this.setState({\n            editFilter: newEditFilter\n        })\n    };\n\n    handleDeleteExcludeArchived = () => {\n        const { editFilter } = this.state;\n        if (!editFilter) return;\n\n        const newEditFilter = { ...editFilter, exclude_archived: false };\n\n        this.setState({\n            editFilter: newEditFilter\n        })\n    };\n\n    handleDeleteExcludedChat = chatId => {\n        const { editFilter } = this.state;\n        if (!editFilter) return;\n\n        const newEditFilter = { ...editFilter, excluded_chat_ids: editFilter.excluded_chat_ids.filter(x => x !== chatId) };\n\n        this.setState({\n            editFilter: newEditFilter\n        })\n    };\n\n    handleOpenFilterChats = async mode => {\n        const result = await TdLibController.send({\n            '@type': 'getChats',\n            chat_list: { '@type': 'chatListMain' },\n            offset_order: '9223372036854775807',\n            offset_chat_id: 0,\n            limit: 1000\n        });\n\n        this.setState({\n            openFilterChats: true,\n            mode,\n            chats: result.chat_ids,\n            limit: CHAT_SLICE_LIMIT\n        })\n    };\n\n    setDefaultFilterTitle() {\n        const { t } = this.props;\n        const { editFilter } = this.state;\n\n        const title = this.titleRef.current.value;\n        if (!title) {\n            const {\n                include_contacts,\n                include_non_contacts,\n                include_bots,\n                include_groups,\n                include_channels,\n                included_chat_ids\n            } = editFilter;\n\n            const {\n                exclude_muted,\n                exclude_read,\n                exclude_archived,\n                excluded_chat_ids\n            } = editFilter;\n\n            if (!included_chat_ids.length) {\n                if (include_contacts && !include_non_contacts && !include_bots && !include_groups && !include_channels) {\n                    this.setState({\n                        title: t('FilterContacts')\n                    });\n                } else if (!include_contacts && include_non_contacts && !include_bots && !include_groups && !include_channels) {\n                    this.setState({\n                        title: t('FilterNonContacts')\n                    });\n                } else if (include_contacts && include_non_contacts && !include_bots && !include_groups && !include_channels) {\n                    this.setState({\n                        title: t('ChatHints')\n                    });\n                } else if (!include_contacts && !include_non_contacts && include_bots && !include_groups && !include_channels) {\n                    this.setState({\n                        title: t('FilterBots')\n                    });\n                } else if (!include_contacts && !include_non_contacts && !include_bots && include_groups && !include_channels) {\n                    this.setState({\n                        title: t('FilterGroups')\n                    });\n                } else if (!include_contacts && !include_non_contacts && !include_bots && !include_groups && include_channels) {\n                    this.setState({\n                        title: t('FilterChannels')\n                    });\n                }\n            }\n        }\n    }\n\n    handleCloseFilterChats = () => {\n\n        this.setDefaultFilterTitle();\n\n        this.setState({\n            openFilterChats: false,\n            mode: null\n        })\n    };\n\n    handleChange = (type, value) => {\n        const { editFilter } = this.state;\n        if (!editFilter) return;\n\n        let newEditFilter = null;\n        switch (type) {\n            case 'include_contacts': {\n                newEditFilter = { ...editFilter, include_contacts: !editFilter.include_contacts };\n                break;\n            }\n            case 'include_non_contacts': {\n                newEditFilter = { ...editFilter, include_non_contacts: !editFilter.include_non_contacts };\n                break;\n            }\n            case 'include_bots': {\n                newEditFilter = { ...editFilter, include_bots: !editFilter.include_bots };\n                break;\n            }\n            case 'include_groups': {\n                newEditFilter = { ...editFilter, include_groups: !editFilter.include_groups };\n                break;\n            }\n            case 'include_channels': {\n                newEditFilter = { ...editFilter, include_channels: !editFilter.include_channels };\n                break;\n            }\n            case 'included_chat_ids': {\n                let included, excluded;\n                if (editFilter.included_chat_ids.includes(value)) {\n                    included = editFilter.included_chat_ids.filter(x => x !== value);\n                    excluded = editFilter.excluded_chat_ids;\n                } else {\n                    included = [ ...editFilter.included_chat_ids, value ];\n                    excluded = editFilter.excluded_chat_ids.filter(x => x !== value);\n                }\n\n                newEditFilter = {\n                    ...editFilter,\n                    included_chat_ids: included,\n                    excluded_chat_ids: excluded\n                };\n                break;\n            }\n            case 'exclude_muted': {\n                newEditFilter = { ...editFilter, exclude_muted: !editFilter.exclude_muted };\n                break;\n            }\n            case 'exclude_read': {\n                newEditFilter = { ...editFilter, exclude_read: !editFilter.exclude_read };\n                break;\n            }\n            case 'exclude_archived': {\n                newEditFilter = { ...editFilter, exclude_archived: !editFilter.exclude_archived };\n                break;\n            }\n            case 'excluded_chat_ids': {\n                let included, excluded;\n                if (editFilter.excluded_chat_ids.includes(value)) {\n                    excluded = editFilter.excluded_chat_ids.filter(x => x !== value);\n                    included = editFilter.included_chat_ids;\n                } else {\n                    excluded = [ ...editFilter.excluded_chat_ids, value ];\n                    included = editFilter.included_chat_ids.filter(x => x !== value);\n                }\n\n                newEditFilter = {\n                    ...editFilter,\n                    included_chat_ids: included,\n                    excluded_chat_ids: excluded\n                };\n\n                break;\n            }\n        }\n\n        // console.log('[f] onChange', type, value, newEditFilter);\n        if (!newEditFilter) return;\n\n        this.setState({\n            editFilter: newEditFilter\n        })\n    };\n\n    handleTitleChange = () => {\n        const title = this.titleRef.current.value.substr(0, FILTER_TITLE_MAX_LENGTH);\n\n        this.setState({\n            title\n        });\n    }\n\n    handleScroll = event => {\n        const scroll = event.target;\n        if (scroll.scrollTop + scroll.offsetHeight >= scroll.scrollHeight) {\n            this.setState({\n                limit: this.state.limit + CHAT_SLICE_LIMIT\n            })\n        }\n    };\n\n    handleScheduledAction = message => {\n        const { enqueueSnackbar, closeSnackbar } = this.props;\n\n        const snackKey = enqueueSnackbar(message, {\n            autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\n            preventDuplicate: true,\n            action: [\n                <IconButton\n                    key='close'\n                    aria-label='Close'\n                    color='inherit'\n                    className='notification-close-button'\n                    onClick={() => closeSnackbar(snackKey)}>\n                    <CloseIcon />\n                </IconButton>\n            ]\n        });\n    };\n\n    render() {\n        const { t, filter, id, onClose } = this.props;\n        if (!filter) return null;\n\n        const { editFilter, data, openFilterChats, mode, chats, limit, title, error, shook } = this.state;\n\n        const {\n            include_contacts,\n            include_non_contacts,\n            include_bots,\n            include_groups,\n            include_channels,\n            included_chat_ids\n        } = editFilter;\n\n        const {\n            exclude_muted,\n            exclude_read,\n            exclude_archived,\n            excluded_chat_ids\n        } = editFilter;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{id >= 0 ? t('FilterEdit') : t('CreateNewFilter')}</span>\n                    </div>\n                    <IconButton className='header-right-button' color='primary' onClick={this.handleDone}>\n                        <DoneIcon />\n                    </IconButton>\n                </div>\n                <div className='sidebar-page-content'>\n                    <div className='filters-create-animation'>\n                        { data && (\n                            <React.Suspense fallback={null}>\n                                <RLottie\n                                    ref={this.lottieRef}\n                                    options={{\n                                        width: 80,\n                                        height: 80,\n                                        autoplay: true,\n                                        loop: false,\n                                        fileId: 'createFilter',\n                                        stringData: data\n                                    }}\n                                    onClick={this.handleAnimationClick}\n                                />\n                            </React.Suspense>\n                        )}\n                    </div>\n\n\n                    <div className='create-filter-title'>\n                        <TextField\n                            inputRef={this.titleRef}\n                            className='edit-profile-input'\n                            variant='outlined'\n                            fullWidth\n                            label={t('FilterNameHint')}\n                            value={title}\n                            error={error}\n                            onChange={this.handleTitleChange}\n                        />\n                    </div>\n                    <div className='sidebar-page-section'>\n                        <SectionHeader>{t('FilterInclude')}</SectionHeader>\n                        <FilterText className='create-filter-add-chats' icon={<AddIcon/>} text={t('FilterAddChats')} onClick={() => this.handleOpenFilterChats('include')}/>\n                        {include_contacts && <FilterText onDelete={this.handleDeleteIncludeContacts} icon={<ContactsIcon className='filter-text-subtle-icon' viewBox='0 0 36 36'/>} text={t('FilterContacts')} />}\n                        {include_non_contacts && <FilterText onDelete={this.handleDeleteIncludeNonContacts} icon={<NonContactsIcon className='filter-text-subtle-icon'/>} text={t('FilterNonContacts')} />}\n                        {include_groups && <FilterText onDelete={this.handleDeleteIncludeGroups} icon={<GroupsIcon className='filter-text-subtle-icon' viewBox='0 0 36 36'/>} text={t('FilterGroups')} />}\n                        {include_channels && <FilterText onDelete={this.handleDeleteIncludeChannels} icon={<ChannelsIcon className='filter-text-subtle-icon' viewBox='0 0 36 36'/>} text={t('FilterChannels')} />}\n                        {include_bots && <FilterText onDelete={this.handleDeleteIncludeBots} icon={<BotsIcon className='filter-text-subtle-icon'/>} text={t('FilterBots')} />}\n                        { included_chat_ids.map(x => (\n                            <FilterChat key={x} chatId={x} onDelete={this.handleDeleteIncludedChat}/>\n                        ))}\n                    </div>\n                    <div className='sidebar-page-section'>\n                        <SectionHeader>{t('FilterExclude')}</SectionHeader>\n                        <FilterText className='create-filter-remove-chats' icon={<RemoveIcon/>} text={t('FilterRemoveChats')} onClick={() => this.handleOpenFilterChats('exclude')}/>\n                        {exclude_muted && <FilterText onDelete={this.handleDeleteExcludeMuted} icon={<MutedIcon className='filter-text-subtle-icon'/>} text={t('FilterMuted')} />}\n                        {exclude_read && <FilterText onDelete={this.handleDeleteExcludeRead} icon={<ReadIcon className='filter-text-subtle-icon'/>} text={t('FilterRead')} />}\n                        {exclude_archived && <FilterText onDelete={this.handleDeleteExcludeArchived} icon={<ArchivedIcon className='filter-text-subtle-icon'/>} text={t('FilterArchived')} />}\n                        { excluded_chat_ids.map(x => (\n                            <FilterChat key={x} chatId={x} onDelete={this.handleDeleteExcludedChat}/>\n                        ))}\n                    </div>\n                </div>\n                <SidebarPage open={openFilterChats} onClose={this.handleCloseFilterChats}>\n                    <EditFilterChats filter={editFilter} mode={mode} chats={chats} limit={limit} onChange={this.handleChange} onScroll={this.handleScroll}/>\n                </SidebarPage>\n            </>\n        );\n    }\n\n}\n\nCreateFilter.propTypes = {\n    filter: PropTypes.object,\n    id: PropTypes.number,\n    onDone: PropTypes.func,\n    onClose: PropTypes.func\n};\n\nconst enhance = compose(\n    withTranslation(),\n    withSnackbar,\n);\n\nexport default enhance(CreateFilter);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { getChatOrder } from './Chat';\n\nexport function isFilterValid(filter) {\n    if (!filter) return false;\n\n    const {\n        include_contacts,\n        include_non_contacts,\n        include_bots,\n        include_groups,\n        include_channels,\n        included_chat_ids,\n        title\n    } = filter;\n\n    if (!title) return false;\n\n    return include_contacts || include_non_contacts || include_bots || include_groups || include_channels || included_chat_ids.length > 0;\n}\n\nexport function getFilterSubtitle(t, filterId, chats) {\n    if (!chats) return ' ';\n\n    let count = 0;\n    for (let i = 0; i < chats.chat_ids.length; i++) {\n        if (getChatOrder(chats.chat_ids[i], { '@type': 'chatListFilter', chat_filter_id: filterId }) !== '0') {\n            count++;\n        }\n    }\n\n    if (!count) {\n        return t('FilterNoChats');\n    }\n\n    return count === 1 ? '1 chat' : `${count} chats`;\n}","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport Popover from '@material-ui/core/Popover';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport { getFilterSubtitle } from '../../Utils/Filter';\nimport { modalManager } from '../../Utils/Modal';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Filter.css';\n\nclass Filter extends React.Component {\n\n    state = {\n        dialog: false,\n        contextMenu: false,\n        left: 0,\n        top: 0\n    };\n\n    handleDelete = () => {\n        this.handleCloseContextMenu();\n        this.handleOpenDialog();\n    };\n\n    handleOpenDialog = () => {\n        this.setState({\n            dialog: true\n        })\n    };\n\n    handleCloseDialog = () => {\n        this.setState({\n            dialog: false\n        })\n    };\n\n    handleDeleteCancel = () => {\n        this.handleCloseDialog();\n    };\n\n    handleDeleteConfirm = () => {\n        const { info } = this.props;\n        if (!info) return;\n\n        this.handleCloseDialog();\n\n        TdLibController.send({\n            '@type': 'deleteChatFilter',\n            chat_filter_id: info.id\n        });\n    };\n\n    handleOpenContextMenu = event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        this.setState({\n            contextMenu: true,\n            left: event.clientX,\n            top: event.clientY\n        });\n    };\n\n    handleCloseContextMenu = () => {\n        this.setState({\n            contextMenu: false,\n            left: 0,\n            top: 0\n        });\n    };\n\n    render() {\n        const { t, info, onEdit, chats } = this.props;\n        if (!info) return null;\n\n        const { dialog, contextMenu, top, left } = this.state;\n\n        const { title } = info;\n        const subtitle = getFilterSubtitle(t, info.id, chats);\n\n        return (\n            <>\n                <ListItem className='settings-list-item2' role={undefined} button onClick={onEdit} onContextMenu={this.handleOpenContextMenu}>\n                    <ListItemText\n                        className='settings-list-item-text2'\n                        primary={title}\n                        secondary={subtitle}\n                    />\n                </ListItem>\n                <Popover\n                    open={contextMenu}\n                    onClose={this.handleCloseContextMenu}\n                    anchorReference='anchorPosition'\n                    anchorPosition={{ top, left }}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'left'\n                    }}\n                    onMouseDown={e => e.stopPropagation()}>\n                    <MenuList onClick={e => e.stopPropagation()}>\n                        <MenuItem onClick={this.handleDelete}>\n                            <ListItemIcon>\n                                <DeleteIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Delete')} />\n                        </MenuItem>\n                    </MenuList>\n                </Popover>\n                <Dialog\n                    manager={modalManager}\n                    transitionDuration={0}\n                    open={dialog}\n                    onClose={this.handleCancel}\n                    aria-labelledby='delete-dialog-title'>\n                    <DialogTitle id='delete-dialog-title'>{t('Confirm')}</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText>\n                            {t('FilterDeleteAlert')}\n                        </DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleDeleteCancel} color='primary'>\n                            {t('Cancel')}\n                        </Button>\n                        <Button onClick={this.handleDeleteConfirm} color='primary'>\n                            {t('Ok')}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </>\n        );\n    }\n}\n\nFilter.propTypes = {\n    info: PropTypes.object.isRequired,\n    chats: PropTypes.object,\n    onEdit: PropTypes.func.isRequired\n};\n\nexport default withTranslation()(Filter);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './RecommendedFilter.css';\n\nclass RecommendedFilter extends React.Component {\n\n    handleAdd = () => {\n        const { filter: recommendedFilter } = this.props;\n        if (!recommendedFilter) return;\n\n        const { filter } = recommendedFilter;\n\n        TdLibController.send({\n            '@type': 'createChatFilter',\n            filter\n        });\n    };\n\n    render() {\n        const { t, filter: recommendedFilter } = this.props;\n        if (!recommendedFilter) return null;\n\n        const { filter, description } = recommendedFilter;\n\n        return (\n            <ListItem\n                className='settings-list-item2'\n                role={undefined}\n                button>\n                <ListItemText\n                    className='settings-list-item-text'\n                    primary={filter.title}\n                    secondary={description}\n                />\n                <Button className='recommended-filter-add' variant='contained' disableElevation color='primary' onClick={this.handleAdd}>\n                    {t('Add')}\n                </Button>\n            </ListItem>\n        );\n    }\n\n}\n\nRecommendedFilter.propTypes = {\n    filter: PropTypes.object.isRequired\n};\n\nexport default withTranslation()(RecommendedFilter);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from '../../../Utils/HOC';\nimport { withSnackbar } from 'notistack';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport AddIcon from '../../../Assets/Icons/Add';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport CloseIcon from '../../../Assets/Icons/Close';\nimport CreateFilter from './CreateFilter';\nimport Filter from '../../Tile/Filter';\nimport RecommendedFilter from '../../Tile/RecommendedFilter';\nimport SectionHeader from '../SectionHeader';\nimport SidebarPage from '../SidebarPage';\nimport { FILTER_COUNT_MAX, NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../../../Constants';\nimport FilterStore from '../../../Stores/FilterStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './Filters.css';\n\nconst RLottie = React.lazy(() => import('../../Viewer/RLottie'));\n\nclass Filters extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.lottieRef = React.createRef();\n\n        this.state = {\n            openFilter: false,\n            filterId: -1,\n            filter: null,\n            editFilter: null,\n            recommendedFilters: null,\n            chats: null,\n            filtersMap: new Map()\n        };\n    }\n\n    componentDidMount() {\n        this.loadAnimationData();\n        this.loadData();\n\n        FilterStore.on('updateChatFilters', this.onUpdateChatFilters);\n    }\n\n    componentWillUnmount() {\n        FilterStore.off('updateChatFilters', this.onUpdateChatFilters);\n    }\n\n    onUpdateChatFilters = update => {\n        setTimeout(() => {\n            this.loadData();\n        }, 100);\n    };\n\n    async loadData() {\n        const chats = await TdLibController.send({\n            '@type': 'getChats',\n            chat_list: { '@type': 'chatListMain' },\n            offset_chat_id: 0,\n            offset_order: '9223372036854775807',\n            limit: 1000\n        });\n\n        const { filters: filterInfo } = FilterStore;\n        const promises = [];\n        for (let i = 0; filterInfo && i < filterInfo.length; i++) {\n            promises.push(TdLibController.send({\n                '@type': 'getChatFilter',\n                chat_filter_id: filterInfo[i].id\n            }).catch(e => null));\n        }\n        const filters = await Promise.all(promises);\n\n        const filtersMap = new Map();\n        for (let i = 0; filterInfo && i < filterInfo.length; i++) {\n            filtersMap.set(filterInfo[i].id, filters[i]);\n        }\n\n        const recommendedFilters = await TdLibController.send({\n            '@type': 'getRecommendedChatFilters'\n        });\n\n        this.setState({\n            chats,\n            filtersMap,\n            recommendedFilters\n        });\n    }\n\n    loadAnimationData = async () => {\n        const { closeData } = this.state;\n        if (closeData) return;\n\n        try {\n            const requests = [\n                fetch('data/Folders_1.json'),\n                fetch('data/Folders_2.json'),\n            ];\n\n            const results = await Promise.all(requests);\n\n            const [data] = await Promise.all(results.map(x => x.text()));\n\n            this.setState({ data });\n        } catch (error) {\n            console.error(error);\n        }\n    };\n\n    handleCreateFilter = () => {\n        const { t } = this.props;\n        const { filters } = FilterStore;\n        if (filters.length >= FILTER_COUNT_MAX) {\n            this.handleScheduledAction(t('FilterCreateError'));\n            return;\n        }\n\n        const filter = {\n            '@type': 'chatFiler',\n            title: '',\n            icon_name: '',\n            pinned_chat_ids: [],\n            included_chat_ids: [],\n            excluded_chat_ids: [],\n            exclude_muted: false,\n            exclude_read: false,\n            exclude_archived: false,\n            include_contacts: false,\n            include_non_contacts: false,\n            include_bots: false,\n            include_groups: false,\n            include_channels: false\n        };\n\n        this.setState({\n            openFilter: true,\n            filterId: -1,\n            filter\n        });\n    };\n\n    handleCloseFilter = () => {\n        this.setState({\n            openFilter: false,\n            filterId: -1,\n            filter: null\n        })\n    };\n\n    handleEditFilter = async info => {\n        const filter = await TdLibController.send({\n            '@type': 'getChatFilter',\n            chat_filter_id: info.id\n        });\n\n        if (!filter) return;\n\n        this.setState({\n            openFilter: true,\n            filterId: info.id,\n            filter\n        })\n    };\n\n    handleDone = filter => {\n        const { filterId } = this.state;\n\n        this.handleCloseFilter();\n        if (!filter) return;\n\n        if (filterId !== -1) {\n            TdLibController.send({\n                '@type': 'editChatFilter',\n                chat_filter_id: filterId,\n                filter\n            });\n        } else {\n            TdLibController.send({\n                '@type': 'createChatFilter',\n                filter\n            });\n        }\n    };\n\n    handleAnimationClick = () => {\n        const lottie = this.lottieRef.current;\n        if (!lottie) return;\n        if (!lottie.isPaused) return;\n\n        lottie.play();\n    };\n\n    handleScheduledAction = message => {\n        const { enqueueSnackbar, closeSnackbar } = this.props;\n\n        const snackKey = enqueueSnackbar(message, {\n            autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\n            preventDuplicate: true,\n            action: [\n                <IconButton\n                    key='close'\n                    aria-label='Close'\n                    color='inherit'\n                    className='notification-close-button'\n                    onClick={() => closeSnackbar(snackKey)}>\n                    <CloseIcon />\n                </IconButton>\n            ]\n        });\n    };\n\n    render() {\n        const { t, onClose } = this.props;\n        const { recommendedFilters, openFilter, filter, filterId, data, chats, filtersMap } = this.state;\n        const { filters } = FilterStore;\n\n        const hasFilters = filters && filters.length > 0;\n        const hasRecommendedFilters = recommendedFilters\n            && recommendedFilters.chat_filters.length > 0\n            && (!filters || filters.length < FILTER_COUNT_MAX);\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('FilterAvailableTitle')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>\n                    <div className='sidebar-page-section filters-create'>\n                        <div className='filters-create-animation'>\n                            { data && (\n                                <React.Suspense fallback={null}>\n                                    <RLottie\n                                        ref={this.lottieRef}\n                                        options={{\n                                            width: 80,\n                                            height: 80,\n                                            autoplay: true,\n                                            loop: false,\n                                            fileId: 'filters',\n                                            stringData: data\n                                        }}\n                                        onClick={this.handleAnimationClick}\n                                    />\n                                </React.Suspense>\n                            )}\n                        </div>\n\n                        <div className='filters-create-hint'>{t('CreateNewFilterInfo')}</div>\n                        <Button className='filters-create-button' color='primary' variant='contained' disableElevation startIcon={<AddIcon/>} onClick={this.handleCreateFilter}>\n                            {t('CreateNewFilter')}\n                        </Button>\n                    </div>\n                    { hasFilters && (\n                        <>\n                            <div className='sidebar-page-section-divider' />\n                            <div className='sidebar-page-section'>\n                                <SectionHeader>{t('Filters')}</SectionHeader>\n                                {(filters || []).map(x => (<Filter key={x.id} info={x} filter={filtersMap.get(x.id)} chats={chats} onEdit={() => this.handleEditFilter(x)}/>))}\n                            </div>\n                        </>\n                    )}\n                    { hasRecommendedFilters && (\n                        <>\n                            <div className='sidebar-page-section-divider' />\n                            <div className='sidebar-page-section'>\n                                <SectionHeader>{t('FilterRecommended')}</SectionHeader>\n                                {recommendedFilters.chat_filters.map(x => (<RecommendedFilter key={x.filter.title} filter={x}/>))}\n                            </div>\n                        </>\n                    )}\n                </div>\n                <SidebarPage open={openFilter} onClose={this.handleCloseFilter}>\n                    <CreateFilter filter={filter} id={filterId} onDone={this.handleDone}/>\n                </SidebarPage>\n            </>\n        );\n    }\n}\n\nFilters.propTypes = {\n    onClose: PropTypes.func\n};\n\nconst enhance = compose(\n    withTranslation(),\n    withSnackbar,\n);\n\nexport default enhance(Filters);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M19.2869988,2.88316725 L19.4142136,3 L21,4.58578644 C21.7399408,5.3257272 21.778885,6.50121136 21.1168328,7.28699879 L21,7.41421356 L17.414,10.9992136 L18.2071068,11.7928932 C18.5976311,12.1834175 18.5976311,12.8165825 18.2071068,13.2071068 C17.8466228,13.5675907 17.2793918,13.5953203 16.8871006,13.2902954 L16.7928932,13.2071068 L16,12.4142136 L7.70710678,20.7071068 C7.55082647,20.8633871 7.34814508,20.9625983 7.13144398,20.9913276 L7,21 L4,21 C3.48716416,21 3.06449284,20.6139598 3.00672773,20.1166211 L3,20 L3,17 C3,16.7789863 3.07316447,16.565516 3.20608063,16.3919705 L3.29289322,16.2928932 L11.585,7.99921356 L10.7928932,7.20710678 C10.4023689,6.81658249 10.4023689,6.18341751 10.7928932,5.79289322 C11.1533772,5.43240926 11.7206082,5.40467972 12.1128994,5.70970461 L12.2071068,5.79289322 L13,6.58521356 L16.5857864,3 C17.3257272,2.26005924 18.5012114,2.22111499 19.2869988,2.88316725 Z M13,9.415 L5,17.414 L5,18.999 L6.585,18.999 L14.585,11 L13,9.415 Z M18,4.41421356 L14.414,7.99921356 L16,9.58521356 L19.5857864,6 L18,4.41421356 Z' />,\n    'Colorize'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { getSrc } from '../../Utils/File';\nimport FileStore from '../../Stores/FileStore';\nimport './Wallpaper.css';\nimport FileProgress from '../Viewer/FileProgress';\n\nclass Wallpaper extends React.Component {\n    state = {\n        loaded: false\n    };\n\n    componentDidMount() {\n        FileStore.on('clientUpdateDocumentThumbnailBlob', this.onClientUpdateDocumentThumbnailBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdateDocumentThumbnailBlob', this.onClientUpdateDocumentThumbnailBlob);\n    }\n\n    onClientUpdateDocumentThumbnailBlob = update => {\n        const { wallpaper } = this.props;\n        if (!wallpaper) return;\n\n        const { document } = wallpaper;\n        if (!document) return;\n\n        const { thumbnail } = document;\n        if (!thumbnail) return;\n\n        const { file } = thumbnail;\n        if (!file) return;\n\n        const { fileId } = update;\n\n        if (file.id !== fileId) {\n            return;\n        }\n\n        this.forceUpdate();\n    };\n\n    handleLoad = () => {\n        this.setState({ loaded: true });\n    };\n\n    handleClick = () => {\n        const { wallpaper, onClick } = this.props;\n\n        if (onClick) {\n            onClick(wallpaper);\n        }\n    };\n\n    render() {\n        const { wallpaper, isSelected } = this.props;\n        const { loaded  } = this.state;\n\n        const { document } = wallpaper;\n        const { minithumbnail, thumbnail } = document;\n\n        const miniSrc = minithumbnail ? 'data:image/jpeg;base64, ' + minithumbnail.data : null;\n        const thumbSrc = getSrc(thumbnail ? thumbnail.file : null);\n        const tileLoaded = thumbSrc && loaded;\n        const src = thumbSrc || miniSrc;\n\n        return (\n            <div className='shared-photo' onClick={this.handleClick}>\n                <div className='shared-photo-content' style={{ backgroundImage: `url(${thumbSrc || miniSrc})`, backgroundSize: 'cover', backgroundPosition: '50%' }}>\n                    {src !== thumbSrc && (\n                        <div className='shared-photo-main-content' style={{ backgroundImage: `url(${src})` }} />\n                    )}\n                </div>\n                { isSelected && <><div className='wallpaper-selected'/><div className='wallpaper-selected-inner'/></> }\n                { document && document.document && <FileProgress file={document.document} cancelButton={false}/> }\n            </div>\n        );\n    }\n\n}\n\nWallpaper.propTypes = {\n    wallpaper: PropTypes.object.isRequired,\n    isSelected: PropTypes.bool\n};\n\nexport default Wallpaper;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport Wallpaper from '../../Tile/Wallpaper';\nimport { getSrc, loadBackgroundContent, loadBackgroundsContent } from '../../../Utils/File';\nimport ChatStore from '../../../Stores/ChatStore';\nimport FileStore from '../../../Stores/FileStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './ChatBackground.css';\n\nclass ChatBackground extends React.Component {\n    state = {\n        selectedId: ChatStore.wallpaper ? ChatStore.wallpaper.id : -1\n    };\n\n    componentDidMount() {\n        this.loadContent();\n    }\n\n    loadContent() {\n        const { backgrounds } = this.props;\n        if (!backgrounds) return;\n\n        const store = FileStore.getStore();\n        loadBackgroundsContent(store, backgrounds.backgrounds);\n    }\n\n    handleClick = wallpaper => {\n        this.setState({\n            selectedId: wallpaper.id\n        });\n\n        const { document } = wallpaper;\n        if (!document) return;\n\n        const { thumbnail, document: file } = document;\n        if (!file) return;\n\n        const src = getSrc(file);\n        if (!src) {\n            const store = FileStore.getStore();\n            loadBackgroundContent(store, wallpaper, true);\n        }\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateChatBackground',\n            wallpaper\n        });\n    };\n\n    render() {\n        const { t, backgrounds, onClose } = this.props;\n        const { selectedId } = this.state;\n\n        const wallpapers = backgrounds.backgrounds.filter(x => x.type['@type'] === 'backgroundTypeWallpaper');\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('ChatBackground')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content shared-media-list shared-photos-list'>\n                    { wallpapers.map(x => (<Wallpaper key={x.id} wallpaper={x} isSelected={x.id === selectedId} onClick={this.handleClick}/>)) }\n                </div>\n            </>\n        );\n    }\n}\n\nChatBackground.propTypes = {\n    backgrounds: PropTypes.object\n};\n\nexport default withTranslation()(ChatBackground);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from '../../Utils/HOC';\nimport { withRestoreRef, withSaveRef } from '../../Utils/HOC';\nimport withTheme from '@material-ui/core/styles/withTheme';\nimport { withTranslation } from 'react-i18next';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport red from '@material-ui/core/colors/red';\nimport orange from '@material-ui/core/colors/orange';\nimport amber from '@material-ui/core/colors/amber';\nimport green from '@material-ui/core/colors/green';\nimport blue from '@material-ui/core/colors/blue';\nimport indigo from '@material-ui/core/colors/indigo';\nimport deepPurple from '@material-ui/core/colors/deepPurple';\nimport { modalManager } from '../../Utils/Modal';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport './ThemePicker.css';\n\nclass ThemePicker extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            open: false,\n            type: this.props.theme.palette.type,\n            color: this.getColorString(this.props.theme.palette.primary.main)\n        };\n    }\n\n    handleChange = event => {\n        this.setState({ type: event.target.value });\n\n        ApplicationStore.emit('clientUpdateThemeChanging', {\n            type: event.target.value,\n            primary: this.getColor(this.state.color)\n        });\n    };\n\n    handleAccentChange = event => {\n        this.setState({ color: event.target.value });\n\n        ApplicationStore.emit('clientUpdateThemeChanging', {\n            type: this.state.type,\n            primary: this.getColor(event.target.value)\n        });\n    };\n\n    getColorString = value => {\n        switch (value) {\n            case red['500']:\n                return 'red';\n            case orange['500']:\n                return 'orange';\n            case amber['500']:\n                return 'amber';\n            case green['500']:\n                return 'green';\n            case '#50A2E9':\n                return 'blue';\n            case indigo['500']:\n                return 'indigo';\n            case deepPurple['500']:\n                return 'deepPurple';\n        }\n\n        return null;\n    };\n\n    getColor = value => {\n        switch (value) {\n            case 'red':\n                return red;\n            case 'orange':\n                return orange;\n            case 'amber':\n                return amber;\n            case 'green':\n                return green;\n            case 'blue':\n                return { main: '#50A2E9' };\n            case 'indigo':\n                return indigo;\n            case 'deepPurple':\n                return deepPurple;\n        }\n\n        return null;\n    };\n\n    handleClose = () => {\n        this.setState({ open: false });\n    };\n\n    open = () => {\n        this.setState({ open: true });\n    };\n\n    render() {\n        const { t } = this.props;\n        const { type, color, open } = this.state;\n\n        return (\n            <Dialog\n                manager={modalManager}\n                transitionDuration={0}\n                open={open}\n                onClose={this.handleClose}\n                aria-labelledby='alert-dialog-title'\n                aria-describedby='alert-dialog-description'>\n                <DialogTitle id='alert-dialog-title'>{t('Appearance')}</DialogTitle>\n                <DialogContent>\n                    <FormControl component='fieldset' className='theme-picker-form'>\n                        <FormLabel focused component='legend'>\n                            {t('Theme')}\n                        </FormLabel>\n                        <RadioGroup\n                            aria-label='theme'\n                            name='theme1'\n                            className='theme-picker-group'\n                            value={type}\n                            onChange={this.handleChange}>\n                            <FormControlLabel value='light' control={<Radio color='primary' />} label='Light' />\n                            <FormControlLabel value='dark' control={<Radio color='primary' />} label='Dark' />\n                        </RadioGroup>\n                    </FormControl>\n                    <FormControl component='fieldset' className='theme-picker-form'>\n                        <FormLabel focused component='legend'>\n                            {t('Accent')}\n                        </FormLabel>\n                        <RadioGroup\n                            aria-label='accent'\n                            name='accent1'\n                            className='theme-picker-group'\n                            value={color}\n                            onChange={this.handleAccentChange}>\n                            <FormControlLabel\n                                value='red'\n                                control={\n                                    <Radio\n                                        color='primary'\n                                        classes={{\n                                            root: 'theme-picker-red'\n                                        }}\n                                    />\n                                }\n                                label='Red'\n                            />\n                            <FormControlLabel\n                                value='orange'\n                                control={\n                                    <Radio\n                                        color='primary'\n                                        classes={{\n                                            root: 'theme-picker-orange'\n                                        }}\n                                    />\n                                }\n                                label='Orange'\n                            />\n                            <FormControlLabel\n                                value='amber'\n                                control={\n                                    <Radio\n                                        color='primary'\n                                        classes={{\n                                            root: 'theme-picker-amber'\n                                        }}\n                                    />\n                                }\n                                label='Amber'\n                            />\n                            <FormControlLabel\n                                value='green'\n                                control={\n                                    <Radio\n                                        color='primary'\n                                        classes={{\n                                            root: 'theme-picker-green'\n                                        }}\n                                    />\n                                }\n                                label='Green'\n                            />\n                            <FormControlLabel\n                                value='blue'\n                                control={\n                                    <Radio\n                                        color='primary'\n                                        classes={{\n                                            root: 'theme-picker-blue'\n                                        }}\n                                    />\n                                }\n                                label='Blue'\n                            />\n                            <FormControlLabel\n                                value='indigo'\n                                control={\n                                    <Radio\n                                        color='primary'\n                                        classes={{\n                                            root: 'theme-picker-indigo'\n                                        }}\n                                    />\n                                }\n                                label='Indigo'\n                            />\n                            <FormControlLabel\n                                value='deepPurple'\n                                control={\n                                    <Radio\n                                        color='primary'\n                                        classes={{\n                                            root: 'theme-picker-deep-purple'\n                                        }}\n                                    />\n                                }\n                                label='Deep Purple'\n                            />\n                        </RadioGroup>\n                    </FormControl>\n                </DialogContent>\n            </Dialog>\n        );\n    }\n}\n\nThemePicker.propTypes = {};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTheme,\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(ThemePicker);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../../Utils/HOC';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport ColorizeIcon from '../../../Assets/Icons/Colorize';\nimport ChatBackground from './ChatBackground';\nimport SidebarPage from '../SidebarPage';\nimport SharedMediaIcon from '../../../Assets/Icons/SharedMedia';\nimport ThemePicker from '../ThemePicker';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './General.css';\n\nclass General extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            backgrounds: null,\n            openChatBackground: false\n        };\n\n        this.themePickerRef = React.createRef();\n    }\n\n    handleAppearance = () => {\n        this.themePickerRef.current.open();\n    };\n\n    componentDidMount() {\n        this.loadContent();\n    }\n\n    loadContent = () => {\n        TdLibController.send({\n            '@type': 'getBackgrounds',\n            for_dark_theme: false\n        }).then(backgrounds => this.setState({ backgrounds }));\n    };\n\n    openChatBackground = () => {\n        if (!this.state.backgrounds) return;\n\n        this.setState({\n            openChatBackground: true\n        });\n    };\n\n    closeChatBackground = () => {\n        this.setState({\n            openChatBackground: false\n        });\n    };\n\n    render() {\n        const { t, onClose } = this.props;\n        const { backgrounds, openChatBackground } = this.state;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('GeneralSettings')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>\n                    <div className='sidebar-page-section'>\n                        {/*<ListItem autoFocus={false} className='settings-list-item' button onClick={this.openChatBackground}>*/}\n                        {/*    <ListItemIcon>*/}\n                        {/*        <SharedMediaIcon />*/}\n                        {/*    </ListItemIcon>*/}\n                        {/*    <ListItemText primary={t('ChatBackground')} />*/}\n                        {/*</ListItem>*/}\n                        <ListItem autoFocus={false} className='settings-list-item' button onClick={this.handleAppearance}>\n                            <ListItemIcon>\n                                <ColorizeIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Appearance')} />\n                        </ListItem>\n                    </div>\n                </div>\n                <SidebarPage open={openChatBackground} onClose={this.closeChatBackground}>\n                    <ChatBackground backgrounds={backgrounds} />\n                </SidebarPage>\n                <ThemePicker ref={this.themePickerRef} />\n            </>\n        );\n    }\n}\n\nGeneral.propTypes = {\n    onClose: PropTypes.func\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(General);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../Utils/HOC';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Radio from '@material-ui/core/Radio';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport LocalizationStore from '../../Stores/LocalizationStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Language.css';\n\nclass Language extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { i18n } = props;\n        const language = i18n ? i18n.language : null;\n\n        this.state = {\n            language: language || 'en'\n        };\n    }\n\n    handleChange = language => {\n        this.setState({ language });\n\n        TdLibController.clientUpdate({ '@type': 'clientUpdateLanguageChange', language });\n    };\n\n    render() {\n        const { t, onClose } = this.props;\n        const { language } = this.state;\n        const info = LocalizationStore.info || { language_packs: [] };\n\n        const languages = info.language_packs.map(x => (\n            <div key={x.id} className='settings-item' onClick={() => this.handleChange(x.id)}>\n                <Radio\n                    color='primary'\n                    className='settings-item-control'\n                    checked={language === x.id}\n                    tabIndex={-1}\n                    inputProps={{ 'aria-labelledby': 'label-2' }}\n                />\n                <ListItemText id='label-2' primary={x.name} secondary={x.native_name} />\n            </div>\n        ));\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('Language')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>{languages}</div>\n            </>\n        );\n    }\n}\n\nLanguage.propTypes = {\n    onClose: PropTypes.func\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(Language);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../../Utils/HOC';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport SectionHeader from '../SectionHeader';\nimport NotificationStore from '../../../Stores/NotificationStore';\nimport OptionStore from '../../../Stores/OptionStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './Notifications.css';\n\nclass Notifications extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const contactJoinedOption = OptionStore.get('disable_contact_registered_notifications');\n\n        this.state = {\n            privateChatsSettings: NotificationStore.settings.get('notificationSettingsScopePrivateChats'),\n            groupChatsSettings: NotificationStore.settings.get('notificationSettingsScopeGroupChats'),\n            channelChatsSettings: NotificationStore.settings.get('notificationSettingsScopeChannelChats'),\n            contactJoined: !contactJoinedOption || !contactJoinedOption.value\n        };\n    }\n\n    componentWillUnmount() {\n        const { privateChatsSettings, groupChatsSettings, channelChatsSettings, contactJoined } = this.state;\n        this.setScopeNotificationSettings('notificationSettingsScopePrivateChats', privateChatsSettings);\n        this.setScopeNotificationSettings('notificationSettingsScopeGroupChats', groupChatsSettings);\n        this.setScopeNotificationSettings('notificationSettingsScopeChannelChats', channelChatsSettings);\n        this.setContactJoinedOption(contactJoined);\n    }\n\n    setContactJoinedOption() {\n        const { contactJoined } = this.state;\n\n        const contactJoinedOption = OptionStore.get('disable_contact_registered_notifications');\n        const oldContactJoined = !contactJoinedOption || !contactJoinedOption.value;\n        if (oldContactJoined === contactJoined) return;\n\n        TdLibController.send({\n            '@type': 'setOption',\n            name: 'disable_contact_registered_notifications',\n            value: {\n                '@type': 'optionValueBoolean',\n                value: !contactJoined\n            }\n        });\n    }\n\n    setScopeNotificationSettings(scope, settings) {\n        if (!scope) return;\n        if (!settings) return;\n        const oldSettings = NotificationStore.settings.get(scope);\n        if (!oldSettings) return;\n\n        const { mute_for, show_preview } = settings;\n        const { mute_for: oldMuteFor, show_preview: oldShowPreview } = oldSettings;\n        if (mute_for === oldMuteFor && show_preview === oldShowPreview) return;\n\n        TdLibController.send({\n            '@type': 'setScopeNotificationSettings',\n            scope: { '@type': scope },\n            notification_settings: settings\n        });\n    }\n\n    handleMuteFor = property => {\n        const settings = this.state[property];\n        if (!settings) return;\n\n        const { mute_for } = settings;\n        const newSettings = { ...settings, mute_for: mute_for === 0 ? 365 * 24 * 60 * 60 : 0 };\n\n        this.setState({ [property]: newSettings });\n    };\n\n    handleShowPreview = property => {\n        const settings = this.state[property];\n        if (!settings) return;\n\n        const { show_preview } = settings;\n        const newSettings = { ...settings, show_preview: !show_preview };\n\n        this.setState({ [property]: newSettings });\n    };\n\n    handleContactJoined = () => {\n        this.setState({ contactJoined: !this.state.contactJoined });\n    };\n\n    isEnabled(settings) {\n        if (!settings) return false;\n\n        const { mute_for } = settings;\n\n        return mute_for === 0;\n    }\n\n    showPreview(settings) {\n        if (!settings) return false;\n\n        const { show_preview } = settings;\n\n        return show_preview;\n    }\n\n    render() {\n        const { t, onClose } = this.props;\n        const { privateChatsSettings, groupChatsSettings, channelChatsSettings, contactJoined } = this.state;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('Notifications')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>\n                    <div className='sidebar-page-section'>\n                        <SectionHeader>{t('NotificationsPrivateChats')}</SectionHeader>\n                        <div className='settings-item' onClick={() => this.handleMuteFor('privateChatsSettings')}>\n                            <Checkbox\n                                color='primary'\n                                className='settings-item-control'\n                                checked={this.isEnabled(privateChatsSettings)}\n                                tabIndex={-1}\n                                inputProps={{ 'aria-labelledby': 'label-1' }}\n                            />\n                            <ListItemText\n                                id='label-1'\n                                primary={t('NotificationsForPrivateChats')}\n                                secondary={\n                                    this.isEnabled(privateChatsSettings)\n                                        ? t('NotificationsEnabled')\n                                        : t('NotificationsDisabled')\n                                }\n                            />\n                        </div>\n                        <div className='settings-item' onClick={() => this.handleShowPreview('privateChatsSettings')}>\n                            <Checkbox\n                                color='primary'\n                                className='settings-item-control'\n                                checked={this.showPreview(privateChatsSettings)}\n                                tabIndex={-1}\n                                inputProps={{ 'aria-labelledby': 'label-2' }}\n                            />\n                            <ListItemText\n                                id='label-2'\n                                primary={t('MessagePreview')}\n                                secondary={\n                                    this.showPreview(privateChatsSettings) ? t('PreviewEnabled') : t('PreviewDisabled')\n                                }\n                            />\n                        </div>\n                    </div>\n                    <div className='sidebar-page-section-divider' />\n                    <div className='sidebar-page-section'>\n                        <SectionHeader>{t('NotificationsGroups')}</SectionHeader>\n                        <div className='settings-item' onClick={() => this.handleMuteFor('groupChatsSettings')}>\n                            <Checkbox\n                                color='primary'\n                                className='settings-item-control'\n                                checked={this.isEnabled(groupChatsSettings)}\n                                tabIndex={-1}\n                                inputProps={{ 'aria-labelledby': 'label-1' }}\n                            />\n                            <ListItemText\n                                id='label-1'\n                                primary={t('NotificationsForGroups')}\n                                secondary={\n                                    this.isEnabled(groupChatsSettings)\n                                        ? t('NotificationsEnabled')\n                                        : t('NotificationsDisabled')\n                                }\n                            />\n                        </div>\n                        <div className='settings-item' onClick={() => this.handleShowPreview('groupChatsSettings')}>\n                            <Checkbox\n                                color='primary'\n                                className='settings-item-control'\n                                checked={this.showPreview(groupChatsSettings)}\n                                tabIndex={-1}\n                                inputProps={{ 'aria-labelledby': 'label-2' }}\n                            />\n                            <ListItemText\n                                id='label-2'\n                                primary={t('MessagePreview')}\n                                secondary={\n                                    this.showPreview(groupChatsSettings) ? t('PreviewEnabled') : t('PreviewDisabled')\n                                }\n                            />\n                        </div>\n                    </div>\n                    <div className='sidebar-page-section-divider' />\n                    <div className='sidebar-page-section'>\n                        <SectionHeader>{t('NotificationsChannels')}</SectionHeader>\n                        <div className='settings-item' onClick={() => this.handleMuteFor('channelChatsSettings')}>\n                            <Checkbox\n                                color='primary'\n                                className='settings-item-control'\n                                checked={this.isEnabled(channelChatsSettings)}\n                                tabIndex={-1}\n                                inputProps={{ 'aria-labelledby': 'label-1' }}\n                            />\n                            <ListItemText\n                                id='label-1'\n                                primary={t('NotificationsForChannels')}\n                                secondary={\n                                    this.isEnabled(channelChatsSettings)\n                                        ? t('NotificationsEnabled')\n                                        : t('NotificationsDisabled')\n                                }\n                            />\n                        </div>\n                        <div className='settings-item' onClick={() => this.handleShowPreview('channelChatsSettings')}>\n                            <Checkbox\n                                color='primary'\n                                className='settings-item-control'\n                                checked={this.showPreview(channelChatsSettings)}\n                                tabIndex={-1}\n                                inputProps={{ 'aria-labelledby': 'label-2' }}\n                            />\n                            <ListItemText\n                                id='label-2'\n                                primary={t('MessagePreview')}\n                                secondary={\n                                    this.showPreview(channelChatsSettings) ? t('PreviewEnabled') : t('PreviewDisabled')\n                                }\n                            />\n                        </div>\n                    </div>\n                    <div className='sidebar-page-section-divider' />\n                    <div className='sidebar-page-section'>\n                        <SectionHeader>{t('NotificationsOther')}</SectionHeader>\n                        <div className='settings-item' onClick={this.handleContactJoined}>\n                            <Checkbox\n                                color='primary'\n                                className='settings-item-control'\n                                checked={contactJoined}\n                                tabIndex={-1}\n                                inputProps={{ 'aria-labelledby': 'label-1' }}\n                            />\n                            <ListItemText\n                                id='label-1'\n                                primary={t('ContactJoined')}\n                                secondary={contactJoined ? t('ContactJoinedEnabled') : t('ContactJoinedDisabled')}\n                            />\n                        </div>\n                    </div>\n                </div>\n            </>\n        );\n    }\n}\n\nNotifications.propTypes = {\n    onClose: PropTypes.func\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(Notifications);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <g transform='translate(-1.000000, -1.000000)' fillRule='nonzero'>\n        <path d='M12,1 C18.0751322,1 23,5.92486775 23,12 C23,18.0751322 18.0751322,23 12,23 C5.92486775,23 1,18.0751322 1,12 C1,5.92486775 5.92486775,1 12,1 Z M12,3 C7.02943725,3 3,7.02943725 3,12 C3,16.9705627 7.02943725,21 12,21 C16.9705627,21 21,16.9705627 21,12 C21,7.02943725 16.9705627,3 12,3 Z M8,11 L16,11 C16.5522847,11 17,11.4477153 17,12 C17,12.5128358 16.6139598,12.9355072 16.1166211,12.9932723 L16,13 L8,13 C7.44771525,13 7,12.5522847 7,12 C7,11.4871642 7.38604019,11.0644928 7.88337887,11.0067277 L8,11 L16,11 L8,11 Z' />\n    </g>,\n    'Stop'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuList from '@material-ui/core/MenuList';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Popover from '@material-ui/core/Popover';\nimport StopIcon from '../../Assets/Icons/Stop';\nimport { getMessageDate } from '../../Utils/Chat';\nimport './Session.css';\n\nclass Session extends React.Component {\n    state = {\n        contextMenu: false,\n        left: 0,\n        top: 0\n    };\n\n    handleContextMenu = event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        const { session } = this.props;\n        if (!session) return;\n        if (session.is_current) return;\n\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        this.setState({\n            contextMenu: false,\n            left: 0,\n            top: 0\n        });\n    };\n\n    handleTerminate = event => {\n        this.handleCloseContextMenu(event);\n\n        const { onTerminate, session } = this.props;\n\n        onTerminate(session);\n    };\n\n    render() {\n        const { session, t } = this.props;\n        if (!session) return null;\n\n        const { left, top, contextMenu } = this.state;\n        const {\n            is_current,\n            application_name,\n            application_version,\n            device_model,\n            platform,\n            system_version,\n            ip,\n            region,\n            country,\n            last_active_date\n        } = session;\n        const showDate = !is_current;\n\n        return (\n            <>\n                <ListItem className='settings-list-item' button onContextMenu={this.handleContextMenu}>\n                    <div className='session'>\n                        <div className='session-title'>\n                            <div className='session-app'>{`${application_name} ${application_version}`}</div>\n                            {showDate && (\n                                <div className='session-date'>{getMessageDate({ date: last_active_date })}</div>\n                            )}\n                        </div>\n                        <div className='session-subtitle1'>{`${device_model}, ${platform} ${system_version}`}</div>\n                        <div className='session-subtitle2'>\n                            {`${ip} - `}\n                            {region && `${region}, `}\n                            {country && `${country}`}\n                        </div>\n                    </div>\n                </ListItem>\n                <Popover\n                    open={contextMenu}\n                    onClose={this.handleCloseContextMenu}\n                    anchorReference='anchorPosition'\n                    anchorPosition={{ top, left }}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'left'\n                    }}\n                    onMouseDown={e => e.stopPropagation()}>\n                    <MenuList onClick={e => e.stopPropagation()}>\n                        <MenuItem onClick={this.handleTerminate}>\n                            <ListItemIcon>\n                                <StopIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Terminate')} />\n                        </MenuItem>\n                    </MenuList>\n                </Popover>\n            </>\n        );\n    }\n}\n\nSession.propTypes = {\n    session: PropTypes.object.isRequired,\n    onTerminate: PropTypes.func.isRequired\n};\n\nexport default withTranslation()(Session);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../../Utils/HOC';\nimport Button from '@material-ui/core/Button';\nimport { Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle } from '@material-ui/core';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItem from '@material-ui/core/ListItem';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport Session from '../../Tile/Session';\nimport StopIcon from '../../../Assets/Icons/Stop';\nimport SectionHeader from '../SectionHeader';\nimport { modalManager } from '../../../Utils/Modal';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './ActiveSessions.css';\n\nclass ActiveSessions extends React.Component {\n    state = {\n        open: false,\n        openAll: false,\n        session: null\n    };\n\n    handleTerminate = session => {\n        this.setState({\n            open: true,\n            session\n        });\n    };\n\n    handleTerminateAllOther = () => {\n        this.setState({\n            openAll: true\n        });\n    };\n\n    handleCloseConfirmation = () => {\n        this.setState({\n            open: false,\n            session: null\n        });\n    };\n\n    handleDoneConfirmation = async () => {\n        const { sessions } = this.props;\n        const { session } = this.state;\n        if (!session) return;\n\n        this.setState({\n            open: false,\n            session: null\n        });\n\n        await TdLibController.send({\n            '@type': 'terminateSession',\n            session_id: session.id\n        });\n\n        sessions.sessions = sessions.sessions.filter(x => x.id !== session.id);\n        this.forceUpdate();\n    };\n\n    handleCloseAllConfirmation = () => {\n        this.setState({\n            openAll: false\n        });\n    };\n\n    handleDoneAllConfirmation = async () => {\n        const { sessions } = this.props;\n\n        this.setState({\n            openAll: false\n        });\n\n        await TdLibController.send({\n            '@type': 'terminateAllOtherSessions'\n        });\n\n        sessions.sessions = sessions.sessions.filter(x => !x.is_current);\n        this.forceUpdate();\n    };\n\n    render() {\n        const { t, sessions, onClose } = this.props;\n        const { open, openAll } = this.state;\n\n        const current = sessions.sessions.find(x => x.is_current);\n        const other = sessions.sessions.filter(x => !x.is_current);\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('SessionsTitle')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>\n                    {Boolean(current) && (\n                        <div className='sidebar-page-section'>\n                            <SectionHeader>{t('CurrentSession')}</SectionHeader>\n                            <Session session={current} onTerminate={this.handleTerminate} />\n                            {other.length > 0 && (\n                                <ListItem\n                                    className='settings-list-item'\n                                    button\n                                    disableRipple\n                                    onClick={this.handleTerminateAllOther}>\n                                    <ListItemIcon>\n                                        <StopIcon color='secondary' />\n                                    </ListItemIcon>\n                                    <ListItemText\n                                        primaryTypographyProps={{ color: 'secondary' }}\n                                        primary={t('TerminateAllSessions')}\n                                    />\n                                </ListItem>\n                            )}\n                        </div>\n                    )}\n                    {other.length > 0 && (\n                        <>\n                            <div className='sidebar-page-section-divider' />\n                            <div className='sidebar-page-section'>\n                                <SectionHeader>{t('OtherSessions')}</SectionHeader>\n                                {other.map(x => (\n                                    <Session key={x.id} session={x} onTerminate={this.handleTerminate} />\n                                ))}\n                            </div>\n                        </>\n                    )}\n                </div>\n                <Dialog\n                    manager={modalManager}\n                    transitionDuration={0}\n                    open={open}\n                    onClose={this.handleCloseConfirmation}\n                    aria-labelledby='form-dialog-title'>\n                    <DialogTitle id='form-dialog-title'>{t('Confirm')}</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText style={{ whiteSpace: 'pre-wrap' }}>\n                            {t('TerminateSessionText')}\n                        </DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleCloseConfirmation} color='primary'>\n                            {t('Cancel')}\n                        </Button>\n                        <Button onClick={this.handleDoneConfirmation} color='primary'>\n                            {t('Ok')}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n                <Dialog\n                    manager={modalManager}\n                    transitionDuration={0}\n                    open={openAll}\n                    onClose={this.handleCloseAllConfirmation}\n                    aria-labelledby='form-dialog-title'>\n                    <DialogTitle id='form-dialog-title'>{t('Confirm')}</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText style={{ whiteSpace: 'pre-wrap' }}>\n                            {t('AreYouSureSessions')}\n                        </DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleCloseAllConfirmation} color='primary'>\n                            {t('Cancel')}\n                        </Button>\n                        <Button onClick={this.handleDoneAllConfirmation} color='primary'>\n                            {t('Ok')}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </>\n        );\n    }\n}\n\nActiveSessions.propTypes = {\n    sessions: PropTypes.object.isRequired,\n    onClose: PropTypes.func\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(ActiveSessions);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M18,1 C20.6887547,1 22.8818181,3.12230671 22.9953805,5.78311038 L23,6 L23,9 C23,9.55228475 22.5522847,10 22,10 C21.4871642,10 21.0644928,9.61395981 21.0067277,9.11662113 L21,9 L21,6 C21,4.34314575 19.6568542,3 18,3 C16.4023191,3 15.0963391,4.24891996 15.0050927,5.82372721 L15,6 L15,8 C16.6568542,8 18,9.34314575 18,11 L18,19 C18,20.6568542 16.6568542,22 15,22 L5,22 C3.34314575,22 2,20.6568542 2,19 L2,11 C2,9.34314575 3.34314575,8 5,8 L13,8 L13,6 C13,3.3112453 15.1223067,1.11818189 17.7831104,1.00461951 L18,1 Z M15,10 L5,10 C4.44771525,10 4,10.4477153 4,11 L4,19 C4,19.5522847 4.44771525,20 5,20 L15,20 C15.5522847,20 16,19.5522847 16,19 L16,11 C16,10.4477153 15.5522847,10 15,10 Z M10,13.5 C10.8284271,13.5 11.5,14.1715729 11.5,15 C11.5,15.8284271 10.8284271,16.5 10,16.5 C9.17157288,16.5 8.5,15.8284271 8.5,15 C8.5,14.1715729 9.17157288,13.5 10,13.5 Z' />,\n    'Unblock'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { useTranslation, withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuList from '@material-ui/core/MenuList';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Popover from '@material-ui/core/Popover';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport SectionHeader from '../SectionHeader';\nimport User from '../../Tile/User';\nimport UnblockIcon from '../../../Assets/Icons/Unblock';\nimport { loadUsersContent } from '../../../Utils/File';\nimport { openUser } from '../../../Actions/Client';\nimport FileStore from '../../../Stores/FileStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './BlockedUsers.css';\n\nconst BlockedUser = React.memo(({ userId, onClick, onUnblock }) => {\n    const [contextMenu, setContextMenu] = React.useState(false);\n    const [top, setTop] = React.useState(0);\n    const [left, setLeft] = React.useState(0);\n    const { t } = useTranslation();\n\n    const handleContextMenu = event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        if (contextMenu) {\n            setContextMenu(false);\n        } else {\n            const { clientX, clientY } = event;\n\n            setContextMenu(true);\n            setLeft(clientX);\n            setTop(clientY);\n        }\n    };\n\n    const handleCloseContextMenu = () => {\n        setContextMenu(false);\n        setLeft(0);\n        setTop(0);\n    };\n\n    const handleClick = () => {\n        onClick(userId);\n    };\n\n    const handleUnblock = () => {\n        handleCloseContextMenu();\n        onUnblock(userId);\n    };\n\n    return (\n        <>\n            <ListItem className='settings-list-item' button onClick={handleClick} onContextMenu={handleContextMenu}>\n                <User userId={userId} />\n            </ListItem>\n            <Popover\n                open={contextMenu}\n                onClose={handleCloseContextMenu}\n                anchorReference='anchorPosition'\n                anchorPosition={{ top, left }}\n                anchorOrigin={{\n                    vertical: 'bottom',\n                    horizontal: 'right'\n                }}\n                transformOrigin={{\n                    vertical: 'top',\n                    horizontal: 'left'\n                }}\n                onMouseDown={e => e.stopPropagation()}>\n                <MenuList onClick={e => e.stopPropagation()}>\n                    <MenuItem onClick={handleUnblock}>\n                        <ListItemIcon>\n                            <UnblockIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('Unblock')} />\n                    </MenuItem>\n                </MenuList>\n            </Popover>\n        </>\n    );\n});\n\nBlockedUser.propTypes = {\n    userId: PropTypes.number.isRequired,\n    onClick: PropTypes.func.isRequired,\n    onUnblock: PropTypes.func.isRequired\n};\n\nclass BlockedUsers extends React.Component {\n\n    componentDidMount() {\n        this.loadContent();\n    }\n\n    loadContent() {\n        const { users } = this.props;\n\n        const store = FileStore.getStore();\n\n        loadUsersContent(store, users.user_ids);\n    }\n\n    handleUnblock = async userId => {\n        await TdLibController.send({\n           '@type': 'unblockUser',\n            user_id: userId\n        });\n    };\n\n    render() {\n        const { onClose, users, t } = this.props;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('BlockedUsers')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>\n                    <div className='sidebar-page-section'>\n                        { users.user_ids.length > 0 ? (\n                            <>\n                                <SectionHeader multiline>{t('BlockedUsersInfo')}</SectionHeader>\n                                {\n                                    users.user_ids.map(x => <BlockedUser key={x} userId={x} onClick={openUser} onUnblock={this.handleUnblock}/>)\n                                }\n                            </>\n                        ) : (\n                            <SectionHeader>{t('NoBlocked')}</SectionHeader>\n                        )}\n                    </div>\n                </div>\n            </>\n        );\n    }\n}\n\nBlockedUsers.propTypes = {\n    users: PropTypes.object.isRequired\n};\n\nexport default withTranslation()(BlockedUsers);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <g transform='translate(0.000000, -2.000000)' fillRule='nonzero'>\n        <path d='M18,2 C20.209139,2 22,3.790861 22,6 L22,6 L22,8 C22,8.55228475 21.5522847,9 21,9 C20.4477153,9 20,8.55228475 20,8 L20,8 L20,6 C20,4.8954305 19.1045695,4 18,4 L18,4 L4,4 C2.8954305,4 2,4.8954305 2,6 L2,6 L2,14 C2,15.1045695 2.8954305,16 4,16 L4,16 L14,16 C14.5522847,16 15,16.4477153 15,17 C15,17.5522847 14.5522847,18 14,18 L14,18 L12,18 L12,20 L14,20 C14.5128358,20 14.9355072,20.3860402 14.9932723,20.8833789 L15,21 C15,21.5522847 14.5522847,22 14,22 L14,22 L8,22 C7.44771525,22 7,21.5522847 7,21 C7,20.4477153 7.44771525,20 8,20 L8,20 L10,20 L10,18 L4,18 C1.85780461,18 0.108921124,16.3160315 0.00489530723,14.1996403 L0,14 L0,6 C0,3.790861 1.790861,2 4,2 L4,2 Z M22,11 C23.1045695,11 24,11.8954305 24,13 L24,20 C24,21.1045695 23.1045695,22 22,22 L19,22 C17.8954305,22 17,21.1045695 17,20 L17,13 C17,11.8954305 17.8954305,11 19,11 L22,11 Z M22,13 L19,13 L19,20 L22,20 L22,13 Z' />\n    </g>,\n    'Device'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <g transform='translate(-1.000000, -3.000000)' fillRule='nonzero'>\n        <path d='M9,13 C12.3229116,13 14.7530244,13.8337117 16.2223821,15.5699359 C16.724477,16.1632234 17,16.915291 17,17.6925226 L17,18.5 C17,19.8807119 15.8807119,21 14.5,21 L3.5,21 C2.11928813,21 1,19.8807119 1,18.5 L1,17.6925204 C1,16.9152876 1.2755246,16.1632192 1.77762117,15.569932 C3.24697824,13.8337108 5.67709024,13 9,13 Z M9,15 C6.21130036,15 4.33538166,15.6435809 3.30428673,16.861943 C3.10781409,17.0940989 3,17.3883868 3,17.6925212 L3,18.5 C3,18.7761424 3.22385763,19 3.5,19 L14.5,19 C14.7761424,19 15,18.7761424 15,18.5 L15,17.6925226 C15,17.3883883 14.8921864,17.0941004 14.6957148,16.8619448 C13.6646202,15.6435815 11.788701,15 9,15 Z M16,10 L22,10 C22.5522847,10 23,10.4477153 23,11 C23,11.5128358 22.6139598,11.9355072 22.1166211,11.9932723 L22,12 L16,12 C15.4477153,12 15,11.5522847 15,11 C15,10.4871642 15.3860402,10.0644928 15.8833789,10.0067277 L16,10 L22,10 L16,10 Z M9,3 C11.209139,3 13,4.790861 13,7 C13,9.209139 11.209139,11 9,11 C6.790861,11 5,9.209139 5,7 C5,4.790861 6.790861,3 9,3 Z M9,5 C7.8954305,5 7,5.8954305 7,7 C7,8.1045695 7.8954305,9 9,9 C10.1045695,9 11,8.1045695 11,7 C11,5.8954305 10.1045695,5 9,5 Z' />\n    </g>,\n    'RemoveMember'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../../Utils/HOC';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ActiveSessions from './ActiveSessions';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport BlockedUsers from './BlockedUsers';\nimport DeviceIcon from '../../../Assets/Icons/Device';\nimport RemoveMemberIcon from '../../../Assets/Icons/RemoveMember';\nimport SidebarPage from '../SidebarPage';\nimport SectionHeader from '../SectionHeader';\nimport UserStore from '../../../Stores/UserStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './PrivacySecurity.css';\n\nclass PrivacySecurity extends React.Component {\n    state = {\n        sessions: null,\n        users: null,\n        openBlockedUsers: false,\n        openActiveSessions: false\n    };\n\n    componentDidMount() {\n        this.loadContent();\n\n        UserStore.on('updateUserFullInfo', this.onUpdateUserFullInfo);\n    }\n\n    componentWillUnmount() {\n        UserStore.off('updateUserFullInfo', this.onUpdateUserFullInfo);\n    }\n\n    onUpdateUserFullInfo = update => {\n        const { user_id, user_full_info } = update;\n        const { users } = this.state;\n        if (!users) return;\n\n        const { total_count, user_ids } = users;\n        const { is_blocked } = user_full_info;\n        const prevIsBlocked = user_ids.indexOf(user_id) !== -1;\n        if (is_blocked === prevIsBlocked) return;\n\n        if (is_blocked) {\n            this.setState({\n                users: {\n                    ...users,\n                    total_count: total_count + 1,\n                    user_ids: [user_id, ...user_ids]\n                }\n            });\n        } else {\n            this.setState({\n                users: {\n                    ...users,\n                    total_count: total_count - 1,\n                    user_ids: user_ids.filter(x => x !== user_id)\n                }\n            });\n        }\n    };\n\n    async loadContent() {\n        TdLibController.send({\n            '@type': 'getActiveSessions'\n        }).then(sessions => this.setState({ sessions }));\n\n        TdLibController.send({\n            '@type': 'getBlockedUsers',\n            offset: 0,\n            limit: 100\n        }).then(users => this.setState({ users }));\n    }\n\n    openActiveSessions = () => {\n        if (!this.state.sessions) return;\n\n        this.setState({\n            openActiveSessions: true\n        });\n    };\n\n    closeActiveSessions = () => {\n        this.setState({\n            openActiveSessions: false\n        });\n    };\n\n    openBlockedUsers = () => {\n        if (!this.state.users) return;\n\n        this.setState({\n            openBlockedUsers: true\n        });\n    };\n\n    closeBlockedUsers = () => {\n        this.setState({\n            openBlockedUsers: false\n        });\n    };\n\n    render() {\n        const { t, onClose } = this.props;\n        const { openBlockedUsers, users, openActiveSessions, sessions } = this.state;\n\n        const sessionsCount =\n            sessions && sessions.sessions.length > 0\n                ? sessions.sessions.length === 1\n                    ? '1 session'\n                    : `${sessions.sessions.length} sessions`\n                : '1 session';\n\n        const usersCount =\n            users && users.total_count > 0\n                ? users.total_count === 1\n                    ? '1 user'\n                    : `${users.total_count} users`\n                : 'no users';\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('PrivacySettings')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>\n                    <div className='sidebar-page-section'>\n                        <ListItem\n                            className='settings-list-item2'\n                            role={undefined}\n                            button\n                            onClick={this.openBlockedUsers}>\n                            <ListItemIcon className='settings-list-item-icon'>\n                                <RemoveMemberIcon />\n                            </ListItemIcon>\n                            <ListItemText\n                                id='label-2'\n                                className='settings-list-item-text'\n                                primary={t('BlockedUsers')}\n                                secondary={usersCount}\n                            />\n                        </ListItem>\n                        <ListItem\n                            className='settings-list-item2'\n                            role={undefined}\n                            button\n                            onClick={this.openActiveSessions}>\n                            <ListItemIcon className='settings-list-item-icon'>\n                                <DeviceIcon />\n                            </ListItemIcon>\n                            <ListItemText\n                                id='label-2'\n                                className='settings-list-item-text'\n                                primary={t('SessionsTitle')}\n                                secondary={sessionsCount}\n                            />\n                        </ListItem>\n                    </div>\n                    {/*<div className='sidebar-page-section-divider' />*/}\n                    {/*<div className='sidebar-page-section'>*/}\n                    {/*    <SectionHeader>{t('PrivacyTitle')}</SectionHeader>*/}\n                    {/*    <ListItem className='settings-list-item2' role={undefined} button>*/}\n                    {/*        <ListItemText*/}\n                    {/*            className='settings-list-item-text2'*/}\n                    {/*            primary={t('PrivacyPhoneTitle')}*/}\n                    {/*            secondary={t('LastSeenContacts')}*/}\n                    {/*        />*/}\n                    {/*    </ListItem>*/}\n                    {/*    <ListItem className='settings-list-item2' role={undefined} button>*/}\n                    {/*        <ListItemText*/}\n                    {/*            className='settings-list-item-text2'*/}\n                    {/*            primary={t('LastSeenTitle')}*/}\n                    {/*            secondary={t('LastSeenEverybody')}*/}\n                    {/*        />*/}\n                    {/*    </ListItem>*/}\n                    {/*    <ListItem className='settings-list-item2' role={undefined} button>*/}\n                    {/*        <ListItemText*/}\n                    {/*            className='settings-list-item-text2'*/}\n                    {/*            primary={t('PrivacyProfilePhotoTitle')}*/}\n                    {/*            secondary={t('LastSeenEverybody')}*/}\n                    {/*        />*/}\n                    {/*    </ListItem>*/}\n                    {/*    <ListItem className='settings-list-item2' role={undefined} button>*/}\n                    {/*        <ListItemText*/}\n                    {/*            className='settings-list-item-text2'*/}\n                    {/*            primary={t('PrivacyForwardsTitle')}*/}\n                    {/*            secondary={t('LastSeenEverybody')}*/}\n                    {/*        />*/}\n                    {/*    </ListItem>*/}\n                    {/*    <ListItem className='settings-list-item2' role={undefined} button>*/}\n                    {/*        <ListItemText*/}\n                    {/*            className='settings-list-item-text2'*/}\n                    {/*            primary={t('WhoCanAddMe')}*/}\n                    {/*            secondary={t('LastSeenEverybody')}*/}\n                    {/*        />*/}\n                    {/*    </ListItem>*/}\n                    {/*</div>*/}\n                </div>\n                <SidebarPage open={openBlockedUsers} onClose={this.closeBlockedUsers}>\n                    <BlockedUsers users={users} />\n                </SidebarPage>\n                <SidebarPage open={openActiveSessions} onClose={this.closeActiveSessions}>\n                    <ActiveSessions sessions={sessions} />\n                </SidebarPage>\n            </>\n        );\n    }\n}\n\nPrivacySecurity.propTypes = {\n    onClose: PropTypes.func\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(PrivacySecurity);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../../Utils/HOC';\nimport Main from './Main';\nimport EditProfile from './EditProfile';\nimport Filters from './Filters';\nimport General from './General';\nimport Language from '../Language';\nimport Notifications from './Notifications';\nimport PrivacySecurity from './PrivacySecurity';\nimport SidebarPage from '../SidebarPage';\nimport { loadChatContent } from '../../../Utils/File';\nimport ChatStore from '../../../Stores/ChatStore';\nimport FileStore from '../../../Stores/FileStore';\nimport UserStore from '../../../Stores/UserStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './Settings.css';\n\nclass Settings extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            openEditProfile: false,\n            openGeneral: false,\n            openNotifications: false,\n            openPrivacySecurity: false,\n            openLanguage: false,\n            openFilters: false\n        };\n    }\n\n    componentDidMount() {\n        this.loadContent();\n\n        ChatStore.on('updateChatPhoto', this.onUpdateChatPhoto);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('updateChatPhoto', this.onUpdateChatPhoto);\n    }\n\n    onUpdateChatPhoto = update => {\n        const { chatId } = this.props;\n        const { chat_id, photo } = update;\n\n        if (chat_id !== chatId) return;\n        if (!photo) return;\n\n        const store = FileStore.get();\n        loadChatContent(store, chatId, true);\n    };\n\n    async loadContent() {\n        const { chatId } = this.props;\n\n        const store = FileStore.getStore();\n\n        loadChatContent(store, chatId, true);\n\n        const result = await TdLibController.send({\n            '@type': 'getUserFullInfo',\n            user_id: UserStore.getMyId()\n        });\n\n        UserStore.setFullInfo(UserStore.getMyId(), result);\n    }\n\n    openEditProfile = () => {\n        this.setState({\n            openEditProfile: true\n        });\n    };\n\n    closeEditProfile = () => {\n        this.setState({\n            openEditProfile: false\n        });\n    };\n\n    openGeneral = () => {\n        this.setState({\n            openGeneral: true\n        });\n    };\n\n    closeGeneral = () => {\n        this.setState({\n            openGeneral: false\n        });\n    };\n\n    openNotifications = () => {\n        this.setState({\n            openNotifications: true\n        });\n    };\n\n    closeNotifications = () => {\n        this.setState({\n            openNotifications: false\n        });\n    };\n\n    openPrivacySecurity = () => {\n        this.setState({\n            openPrivacySecurity: true\n        });\n    };\n\n    closePrivacySecurity = () => {\n        this.setState({\n            openPrivacySecurity: false\n        });\n    };\n\n    openLanguage = () => {\n        this.setState({\n            openLanguage: true\n        });\n    };\n\n    closeLanguage = () => {\n        this.setState({\n            openLanguage: false\n        });\n    };\n\n    openFilters = () => {\n        this.setState({\n            openFilters: true\n        });\n    };\n\n    closeFilters = () => {\n        this.setState({\n            openFilters: false\n        });\n    };\n\n    handleCloseSettings = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateSettings',\n            open: false\n        });\n    };\n\n    render() {\n        const { chatId, popup } = this.props;\n        const { openEditProfile, openGeneral, openNotifications, openPrivacySecurity, openLanguage, openFilters } = this.state;\n\n        return (\n            <>\n                <Main\n                    chatId={chatId}\n                    popup={popup}\n                    onClose={this.handleCloseSettings}\n                    onEditProfile={this.openEditProfile}\n                    onGeneral={this.openGeneral}\n                    onNotifications={this.openNotifications}\n                    onPrivacySecurity={this.openPrivacySecurity}\n                    onLanguage={this.openLanguage}\n                    onFilters={this.openFilters}\n                />\n                <SidebarPage open={openEditProfile} onClose={this.closeEditProfile}>\n                    <EditProfile chatId={chatId} />\n                </SidebarPage>\n                <SidebarPage open={openGeneral} onClose={this.closeGeneral}>\n                    <General chatId={chatId} />\n                </SidebarPage>\n                <SidebarPage open={openNotifications} onClose={this.closeNotifications}>\n                    <Notifications chatId={chatId} />\n                </SidebarPage>\n                <SidebarPage open={openPrivacySecurity} onClose={this.closePrivacySecurity}>\n                    <PrivacySecurity />\n                </SidebarPage>\n                <SidebarPage open={openFilters} onClose={this.closeFilters}>\n                    <Filters />\n                </SidebarPage>\n                <SidebarPage open={openLanguage} onClose={this.closeLanguage}>\n                    <Language />\n                </SidebarPage>\n            </>\n        );\n    }\n}\n\nSettings.propTypes = {\n    chatId: PropTypes.number,\n    popup: PropTypes.bool\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(Settings);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItem from '@material-ui/core/ListItem';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport User from '../Tile/User';\nimport SearchInput from './Search/SearchInput';\nimport VirtualizedList from '../Additional/VirtualizedList';\nimport { loadUsersContent } from '../../Utils/File';\nimport { debounce, throttle } from '../../Utils/Common';\nimport { openUser } from '../../Actions/Client';\nimport { getUserFullName } from '../../Utils/User';\nimport CacheStore from '../../Stores/CacheStore';\nimport FileStore from '../../Stores/FileStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Contacts.css';\n\nclass UserListItem extends React.Component {\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { userId, style } = this.props;\n        if (nextProps.userId !== userId) {\n            return true;\n        }\n\n        if (nextProps.style.top !== style.top) {\n            return true;\n        }\n\n        return false;\n    }\n\n    render() {\n        const { userId, onClick, style } = this.props;\n\n        return (\n            <ListItem className='user-list-item' onClick={() => onClick(userId)} button style={style}>\n                <User userId={userId} />\n            </ListItem>\n        );\n    }\n}\n\nclass Contacts extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.searchInputRef = React.createRef();\n        this.listRef = React.createRef();\n        this.searchListRef = React.createRef();\n\n        this.state = {\n            items: null,\n            searchItems: null\n        };\n\n        this.handleDebounceScroll = debounce(this.handleDebounceScroll, 100, false);\n        this.handleThrottleScroll = throttle(this.handleThrottleScroll, 200, false);\n    }\n\n    componentDidMount() {\n        const { current } = this.searchInputRef;\n        if (current) {\n            setTimeout(() => current.focus(), 50);\n        }\n\n        this.loadContent();\n    }\n\n    handleScroll = event => {\n        this.handleDebounceScroll();\n        this.handleThrottleScroll();\n    };\n\n    handleDebounceScroll() {\n        this.loadRenderIdsContent();\n    }\n\n    handleThrottleScroll() {\n        this.loadRenderIdsContent();\n    }\n\n    loadRenderIdsContent = () => {\n        const { items, searchItems } = this.state;\n\n        const currentItems = searchItems || items;\n\n        const { current } = currentItems === searchItems ? this.searchListRef : this.listRef;\n        if (!current) return;\n\n        const renderIds = current.getListRenderIds();\n        if (renderIds.size > 0) {\n            const userIds = [];\n            [...renderIds.keys()].forEach(key => {\n                userIds.push(currentItems.user_ids[key]);\n            });\n\n            const store = FileStore.getStore();\n            loadUsersContent(store, userIds);\n        }\n    };\n\n    async loadContent() {\n        let contacts = CacheStore.contacts;\n        if (!contacts) {\n            contacts = await TdLibController.send({\n                '@type': 'getContacts'\n            });\n            contacts.user_ids = contacts.user_ids.sort((x, y) => getUserFullName(x).localeCompare(getUserFullName(y)));\n            CacheStore.contacts = contacts;\n        }\n\n        const store = FileStore.getStore();\n        loadUsersContent(store, contacts.user_ids.slice(0, 20));\n\n        this.setState({\n            items: contacts\n        });\n    }\n\n    handleOpenUser = userId => {\n        openUser(userId, false);\n        this.handleClose();\n    };\n\n    renderItem = ({ index, style }, items) => {\n        const userId = items.user_ids[index];\n\n        return <UserListItem key={userId} userId={userId} onClick={() => this.handleOpenUser(userId)} style={style} />;\n    };\n\n    handleSearch = async text => {\n        const query = text.trim();\n        if (!query) {\n            this.setState({\n                searchItems: null\n            });\n            return;\n        }\n\n        const searchItems = await TdLibController.send({\n            '@type': 'searchContacts',\n            query,\n            limit: 1000\n        });\n        searchItems.user_ids = searchItems.user_ids.sort((x, y) =>\n            getUserFullName(x).localeCompare(getUserFullName(y))\n        );\n\n        const store = FileStore.getStore();\n        loadUsersContent(store, searchItems.user_ids.slice(0, 20));\n\n        this.setState({ searchItems });\n    };\n\n    handleClose = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateContacts',\n            open: false\n        });\n    };\n\n    render() {\n        const { popup } = this.props;\n        const { items, searchItems } = this.state;\n\n        const style = popup ? { minHeight: 800 } : null;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={this.handleClose}>\n                        { popup ? <CloseIcon/> : <ArrowBackIcon /> }\n                    </IconButton>\n                    <SearchInput inputRef={this.searchInputRef} onChange={this.handleSearch} />\n                </div>\n                <div className='contacts-content' style={style}>\n                    {items && (\n                        <VirtualizedList\n                            ref={this.listRef}\n                            className='contacts-list'\n                            source={items.user_ids}\n                            rowHeight={72}\n                            overScanCount={20}\n                            renderItem={x => this.renderItem(x, items)}\n                            onScroll={this.handleScroll}\n                        />\n                    )}\n                    {searchItems && (\n                        <VirtualizedList\n                            ref={this.searchListRef}\n                            className='contacts-list contacts-search-list'\n                            source={searchItems.user_ids}\n                            rowHeight={72}\n                            overScanCount={20}\n                            renderItem={x => this.renderItem(x, searchItems)}\n                            onScroll={this.handleScroll}\n                        />\n                    )}\n                </div>\n            </>\n        );\n    }\n}\n\nContacts.propTypes = {\n    popup: PropTypes.bool\n};\n\nexport default Contacts;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport DownloadIcon from '../../Assets/Icons/Download';\nimport AppStore from '../../Stores/ApplicationStore';\nimport './UpdatePanel.css';\n\nclass UpdatePanel extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { isSmallWidth } = AppStore;\n\n        this.state = {\n            newContentAvailable: false,\n            isSmallWidth\n        };\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateNewContentAvailable', this.onClientUpdateNewContentAvailable);\n        AppStore.on('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateNewContentAvailable', this.onClientUpdateNewContentAvailable);\n        AppStore.off('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n    }\n\n    onClientUpdatePageWidth = update => {\n        const { isSmallWidth } = update;\n\n        this.setState({ isSmallWidth });\n    };\n\n    onClientUpdateNewContentAvailable = () => {\n        this.setState({ newContentAvailable: true });\n    };\n\n    handleUpdate = () => {\n        if (this.handled) return;\n\n        this.handled = true;\n        setTimeout(() => {\n            window.location.reload();\n        }, 250);\n    };\n\n    render() {\n        const { newContentAvailable, isSmallWidth } = this.state;\n        const { t } = this.props;\n\n        if (!newContentAvailable) {\n            return null;\n        }\n\n        return (\n            <Button className='update-button' variant='contained' color='primary' onClick={this.handleUpdate}>\n                {isSmallWidth ? <DownloadIcon/> : t('Update')}\n            </Button>\n        );\n    }\n}\n\nexport default withTranslation()(UpdatePanel);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport TextField from '@material-ui/core/TextField';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport NextIcon from '../../Assets/Icons/Back';\nimport NewChatPhoto from './NewChatPhoto';\nimport { openChat } from '../../Actions/Client';\nimport { THUMBNAIL_PRIORITY } from '../../Constants';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './NewGroup.css';\n\nclass NewChannel extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.titleRef = React.createRef();\n        this.descriptionRef = React.createRef();\n\n        this.state = {\n            error: false,\n            defaultPhoto: null,\n            defaultPhotoURL: null,\n            defaultPhotoFile: null\n        };\n    }\n\n    handleClose = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateNewChannel',\n            open: false\n        });\n    };\n\n    handleDone = async () => {\n        const { error } = this.state;\n        const { defaultPhoto, defaultPhotoFile } = this.state;\n\n        const title = this.titleRef.current.value.trim();\n        if (!title) {\n            this.setState({\n                error: true\n            });\n            return;\n        }\n\n        if (error) {\n            this.setState({\n                error: false\n            });\n        }\n\n        this.handleClose();\n\n        const description = this.descriptionRef.current.value;\n\n        const chat = await TdLibController.send({\n            '@type': 'createNewSupergroupChat',\n            title,\n            description,\n            is_channel: true,\n            location: null\n        });\n\n        if (defaultPhotoFile) {\n            TdLibController.send({\n                '@type': 'setChatPhoto',\n                chat_id: chat.id,\n                photo: { '@type': 'inputFileId', id: defaultPhotoFile.id }\n            });\n        } else if (defaultPhoto) {\n            TdLibController.send({\n                '@type': 'setChatPhoto',\n                chat_id: chat.id,\n                photo: { '@type': 'inputFileBlob', name: 'photo.jpg', data: defaultPhoto }\n            });\n        }\n\n        openChat(chat.id);\n    };\n\n    handleChoosePhoto = async (blob, blobURL) => {\n        this.setState({\n            defaultPhoto: blob,\n            defaultPhotoURL: blobURL\n        });\n\n        const result = await TdLibController.send({\n            '@type': 'uploadFile',\n            file: {\n                '@type': 'inputFileBlob',\n                name: 'photo.jpg',\n                data: blob\n            },\n            file_type: { '@type': 'fileTypePhoto' },\n            priority: THUMBNAIL_PRIORITY\n        });\n\n        this.setState({\n            defaultPhotoFile: result\n        });\n    };\n\n    render() {\n        const { popup, t } = this.props;\n        const { error } = this.state;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={this.handleClose}>\n                        { popup ? <CloseIcon/> : <ArrowBackIcon /> }\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('NewChannel')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>\n                    <div className='new-chat-content'>\n                        <NewChatPhoto onChoose={this.handleChoosePhoto}/>\n                        <div className='new-chat-title'>\n                            <TextField\n                                inputRef={this.titleRef}\n                                error={error}\n                                className='new-chat-input'\n                                variant='outlined'\n                                fullWidth\n                                label={t('EnterChannelName')}\n                                defaultValue={''}\n                            />\n                            <TextField\n                                inputRef={this.descriptionRef}\n                                className='new-chat-input'\n                                variant='outlined'\n                                fullWidth\n                                label={t('DescriptionOptionalPlaceholder')}\n                                defaultValue={''}\n                            />\n                            <div className='edit-profile-hint'>{t('DescriptionInfo')}</div>\n                        </div>\n                    </div>\n                </div>\n\n                <div className='new-chat-bottom-button' onClick={this.handleDone}>\n                    <NextIcon/>\n                </div>\n            </>\n        );\n    }\n}\n\nNewChannel.propTypes = {\n    popup: PropTypes.bool,\n    userIds: PropTypes.array\n};\n\nexport default withTranslation()(NewChannel);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport UserTile from './UserTile';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport { getUserShortName } from '../../Utils/User';\nimport './UserChip.css';\n\nclass UserChip extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.divRef = React.createRef();\n    }\n\n    getOffset() {\n        const {\n            offsetLeft: left,\n            offsetTop: top,\n            offsetWidth: width,\n            offsetHeight: height\n        } = this.divRef.current;\n\n        return { left, top, width, height }\n    }\n\n    setStyleCSSText(text) {\n        const div = this.divRef.current;\n        if (!div) return;\n\n        div.style.cssText = text;\n    }\n\n    render() {\n        const { userId, selected, onClick } = this.props;\n\n        return (\n            <div ref={this.divRef} className={classNames('chip', { 'item-selected': selected })} onClick={onClick}>\n                <UserTile userId={userId} small={true}/>\n                <div className='chip-delete'>\n                    <CloseIcon className='chip-delete-icon'/>\n                </div>\n                <div className='chip-text'>{getUserShortName(userId)}</div>\n            </div>\n        )\n    }\n}\n\nUserChip.propTypes = {\n    userId: PropTypes.number,\n    selected: PropTypes.bool,\n    onClick: PropTypes.func\n};\n\nexport default UserChip;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../Utils/HOC';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItem from '@material-ui/core/ListItem';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport User from '../Tile/User';\nimport UserChip from '../Tile/UserChip';\nimport SearchInput from './Search/SearchInput';\nimport VirtualizedList from '../Additional/VirtualizedList';\nimport { loadUsersContent } from '../../Utils/File';\nimport { debounce, throttle } from '../../Utils/Common';\nimport { getUserFullName } from '../../Utils/User';\nimport CacheStore from '../../Stores/CacheStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Contacts.css';\n\nclass UserListItem extends React.Component {\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { userId, selected, style } = this.props;\n        if (nextProps.userId !== userId) {\n            return true;\n        }\n\n        if (nextProps.selected !== selected) {\n            return true;\n        }\n\n        if (nextProps.style.top !== style.top) {\n            return true;\n        }\n\n        return false;\n    }\n\n    render() {\n        const { userId, selected, onClick, style } = this.props;\n\n        return (\n            <ListItem className='user-list-item' onClick={() => onClick(userId)} button style={style}>\n                <Checkbox className='user-list-item-checkbox' checked={selected} color='primary' />\n                <User userId={userId} />\n            </ListItem>\n        );\n    }\n}\n\nclass AddParticipants extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.titleRef = React.createRef();\n        this.searchInputRef = React.createRef();\n        this.listRef = React.createRef();\n        this.searchListRef = React.createRef();\n        this.wrapPanelRef = React.createRef();\n        this.itemsRef = new Map();\n\n        this.state = {\n            items: null,\n            searchItems: null,\n            selectedItems: {\n                array: [],\n                map: new Map()\n            },\n            focusedItem: null\n        };\n\n        this.handleDebounceScroll = debounce(this.handleDebounceScroll, 100, false);\n        this.handleThrottleScroll = throttle(this.handleThrottleScroll, 200, false);\n    }\n\n    getUserIds() {\n        return this.state.selectedItems.array;\n    }\n\n    componentDidMount() {\n        const { current } = this.searchInputRef;\n        if (current) {\n            setTimeout(() => current.focus(), 50);\n        }\n\n        this.loadContent();\n    }\n\n    handleScroll = event => {\n        this.handleDebounceScroll();\n        this.handleThrottleScroll();\n    };\n\n    handleDebounceScroll() {\n        this.loadRenderIdsContent();\n    }\n\n    handleThrottleScroll() {\n        this.loadRenderIdsContent();\n    }\n\n    loadRenderIdsContent = () => {\n        const { items, searchItems } = this.state;\n\n        const currentItems = searchItems || items;\n\n        const { current } = currentItems === searchItems ? this.searchListRef : this.listRef;\n        if (!current) return;\n\n        const renderIds = current.getListRenderIds();\n        if (renderIds.size > 0) {\n            const userIds = [];\n            [...renderIds.keys()].forEach(key => {\n                userIds.push(currentItems.user_ids[key]);\n            });\n\n            const store = FileStore.getStore();\n            loadUsersContent(store, userIds);\n        }\n    };\n\n    async loadContent() {\n        let contacts = CacheStore.contacts;\n        if (!contacts) {\n            contacts = await TdLibController.send({\n                '@type': 'getContacts'\n            });\n            contacts.user_ids = contacts.user_ids.sort((x, y) => getUserFullName(x).localeCompare(getUserFullName(y)));\n            CacheStore.contacts = contacts;\n        }\n\n        const store = FileStore.getStore();\n        loadUsersContent(store, contacts.user_ids.slice(0, 20));\n\n        this.setState({\n            items: contacts\n        });\n    }\n\n    handleOpenUser = userId => {\n        const { selectedItems, focusedItem } = this.state;\n        const { map, array } = selectedItems;\n\n        const newMap = new Map(map);\n        let newArray;\n        let newFocusedItem = null;\n        let isDeleting = false;\n        if (map.has(userId)) {\n            newMap.delete(userId);\n            newArray = array.filter(x => x !== userId);\n            newFocusedItem = focusedItem === userId ? null : focusedItem;\n            isDeleting = true;\n        } else {\n            newMap.set(userId, userId);\n            newArray = array.concat([userId]);\n            newFocusedItem = null;\n        }\n\n        const input = this.searchInputRef.current;\n        input.focus();\n        if (!isDeleting) {\n            input.innerText = '';\n            this.handleSearch('');\n        }\n\n        const wrapPanel = this.wrapPanelRef.current;\n        const prevHeight = wrapPanel.scrollHeight;\n        const prevOffsetHeight = wrapPanel.offsetHeight;\n\n        const prevMap = new Map();\n        for (let key of this.itemsRef.keys()) {\n            const el = this.itemsRef.get(key);\n            if (el) {\n                const offset = el.getOffset();\n                prevMap.set(key, offset);\n            }\n        }\n\n        const prevCSSText = wrapPanel.style.cssText;\n        const prevScrollTop = wrapPanel.scrollTop;\n        if (isDeleting) {\n            wrapPanel.style.cssText = null;\n        }\n\n        this.setState({\n            focusedItem: newFocusedItem,\n            selectedItems: {\n                array: newArray,\n                map: newMap\n            }\n        }, () => {\n            this.animatePanel(isDeleting, prevHeight, prevOffsetHeight, prevScrollTop, prevCSSText);\n            this.animateItems(prevMap);\n        });\n    };\n\n    animatePanel(isDeleting, prevHeight, prevOffsetHeight, prevScrollTop, prevCSSText) {\n        const wrapPanel = this.wrapPanelRef.current;\n\n        const currentHeight = wrapPanel.scrollHeight;\n        const currentOffsetHeight = wrapPanel.offsetHeight;\n\n        const expanded = currentHeight > prevHeight;\n        const collapsed = currentHeight < prevHeight;\n\n        const maxHeight = 123;\n        if (expanded) {\n            if (prevHeight < maxHeight) {\n                wrapPanel.style.cssText = `max-height: ${Math.min(prevHeight, maxHeight)}px;`;\n                requestAnimationFrame(() => {\n                    wrapPanel.style.cssText = `max-height: ${Math.min(currentHeight, maxHeight)}px;`;\n                    setTimeout(() => {\n                        this.searchInputRef.current.scrollIntoView({ behavior: 'auto' });\n                    }, 250);\n                });\n            } else {\n                wrapPanel.style.cssText = `max-height: ${maxHeight}px;`;\n                this.searchInputRef.current.scrollIntoView({ behavior: 'smooth' });\n            }\n        } else if (collapsed) {\n            if (currentHeight < maxHeight) {\n                wrapPanel.style.cssText = `min-height: ${Math.min(prevOffsetHeight, maxHeight)}px;`;\n                requestAnimationFrame(() => {\n                    wrapPanel.style.cssText = `min-height: ${Math.min(currentHeight, maxHeight)}px;`;\n                });\n            } else {\n                wrapPanel.style.cssText = `max-height: ${maxHeight}px;`;\n                wrapPanel.scrollTop = prevScrollTop;\n            }\n        } else {\n            if (isDeleting) {\n                wrapPanel.style.cssText = prevCSSText;\n                wrapPanel.scrollTop = prevScrollTop;\n            } else {\n                this.searchInputRef.current.scrollIntoView({ behavior: 'smooth' });\n            }\n        }\n    }\n\n    animateItems(prevOffsets) {\n        const doubleTransform = new Map();\n        for (let key of this.itemsRef.keys()) {\n            const el = this.itemsRef.get(key);\n            if (el) {\n                const currentOffset = el.getOffset();\n                const prevOffset = prevOffsets.has(key) ? prevOffsets.get(key) : null;\n                if (prevOffset) {\n                    if (prevOffset.left < currentOffset.left) {\n                        doubleTransform.set(el, { prevOffset, currentOffset });\n                    }\n\n                    const transform = `transform: translate(${prevOffset.left - currentOffset.left}px, ${prevOffset.top - currentOffset.top}px)`;\n                    el.setStyleCSSText(transform);\n                }\n            }\n        }\n\n        requestAnimationFrame(() => {\n            for (let key of this.itemsRef.keys()) {\n                const el = this.itemsRef.get(key);\n                if (el) {\n                    let transition = `transition: transform 0.25s ease`;\n                    if (doubleTransform.has(el)) {\n                        const { prevOffset, currentOffset } = doubleTransform.get(el);\n                        transition = `transform: translate(${prevOffset.left - currentOffset.left - prevOffset.width}px, ${prevOffset.top - currentOffset.top}px);`\n                                   + 'transition: transform 0.1s ease;'\n                    }\n\n                    el.setStyleCSSText(transition);\n                }\n            }\n\n            if (!doubleTransform.size) return;\n\n            setTimeout(() => {\n                for (let el of doubleTransform.keys()) {\n                    const { currentOffset } = doubleTransform.get(el);\n                    const transition = `transform: translate(${currentOffset.width}px, 0);`\n                                     + 'transition: transform 0s ease;';\n\n                    el.setStyleCSSText(transition);\n                }\n\n                requestAnimationFrame(() => {\n                    for (let el of doubleTransform.keys()) {\n                        const transition = 'transition: transform 0.15s ease';\n\n                        el.setStyleCSSText(transition);\n                    }\n                });\n\n            }, 101);\n        });\n    }\n\n    renderItem = ({ index, style }, items, selectedItemsMap) => {\n        const userId = items[index];\n        const isSelected = selectedItemsMap.has(userId);\n\n        return <UserListItem key={userId} userId={userId} selected={isSelected} onClick={() => this.handleOpenUser(userId)} style={style} />;\n    };\n\n    handleSearch = async text => {\n        const query = text.trim();\n        if (!query) {\n            this.setState({\n                searchItems: null,\n                publicItems: null,\n                focusedItem: null\n            });\n            return;\n        }\n\n        const promises = [];\n        promises.push(\n            TdLibController.send({\n                '@type': 'searchContacts',\n                query,\n                limit: 20\n            })\n        );\n        promises.push(\n            TdLibController.send({\n                '@type': 'searchPublicChats',\n                query\n            })\n        );\n        const [searchItems, publicChats] = await Promise.all(promises);\n\n        searchItems.user_ids = searchItems.user_ids.sort((x, y) =>\n            getUserFullName(x).localeCompare(getUserFullName(y))\n        );\n\n        const publicItems = { '@type': 'users', user_ids: [] };\n        publicChats.chat_ids.reduce((array, chatId) => {\n            const chat = ChatStore.get(chatId);\n            if (chat && chat.type['@type'] === 'chatTypePrivate') {\n                array.push(chat.type.user_id);\n            }\n            return array;\n        }, publicItems.user_ids);\n\n        const store = FileStore.getStore();\n        loadUsersContent(store, searchItems.user_ids);\n        loadUsersContent(store, publicItems.user_ids);\n\n        this.setState({ searchItems, publicItems, focusedItem: null });\n    };\n\n    handleClose = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateNewGroup',\n            open: false\n        });\n    };\n\n    handleSearchClose = event => {\n        const { selectedItems, focusedItem } = this.state;\n        if (!selectedItems) return;\n\n        const { map } = selectedItems;\n        if (!map.has(focusedItem)) return;\n\n        event.stopPropagation();\n        event.nativeEvent.stopImmediatePropagation();\n\n        this.setState({\n            focusedItem: null\n        })\n    };\n\n    handleBackspace = () => {\n        const { selectedItems, focusedItem } = this.state;\n        if (!selectedItems) return;\n\n        const { array, map } = selectedItems;\n        if (!array) return;\n        if (!array.length) return;\n\n        if (map.has(focusedItem)) {\n            this.handleOpenUser(focusedItem);\n            return;\n        }\n\n        const lastItem = array[array.length - 1];\n        if (!lastItem) return;\n\n        this.setState({\n            focusedItem: lastItem\n        });\n    };\n\n    render() {\n        const { popup, t } = this.props;\n        const { items, searchItems, publicItems, selectedItems, focusedItem } = this.state;\n\n        const style = popup ? { minHeight: 800 } : null;\n\n        this.itemsRef.clear();\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={this.handleClose}>\n                        { popup ? <CloseIcon/> : <ArrowBackIcon /> }\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('GroupAddMembers')}</span>\n                    </div>\n                </div>\n                <div ref={this.wrapPanelRef} className='animated-wrap-panel'>\n                    {selectedItems.array.map(x => <UserChip selected={focusedItem === x} ref={el => { this.itemsRef.set(x, el); }} key={x} userId={x} onClick={() => this.handleOpenUser(x)}/>)}\n                    <SearchInput inputRef={this.searchInputRef} hint={t('SendMessageTo')} onClose={this.handleSearchClose} onChange={this.handleSearch} onBackspace={this.handleBackspace} />\n                </div>\n                <div className='contacts-border'/>\n                <div className='contacts-content' style={style}>\n                    {items && (\n                        <VirtualizedList\n                            ref={this.listRef}\n                            className='contacts-list'\n                            source={items.user_ids}\n                            rowHeight={72}\n                            overScanCount={20}\n                            renderItem={x => this.renderItem(x, items.user_ids, selectedItems.map)}\n                            onScroll={this.handleScroll}\n                        />\n                    )}\n                    {searchItems && publicItems && (\n                        <VirtualizedList\n                            ref={this.searchListRef}\n                            className='contacts-list contacts-search-list'\n                            source={searchItems.user_ids.concat(publicItems.user_ids)}\n                            rowHeight={72}\n                            overScanCount={20}\n                            renderItem={x => this.renderItem(x, searchItems.user_ids.concat(publicItems.user_ids), selectedItems.map)}\n                            onScroll={this.handleScroll}\n                        />\n                    )}\n                </div>\n            </>\n        );\n    }\n}\n\nAddParticipants.propTypes = {\n    popup: PropTypes.bool,\n    onClose: PropTypes.func\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(AddParticipants);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../Utils/HOC';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItem from '@material-ui/core/ListItem';\nimport TextField from '@material-ui/core/TextField';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport SectionHeader from './SectionHeader';\nimport User from '../Tile/User';\nimport NewChatPhoto from './NewChatPhoto';\nimport { loadUsersContent } from '../../Utils/File';\nimport FileStore from '../../Stores/FileStore';\nimport './NewGroupParams.css';\n\nclass UserListItem extends React.Component {\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { userId } = this.props;\n        if (nextProps.userId !== userId) {\n            return true;\n        }\n\n        return false;\n    }\n\n    render() {\n        const { userId, style } = this.props;\n\n        return (\n            <ListItem className='user-list-item' button style={style}>\n                <User userId={userId} />\n            </ListItem>\n        );\n    }\n}\n\nclass NewGroupParams extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.titleRef = React.createRef();\n\n        this.state = {\n            error: false\n        };\n    }\n\n    componentDidMount() {\n        const { userIds } = this.props;\n\n        const store = FileStore.getStore();\n        loadUsersContent(store, userIds);\n    }\n\n    getTitle() {\n        const { error } = this.state;\n\n        const title = this.titleRef.current.value.trim();\n        if (!title) {\n            this.setState({\n                error: true\n            });\n            return title;\n        }\n\n        if (error) {\n            this.setState({\n                error: false\n            })\n        }\n\n        return title;\n    }\n\n    handleClose = () => {\n        const { onClose } = this.props;\n        if (!onClose) return;\n\n        onClose();\n    };\n\n    render() {\n        const { t, userIds, defaultPhotoURL, onChoosePhoto } = this.props;\n        const { error } = this.state;\n\n        const items = userIds.map(userId => (<UserListItem key={userId} userId={userId} />));\n\n        const itemsCaption = userIds.length !== 1 ? `${userIds.length} members` : `${userIds.length} member`;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={this.handleClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('NewGroup')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>\n                    <div className='new-chat-content'>\n                        <NewChatPhoto defaultURL={defaultPhotoURL} onChoose={onChoosePhoto}/>\n                        <div className='new-chat-title'>\n                            <TextField\n                                inputRef={this.titleRef}\n                                error={error}\n                                className='new-chat-input'\n                                variant='outlined'\n                                fullWidth\n                                label={t('GroupName')}\n                                defaultValue={''}\n                            />\n                        </div>\n                        <SectionHeader>{itemsCaption}</SectionHeader>\n                        {items}\n                    </div>\n                </div>\n            </>\n        );\n    }\n}\n\nNewGroupParams.propTypes = {\n    userIds: PropTypes.array,\n    defaultPhotoURL: PropTypes.string,\n    onChoosePhoto: PropTypes.func,\n    onClose: PropTypes.func\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(NewGroupParams);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport AddParticipants from './AddParticipants';\nimport NewGroupParams from './NewGroupParams';\nimport SidebarPage from './SidebarPage';\nimport NextIcon from '../../Assets/Icons/Back';\nimport { openChat } from '../../Actions/Client';\nimport { THUMBNAIL_PRIORITY } from '../../Constants';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './NewGroup.css';\n\nclass NewGroup extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.addParticipantsRef = React.createRef();\n        this.newGroupParamsRef = React.createRef();\n\n        this.state = {\n            openParams: false,\n            userIds: [],\n            defaultPhoto: null,\n            defaultPhotoURL: null,\n            defaultPhotoFile: null\n        };\n    }\n\n    handleDone = async () => {\n        const { openParams } = this.state;\n        if (!openParams) {\n            const userIds = this.addParticipantsRef.current.getUserIds();\n            if (!userIds.length) return;\n\n            this.setState({\n                openParams: true,\n                userIds\n            })\n        } else {\n            const { userIds, defaultPhoto, defaultPhotoFile } = this.state;\n\n            const title = this.newGroupParamsRef.current.getTitle();\n            if (!title) {\n                return;\n            }\n\n            this.handleClose();\n\n            const chat = await TdLibController.send({\n                '@type': 'createNewSupergroupChat',\n                title,\n                is_channel: false,\n                description: '',\n                location: null\n            });\n\n            if (defaultPhotoFile) {\n                TdLibController.send({\n                    '@type': 'setChatPhoto',\n                    chat_id: chat.id,\n                    photo: { '@type': 'inputFileId', id: defaultPhotoFile.id }\n                });\n            } else if (defaultPhoto) {\n                TdLibController.send({\n                    '@type': 'setChatPhoto',\n                    chat_id: chat.id,\n                    photo: { '@type': 'inputFileBlob', name: 'photo.jpg', data: defaultPhoto }\n                });\n            }\n\n            if (userIds.length > 0) {\n                TdLibController.send({\n                    '@type': 'addChatMembers',\n                    chat_id: chat.id,\n                    user_ids: userIds\n                });\n            }\n\n            openChat(chat.id);\n        }\n    };\n\n    handleClose = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateNewGroup',\n            open: false\n        });\n    };\n\n    handleCloseParams = () => {\n        this.setState({\n            openParams: false,\n            userIds: []\n        })\n    };\n\n    handleChoosePhoto = async (blob, blobURL) => {\n        this.setState({\n            defaultPhoto: blob,\n            defaultPhotoURL: blobURL\n        });\n\n        const result = await TdLibController.send({\n            '@type': 'uploadFile',\n            file: {\n                '@type': 'inputFileBlob',\n                name: 'photo.jpg',\n                data: blob\n            },\n            file_type: { '@type': 'fileTypePhoto' },\n            priority: THUMBNAIL_PRIORITY\n        });\n\n        this.setState({\n            defaultPhotoFile: result\n        });\n    }\n\n    render() {\n        const { popup } = this.props;\n        const { openParams, userIds, defaultPhotoURL } = this.state;\n\n        return (\n            <>\n                <AddParticipants ref={this.addParticipantsRef} popup={popup} onClose={this.handleClose}/>\n\n                <SidebarPage open={openParams}>\n                    <NewGroupParams\n                        ref={this.newGroupParamsRef}\n                        defaultPhotoURL={defaultPhotoURL}\n                        userIds={userIds}\n                        onChoosePhoto={this.handleChoosePhoto}\n                        onClose={this.handleCloseParams}\n                    />\n                </SidebarPage>\n\n                <div className='new-chat-bottom-button' onClick={this.handleDone}>\n                    <NextIcon/>\n                </div>\n            </>\n        );\n    }\n}\n\nNewGroup.propTypes = {\n    popup: PropTypes.bool,\n    userIds: PropTypes.array\n};\n\nexport default withTranslation()(NewGroup);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport Dialog from '@material-ui/core/Dialog';\nimport Contacts from '../ColumnLeft/Contacts';\nimport DialogsHeader from '../ColumnLeft/DialogsHeader';\nimport Search from '../ColumnLeft/Search/Search';\nimport Settings from '../ColumnLeft/Settings/Settings';\nimport AppStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport './ChatInfoDialog.css';\nimport { openChat } from '../../Actions/Client';\nimport NewChannel from '../ColumnLeft/NewChannel';\nimport NewGroup from '../ColumnLeft/NewGroup';\n\nclass SidebarDialog extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.headerRef = React.createRef();\n\n        this.state = {\n            openSearch: false,\n            openSettings: false,\n            openContacts: false,\n            openNewGroup: false,\n            openNewChannel: false\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { openSearch, searchText, openSettings, openContacts, openNewGroup, openNewChannel } = this.state;\n\n        if (nextState.openSearch !== openSearch) {\n            return true;\n        }\n\n        if (nextState.searchText !== searchText) {\n            return true;\n        }\n\n        if (nextState.openSettings !== openSettings) {\n            return true;\n        }\n\n        if (nextState.openContacts !== openContacts) {\n            return true;\n        }\n\n        if (nextState.openNewGroup !== openNewGroup) {\n            return true;\n        }\n\n        if (nextState.openNewChannel !== openNewChannel) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateSearchChat', this.onClientUpdateSearchChat);\n        ChatStore.on('clientUpdateSettings', this.onClientUpdateSettings);\n        ChatStore.on('clientUpdateContacts', this.onClientUpdateContacts);\n        ChatStore.on('clientUpdateNewGroup', this.onClientUpdateNewGroup);\n        ChatStore.on('clientUpdateNewChannel', this.onClientUpdateNewChannel);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateSearchChat', this.onClientUpdateSearchChat);\n        ChatStore.off('clientUpdateSettings', this.onClientUpdateSettings);\n        ChatStore.off('clientUpdateContacts', this.onClientUpdateContacts);\n        ChatStore.off('clientUpdateNewGroup', this.onClientUpdateNewGroup);\n        ChatStore.off('clientUpdateNewChannel', this.onClientUpdateNewChannel);\n    }\n\n    onClientUpdateSearchChat = update => {\n        const { isSmallWidth } = AppStore;\n        if (!isSmallWidth) return;\n\n        const { chatId, query } = update;\n        const { openSearch, searchChatId, searchText } = this.state;\n\n        if (openSearch && chatId === searchChatId && query === searchText) {\n            return;\n        }\n\n        this.query = query;\n        this.setState(\n            {\n                openSearch: true,\n                searchChatId: chatId,\n                searchText: null\n            }\n        );\n    };\n\n    handleDialogEnter = () => {\n        if (!this.query) return;\n\n        const header = this.headerRef.current;\n        if (header) {\n            header.setInitQuery(this.query);\n        }\n\n        this.query = null;\n    };\n\n    onClientUpdateSettings = update => {\n        const { isSmallWidth } = AppStore;\n        if (!isSmallWidth) return;\n\n        const { open, chatId } = update;\n\n        this.setState({ openSettings: open, meChatId: chatId });\n    };\n\n    onClientUpdateContacts = async update => {\n        const { isSmallWidth } = AppStore;\n        if (!isSmallWidth) return;\n\n        const { open } = update;\n\n        this.setState({ openContacts: open });\n    };\n\n    onClientUpdateNewGroup = async update => {\n        const { isSmallWidth } = AppStore;\n        if (!isSmallWidth) return;\n\n        const { open } = update;\n\n        this.setState({ openNewGroup: open });\n    };\n\n    onClientUpdateNewChannel = async update => {\n        const { isSmallWidth } = AppStore;\n        if (!isSmallWidth) return;\n\n        const { open } = update;\n\n        this.setState({ openNewChannel: open });\n    };\n\n    handleClose = () => {\n        this.setState({\n            openSettings: false,\n            openContacts: false,\n            openNewGroup: false,\n            openNewChannel: false,\n            openSearch: false\n        });\n    };\n\n    handleSearch = visible => {\n        this.setState({\n            openSearch: visible,\n            searchChatId: 0,\n            searchText: null\n        });\n    };\n\n    handleSearchTextChange = text => {\n        this.setState({\n            searchText: text,\n            query: null\n        });\n    };\n\n    handleSelectMessage = (chatId, messageId, openSearch) => {\n        openChat(chatId, messageId);\n\n        this.handleCloseSearch();\n    };\n\n    handleCloseSearch = () => {\n        this.setState({\n            openSearch: false,\n            searchChatId: 0,\n            searchText: null\n        });\n    };\n\n    render() {\n        const { meChatId, searchChatId, searchText, openSearch, openContacts, openSettings, openNewGroup, openNewChannel } = this.state;\n        if (!openSearch && !openContacts && !openSettings && !openNewGroup && !openNewChannel) {\n            return null;\n        }\n\n        return (\n            <Dialog\n                open\n                transitionDuration={0}\n                onClose={this.handleClose}\n                classes={{\n                    root: 'chat-info-dialog-root',\n                    container: 'chat-info-dialog-container',\n                    paper: 'chat-info-dialog-paper'\n                }}\n                onEnter={this.handleDialogEnter}\n                >\n                {openSettings && <Settings chatId={meChatId} popup/>}\n                {openContacts && <Contacts popup />}\n                {openNewGroup && <NewGroup popup/>}\n                {openNewChannel && <NewChannel popup />}\n                {openSearch && (\n                    <>\n                        <DialogsHeader\n                            ref={this.headerRef}\n                            openSearch={true}\n                            timeout={false}\n                            onClick={this.handleHeaderClick}\n                            onSearch={this.handleSearch}\n                            onSearchTextChange={this.handleSearchTextChange}\n                            popup\n                        />\n                        <div className='search-content'>\n                            <Search\n                                chatId={searchChatId}\n                                text={searchText}\n                                onSelectMessage={this.handleSelectMessage}\n                                onClose={this.handleCloseSearch}\n                            />\n                        </div>\n                    </>\n                )}\n            </Dialog>\n        );\n    }\n}\n\nSidebarDialog.propTypes = {};\n\nexport default SidebarDialog;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport { orderCompare } from './Common';\nimport { getChatOrder } from './Chat';\nimport ChatStore from '../Stores/ChatStore';\n\nexport function getArchiveTitle() {\n    const archive = ChatStore.chatList.get('chatListArchive');\n    const chats = [];\n    const chatsOrder = [];\n    if (archive) {\n        for (const chatId of archive.keys()) {\n            const chat = ChatStore.get(chatId);\n            if (chat) {\n                const order = getChatOrder(chatId, { '@type': 'chatListArchive' });\n                if (order !== '0') chats.push(chat);\n                chatsOrder.push({ order, id: chatId, title: chat.title });\n            }\n        }\n    }\n\n    const orderedChats = chats.sort((a, b) => orderCompare(getChatOrder(b, { '@type': 'chatListArchive' }), getChatOrder(a, { '@type': 'chatListArchive' })));\n\n    return orderedChats.map(x => x.title).join(', ');\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport classNames from 'classnames';\nimport CSSTransition from 'react-transition-group/CSSTransition';\nimport Archive from './Archive';\nimport Search from './Search/Search';\nimport Filters from './Filters';\nimport DialogsHeader from './DialogsHeader';\nimport DialogsList from './DialogsList';\nimport SidebarPage from './SidebarPage';\nimport Settings from './Settings/Settings';\nimport Contacts from './Contacts';\nimport UpdatePanel from './UpdatePanel';\nimport SidebarDialog from '../Popup/SidebarDialog';\nimport NewGroup from './NewGroup';\nimport NewChannel from './NewChannel';\nimport { openChat } from '../../Actions/Client';\nimport { getArchiveTitle } from '../../Utils/Archive';\nimport { loadChatsContent } from '../../Utils/File';\nimport { duration } from '@material-ui/core/styles/transitions';\nimport { CHAT_SLICE_LIMIT } from '../../Constants';\nimport AppStore from '../../Stores/ApplicationStore';\nimport CacheStore from '../../Stores/CacheStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport FilterStore from '../../Stores/FilterStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Dialogs.css';\n\nconst defaultTimeout = {\n    enter: duration.enteringScreen,\n    exit: duration.leavingScreen\n};\n\nclass Dialogs extends Component {\n    constructor(props) {\n        super(props);\n\n        this.dialogListRef = React.createRef();\n        this.archiveListRef = React.createRef();\n        this.dialogsHeaderRef = React.createRef();\n\n        this.state = {\n            cache: null,\n\n            showArchive: false,\n            archiveTitle: null,\n\n            mainItems: [],\n            archiveItems: [],\n\n            timeout: defaultTimeout,\n            openSearch: false,\n            openArchive: false,\n            openContacts: false,\n            openSettings: false,\n            openNewGroup: false,\n            openNewChannel: false,\n\n            searchChatId: 0,\n            searchText: null,\n            query: null\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const {\n            cache,\n            showArchive,\n            archiveTitle,\n            mainItems,\n            archiveItems,\n            openSearch,\n            openArchive,\n            openSettings,\n            openContacts,\n            openNewGroup,\n            openNewChannel,\n            searchChatId,\n            searchText\n        } = this.state;\n\n        if (nextState.cache !== cache) {\n            return true;\n        }\n\n        if (nextState.showArchive !== showArchive) {\n            return true;\n        }\n\n        if (nextState.archiveTitle !== archiveTitle) {\n            return true;\n        }\n\n        if (nextState.archiveItems !== archiveItems) {\n            return true;\n        }\n\n        if (nextState.mainItems !== mainItems) {\n            return true;\n        }\n\n        if (nextState.openSearch !== openSearch) {\n            return true;\n        }\n\n        if (nextState.openArchive !== openArchive) {\n            return true;\n        }\n\n        if (nextState.openSettings !== openSettings) {\n            return true;\n        }\n\n        if (nextState.openContacts !== openContacts) {\n            return true;\n        }\n\n        if (nextState.openNewGroup !== openNewGroup) {\n            return true;\n        }\n\n        if (nextState.openNewChannel !== openNewChannel) {\n            return true;\n        }\n\n        if (nextState.searchChatId !== searchChatId) {\n            return true;\n        }\n\n        if (nextState.searchText !== searchText) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        this.loadCache();\n\n        AppStore.on('clientUpdateSearchChat', this.onClientUpdateSearchChat);\n        AppStore.on('clientUpdateThemeChange', this.onClientUpdateThemeChange);\n        AppStore.on('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n        ChatStore.on('updateChatDraftMessage', this.onUpdateChatOrder);\n        ChatStore.on('updateChatLastMessage', this.onUpdateChatOrder);\n        ChatStore.on('updateChatPosition', this.onUpdateChatOrder);\n        ChatStore.on('clientUpdateSettings', this.onClientUpdateSettings);\n        ChatStore.on('clientUpdateArchive', this.onClientUpdateArchive);\n        ChatStore.on('clientUpdateContacts', this.onClientUpdateContacts);\n        ChatStore.on('clientUpdateNewGroup', this.onClientUpdateNewGroup);\n        ChatStore.on('clientUpdateNewChannel', this.onClientUpdateNewChannel);\n        FilterStore.on('updateChatFilters', this.onUpdateChatFilters);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateSearchChat', this.onClientUpdateSearchChat);\n        AppStore.off('clientUpdateThemeChange', this.onClientUpdateThemeChange);\n        AppStore.off('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n        ChatStore.off('updateChatDraftMessage', this.onUpdateChatOrder);\n        ChatStore.off('updateChatLastMessage', this.onUpdateChatOrder);\n        ChatStore.off('updateChatPosition', this.onUpdateChatOrder);\n        ChatStore.off('clientUpdateSettings', this.onClientUpdateSettings);\n        ChatStore.off('clientUpdateArchive', this.onClientUpdateArchive);\n        ChatStore.off('clientUpdateContacts', this.onClientUpdateContacts);\n        ChatStore.off('clientUpdateNewGroup', this.onClientUpdateNewGroup);\n        ChatStore.off('clientUpdateNewChannel', this.onClientUpdateNewChannel);\n        FilterStore.off('updateChatFilters', this.onUpdateChatFilters);\n    }\n\n    onUpdateChatFilters = update => {\n        this.handleSaveCache();\n    };\n\n    onClientUpdatePageWidth = update => {\n        const { isSmallWidth } = update;\n\n        if (!isSmallWidth) return;\n\n        const { openSettings, openContacts, openSearch, openNewGroup, openNewChannel } = this.state;\n        if (openSettings || openContacts || openSearch || openNewGroup || openNewChannel) {\n            this.setState({\n                    openContacts: false,\n                    openSettings: false,\n                    openSearch: false,\n                    openNewGroup: false,\n                    openNewChannel: false,\n                    timeout: 0\n                }, () => {\n                    this.setState({\n                        timeout: defaultTimeout\n                    });\n            });\n        }\n    };\n\n    async loadCache() {\n        const cache = (await CacheStore.load()) || {};\n\n        const { chats, archiveChats } = cache;\n\n        FilterStore.filters = FilterStore.filters || CacheStore.filters;\n        this.setState({\n            cache,\n\n            showArchive: archiveChats && archiveChats.length > 0,\n            archiveTitle: getArchiveTitle()\n        });\n\n        this.loadChatContents((chats || []).map(x => x.id));\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateCacheLoaded'\n        });\n    }\n\n    async saveCache() {\n        const promises = [];\n        promises.push(TdLibController.send({\n            '@type': 'getChats',\n            chat_list: { '@type': 'chatListMain' },\n            offset_order: '9223372036854775807',\n            offset_chat_id: 0,\n            limit: CHAT_SLICE_LIMIT\n        }));\n        promises.push(TdLibController.send({\n            '@type': 'getChats',\n            chat_list: { '@type': 'chatListArchive' },\n            offset_order: '9223372036854775807',\n            offset_chat_id: 0,\n            limit: CHAT_SLICE_LIMIT\n        }));\n        const [mainChats, archiveChats] = await Promise.all(promises);\n\n        const { filters } = FilterStore;\n\n        CacheStore.save(filters, mainChats.chat_ids, archiveChats.chat_ids);\n    }\n\n    onUpdateChatOrder = update => {\n        const { showArchive: prevShowArchive } = this.state;\n\n        const { current: mainCurrent } = this.dialogListRef;\n        if (mainCurrent && mainCurrent.loading) {\n            return;\n        }\n\n        const { current: archiveCurrent } = this.archiveListRef;\n        if (archiveCurrent && archiveCurrent.loading) {\n            return;\n        }\n\n        const archiveList = ChatStore.chatList.get('chatListArchive');\n        const showArchive = archiveList && archiveList.size > 0;\n\n        this.setState({ showArchive, archiveTitle: getArchiveTitle() }, () => {\n            if (!prevShowArchive && showArchive) {\n                const { current } = this.dialogListRef;\n                if (current.listRef) {\n                    const { current: listCurrent } = current.listRef;\n                    if (listCurrent && listCurrent.scrollTop > 0) {\n                        current.scrollTop += 68;\n                    }\n                }\n            }\n        });\n\n        if (prevShowArchive && !showArchive) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateCloseArchive'\n            });\n        }\n    };\n\n    onClientUpdateContacts = async update => {\n        const { isSmallWidth } = AppStore;\n        if (isSmallWidth) return;\n\n        const { open } = update;\n\n        this.setState({ openContacts: open });\n    };\n\n    onClientUpdateSettings = update => {\n        const { isSmallWidth } = AppStore;\n        if (isSmallWidth) return;\n\n        const { open, chatId } = update;\n\n        this.setState({ openSettings: open, meChatId: chatId });\n    };\n\n    onClientUpdateNewGroup = async update => {\n        const { isSmallWidth } = AppStore;\n        if (isSmallWidth) return;\n\n        const { open } = update;\n\n        this.setState({ openNewGroup: open });\n    };\n\n    onClientUpdateNewChannel = async update => {\n        const { isSmallWidth } = AppStore;\n        if (isSmallWidth) return;\n\n        const { open } = update;\n\n        this.setState({ openNewChannel: open });\n    };\n\n    onClientUpdateArchive = update => {\n        const { open } = update;\n\n        this.setState({ openArchive: open });\n    };\n\n    onClientUpdateThemeChange = update => {\n        this.forceUpdate();\n    };\n\n    onClientUpdateSearchChat = update => {\n        const { isSmallWidth } = AppStore;\n        if (isSmallWidth) return;\n\n        const { chatId, query } = update;\n        const { openSearch, searchChatId, searchText } = this.state;\n\n        if (openSearch && chatId === searchChatId && query === searchText) {\n            return;\n        }\n\n        const header = this.dialogsHeaderRef.current;\n        this.setState(\n            {\n                openSearch: true,\n                searchChatId: chatId,\n                searchText: null,\n                openArchive: false,\n                openContacts: false,\n                openSettings: false,\n                openNewGroup: false,\n                openNewChannel: false,\n            },\n            () => {\n                if (header) {\n                    header.setInitQuery(query);\n                }\n            }\n        );\n    };\n\n    handleHeaderClick = () => {\n        const { openArchive } = this.state;\n        if (openArchive) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateCloseArchive'\n            });\n        } else {\n            this.dialogListRef.current.scrollToTop();\n        }\n    };\n\n    handleSearch = visible => {\n        this.setState({\n            openSearch: visible,\n            searchChatId: 0,\n            searchText: null\n        });\n    };\n\n    handleSelectMessage = (chatId, messageId, openSearch) => {\n        openChat(chatId, messageId);\n\n        const searchChatId = openSearch ? this.state.searchChatId : 0;\n        const searchText = openSearch ? this.state.searchText : null;\n\n        this.setState({\n            openSearch,\n            searchChatId,\n            searchText\n        });\n    };\n\n    handleCloseSearch = () => {\n        this.setState({\n            openSearch: false,\n            searchChatId: 0,\n            searchText: null\n        });\n    };\n\n    handleSearchTextChange = text => {\n        this.setState({\n            searchText: text,\n            query: null\n        });\n    };\n\n    handleSaveCache = () => {\n        this.saveCache();\n    };\n\n    loadChatContents(chatIds) {\n        const store = FileStore.getStore();\n        loadChatsContent(store, chatIds);\n    }\n\n    handleCloseArchive = () => {\n        this.setState({ openArchive: false });\n    };\n\n    handleCloseContacts = () => {\n        this.setState({ openContacts: false });\n    };\n\n    handleCloseSettings = () => {\n        this.setState({ openSettings: false });\n    };\n\n    handleCloseNewGroup = () => {\n        this.setState({ openNewGroup: false });\n    };\n\n    handleCloseNewChannel = () => {\n        this.setState({ openNewChannel: false });\n    };\n\n    render() {\n        const {\n            cache,\n            showArchive,\n            archiveTitle,\n            mainItems,\n            archiveItems,\n            meChatId,\n            openSettings,\n            openContacts,\n            openArchive,\n            openSearch,\n            openNewGroup,\n            openNewChannel,\n            timeout,\n            searchChatId,\n            searchText\n        } = this.state;\n\n        const mainCacheItems = cache ? cache.chats || [] : null;\n        const archiveCacheItems = cache ? cache.archiveChats || [] : null;\n\n        return (\n            <>\n                <div className='dialogs'>\n                    <div className='sidebar-page'>\n                        <DialogsHeader\n                            ref={this.dialogsHeaderRef}\n                            openSearch={openSearch}\n                            timeout={timeout !== 0}\n                            onClick={this.handleHeaderClick}\n                            onSearch={this.handleSearch}\n                            onSearchTextChange={this.handleSearchTextChange}\n                        />\n                        <div className='dialogs-content'>\n                            <div className='dialogs-content-internal'>\n                                <Filters/>\n                                {/*<div className='sidebar-page-top-divider' style={{ zIndex: 1 }}/>*/}\n                                <DialogsList\n                                    type='chatListMain'\n                                    ref={this.dialogListRef}\n                                    cacheItems={mainCacheItems}\n                                    items={mainItems}\n                                    showArchive={showArchive}\n                                    archiveTitle={archiveTitle}\n                                    open={true}\n                                    onSaveCache={this.handleSaveCache}\n                                />\n                            </div>\n                            <CSSTransition\n                                classNames='search'\n                                timeout={timeout}\n                                in={openSearch}\n                                mountOnEnter={true}\n                                unmountOnExit={true}>\n                                <Search\n                                    chatId={searchChatId}\n                                    text={searchText}\n                                    onSelectMessage={this.handleSelectMessage}\n                                    onClose={this.handleCloseSearch}\n                                />\n                            </CSSTransition>\n                        </div>\n                        <UpdatePanel />\n                    </div>\n\n                    <SidebarPage open={openArchive} timeout={timeout} onClose={this.handleCloseArchive}>\n                        <Archive\n                            innerListRef={this.archiveListRef}\n                            items={archiveItems}\n                            cacheItems={archiveCacheItems}\n                        />\n                    </SidebarPage>\n\n                    <SidebarPage open={openContacts} timeout={timeout} onClose={this.handleCloseContacts}>\n                        <Contacts />\n                    </SidebarPage>\n\n                    <SidebarPage open={openSettings} timeout={timeout} onClose={this.handleCloseSettings}>\n                        <Settings chatId={meChatId} />\n                    </SidebarPage>\n\n                    <SidebarPage open={openNewGroup} timeout={timeout} onClose={this.handleCloseNewGroup}>\n                        <NewGroup />\n                    </SidebarPage>\n\n                    <SidebarPage open={openNewChannel} timeout={timeout} onClose={this.handleCloseNewChannel}>\n                        <NewChannel />\n                    </SidebarPage>\n\n                    <SidebarDialog/>\n                </div>\n            </>\n        );\n    }\n}\n\nexport default Dialogs;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport Dialog from '@material-ui/core/Dialog';\nimport ChatInfo from '../ColumnRight/ChatInfo';\nimport { modalManager } from '../../Utils/Modal';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './ChatInfoDialog.css';\n\nclass ChatInfoDialog extends React.Component {\n    state = {\n        chatId: ApplicationStore.dialogChatId\n    };\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { chatId } = this.state;\n\n        return nextState.chatId !== chatId;\n    }\n\n    componentDidMount() {\n        ApplicationStore.on('clientUpdateDialogChatId', this.onClientUpdateDialogChatId);\n        ApplicationStore.on('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.off('clientUpdateDialogChatId', this.onClientUpdateDialogChatId);\n        ApplicationStore.off('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n    }\n\n    onClientUpdateMediaViewerContent = update => {\n        if (ApplicationStore.mediaViewerContent) {\n            this.handleClose();\n        }\n    };\n\n    onClientUpdateDialogChatId = update => {\n        const { chatId } = update;\n\n        this.setState({ chatId });\n    };\n\n    handleClose = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateDialogChatId',\n            chatId: 0\n        });\n    };\n\n    render() {\n        const { chatId } = this.state;\n        if (!chatId) return null;\n\n        return (\n            <Dialog\n                open\n                manager={modalManager}\n                transitionDuration={0}\n                onClose={this.handleClose}\n                classes={{\n                    root: 'chat-info-dialog-root',\n                    container: 'chat-info-dialog-container',\n                    paper: 'chat-info-dialog-paper'\n                }}>\n                <ChatInfo className='chat-info-dialog-content' chatId={chatId} popup />\n            </Dialog>\n        );\n    }\n}\n\nChatInfoDialog.propTypes = {};\n\nexport default ChatInfoDialog;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M2.65383364,2.92607697 L4.145798,9.778632 C4.26700994,10.3353554 4.73555061,10.7489799 5.30300879,10.8002098 L16.196355,11.7836569 C16.3159306,11.7944521 16.4041145,11.9001385 16.3933192,12.0197141 C16.3838746,12.1243302 16.3009783,12.2072294 16.1963626,12.2166777 L5.30295988,13.2005138 C4.73552551,13.2517615 4.26701089,13.6653731 4.14579755,14.2220735 L2.65385781,21.074154 C2.55168485,21.543407 2.84926209,22.0066394 3.31851517,22.1088123 C3.50628037,22.1496954 3.70229947,22.1272304 3.87594675,22.0449272 L23.4110848,12.7858981 C23.8450551,12.5802101 24.0301144,12.0616646 23.8244264,11.6276943 C23.7384721,11.4463438 23.5924353,11.300307 23.4110848,11.2143527 L3.87592461,1.95531307 C3.44195432,1.74962507 2.92340882,1.93468443 2.71772082,2.36865471 C2.63541897,2.54229904 2.61295329,2.73831451 2.65383364,2.92607697 Z' />,\n    'Send'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M19,10 C19.5522847,10 20,10.4477153 20,11 C20,15.0792885 16.9468043,18.445465 13.0009551,18.9379871 L13,22 C13,22.5522847 12.5522847,23 12,23 C11.4871642,23 11.0644928,22.6139598 11.0067277,22.1166211 L11,22 L11.0000487,18.9381123 C7.05371356,18.4460359 4,15.0796344 4,11 C4,10.4477153 4.44771525,10 5,10 C5.55228475,10 6,10.4477153 6,11 C6,14.3137085 8.6862915,17 12,17 C15.3137085,17 18,14.3137085 18,11 C18,10.4477153 18.4477153,10 19,10 Z M12,2 C14.209139,2 16,3.790861 16,6 L16,11 C16,13.209139 14.209139,15 12,15 C9.790861,15 8,13.209139 8,11 L8,6 C8,3.790861 9.790861,2 12,2 Z M12,4 C10.8954305,4 10,4.8954305 10,6 L10,11 C10,12.1045695 10.8954305,13 12,13 C13.1045695,13 14,12.1045695 14,11 L14,6 C14,4.8954305 13.1045695,4 12,4 Z' />,\n    'Microphone'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M11.657825,8.68730116 L7.89384699,12.5266719 C6.53977525,13.9078658 6.53979565,16.118605 7.89389288,17.4997739 C9.18119565,18.812813 11.2598788,18.8798255 12.6276396,17.6859428 L12.8071445,17.5177786 L19.3928802,10.8005213 C21.4766204,8.67512215 21.4766204,5.27313659 19.3928802,3.14773741 C17.4051081,1.12022499 14.1862843,1.0310006 12.0906645,2.90336495 L11.834659,3.14773741 L5.26671543,9.84699003 C2.45333216,12.7166196 2.45333216,17.3098454 5.26671543,20.179475 C7.96150749,22.9281424 12.3352577,23.0332941 15.1578204,20.4629606 L15.452067,20.1794113 L19.2160679,16.340063 C19.6027032,15.945688 19.596429,15.3125541 19.202054,14.9259188 C18.8076791,14.5392835 18.1745452,14.5455577 17.7879099,14.9399327 L13.9520378,18.8511531 C11.9281881,20.8353343 8.67903707,20.8031766 6.6948559,18.7793268 C4.64395201,16.6874204 4.64395201,13.3390446 6.6948559,11.2471382 L13.3088798,4.50180526 C14.6072848,3.22884976 16.6917843,3.24948061 17.9647398,4.54788555 C19.2860006,5.89556155 19.2860006,8.05269718 17.9647398,9.40037319 L11.3764629,16.119959 C10.803533,16.6816592 9.88373353,16.6725557 9.32203335,16.0996258 C8.73040544,15.4961698 8.73039653,14.5302606 9.3220133,13.9267937 L13.0859914,10.0874229 C13.4726243,9.6930457 13.4663463,9.05991185 13.0719691,8.67327889 C12.6775919,8.28664594 12.044458,8.29292392 11.657825,8.68730116 Z' />,\n    'Attach'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport AttachFileIcon from '../../Assets/Icons/Attach';\nimport IconButton from '@material-ui/core/IconButton';\nimport InsertDriveFileIcon from '../../Assets/Icons/Document2';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport PhotoIcon from '../../Assets/Icons/SharedMedia';\nimport PollIcon from '@material-ui/icons/PollOutlined';\nimport { canSendMediaMessages, canSendPolls, isPrivateChat } from '../../Utils/Chat';\nimport { ANIMATION_DURATION_300MS } from '../../Constants';\nimport './AttachButton.css';\n\nclass AttachButton extends React.Component {\n    state = {\n        anchorEl: null\n    };\n\n    handleMenuClick = event => {\n        this.setState({ anchorEl: event.currentTarget });\n    };\n\n    handleMenuClose = () => {\n        this.setState({ anchorEl: null });\n    };\n\n    handleAttachPhoto = () => {\n        this.handleMenuClose();\n\n        const { onAttachPhoto } = this.props;\n        if (!onAttachPhoto) return;\n\n        setTimeout(() => onAttachPhoto(), ANIMATION_DURATION_300MS);\n    };\n\n    handleAttachDocument = () => {\n        this.handleMenuClose();\n\n        const { onAttachDocument } = this.props;\n        if (!onAttachDocument) return;\n\n        setTimeout(() => onAttachDocument(), ANIMATION_DURATION_300MS);\n    };\n\n    handleAttachPoll = () => {\n        this.handleMenuClose();\n\n        const { onAttachPoll } = this.props;\n        if (!onAttachPoll) return;\n\n        onAttachPoll();\n    };\n\n    render() {\n        const { classes, t, chatId } = this.props;\n        const { anchorEl } = this.state;\n\n        return (\n            <>\n                <IconButton\n                    className='inputbox-icon-button'\n                    aria-label='Attach'\n                    open={Boolean(anchorEl)}\n                    onClick={this.handleMenuClick}>\n                    <AttachFileIcon />\n                </IconButton>\n                <Menu\n                    id='attach-menu'\n                    anchorEl={anchorEl}\n                    open={Boolean(anchorEl)}\n                    getContentAnchorEl={null}\n                    disableAutoFocusItem\n                    disableRestoreFocus={true}\n                    anchorOrigin={{\n                        vertical: 'top',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    classes={{\n                        paper: 'attach-button-paper'\n                    }}\n                    onClose={this.handleMenuClose}>\n                    <MenuItem onClick={this.handleAttachPhoto} disabled={!canSendMediaMessages(chatId)}>\n                        <ListItemIcon>\n                            <PhotoIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('AttachPhoto')} />\n                    </MenuItem>\n                    <MenuItem onClick={this.handleAttachDocument} disabled={!canSendMediaMessages(chatId)}>\n                        <ListItemIcon>\n                            <InsertDriveFileIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('AttachDocument')} />\n                    </MenuItem>\n                    {!isPrivateChat(chatId) && (\n                        <MenuItem onClick={this.handleAttachPoll} disabled={!canSendPolls(chatId)}>\n                            <ListItemIcon>\n                                <PollIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Poll')} />\n                        </MenuItem>\n                    )}\n                </Menu>\n            </>\n        );\n    }\n}\n\nAttachButton.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onAttachDocument: PropTypes.func.isRequired,\n    onAttachPhoto: PropTypes.func.isRequired,\n    onAttachPoll: PropTypes.func.isRequired\n};\n\nexport default withTranslation()(AttachButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nexport function focusNode(node, toEnd = false) {\n    if (!node) return;\n\n    if (toEnd && node.childNodes && node.childNodes.length > 0) {\n        const lastNode = node.childNodes[node.childNodes.length - 1];\n        const range = document.createRange();\n        range.setStart(lastNode, lastNode.length);\n        range.collapse(true);\n\n        const selection = window.getSelection();\n        selection.removeAllRanges();\n        selection.addRange(range);\n\n        node.scrollTop = node.scrollHeight;\n    }\n\n    node.focus();\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nconst keys = {\n    backspace: 8,\n    shift: 16,\n    ctrl: 17,\n    alt: 18,\n    delete: 46,\n    cmd: 91,\n    leftArrow: 37,\n    upArrow: 38,\n    rightArrow: 39,\n    downArrow: 40\n};\n\nexport const utils = {\n    special: {},\n    navigational: {},\n    isSpecial(e) {\n        return typeof this.special[e.keyCode] !== 'undefined';\n    },\n    isNavigational(e) {\n        return typeof this.navigational[e.keyCode] !== 'undefined';\n    }\n};\n\nutils.special[keys['backspace']] = true;\nutils.special[keys['shift']] = true;\nutils.special[keys['ctrl']] = true;\nutils.special[keys['alt']] = true;\nutils.special[keys['delete']] = true;\n\nutils.navigational[keys['upArrow']] = true;\nutils.navigational[keys['downArrow']] = true;\nutils.navigational[keys['leftArrow']] = true;\nutils.navigational[keys['rightArrow']] = true;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from '../../Utils/HOC';\nimport { withTranslation } from 'react-i18next';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport Radio from '@material-ui/core/Radio';\nimport Typography from '@material-ui/core/es/Typography/Typography';\nimport { focusNode } from '../../Utils/Component';\nimport { withRestoreRef, withSaveRef } from '../../Utils/HOC';\nimport { utils } from '../../Utils/Key';\nimport { POLL_OPTION_HINT_LENGTH, POLL_OPTION_LENGTH, POLL_OPTION_MAX_LENGTH } from '../../Constants';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './CreatePollOption.css';\n\nclass CreatePollOption extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.optionTextRef = React.createRef();\n\n        this.state = {\n            remainLength: POLL_OPTION_MAX_LENGTH\n        };\n    }\n\n    getText = () => {\n        return this.optionTextRef.current.innerText;\n    };\n\n    focus = (toEnd = false) => {\n        const node = this.optionTextRef.current;\n\n        focusNode(node, toEnd);\n    };\n\n    handleDelete = () => {\n        const { option, onDelete } = this.props;\n        if (!option) return;\n        if (!onDelete) return;\n\n        onDelete(option.id);\n    };\n\n    handleInput = event => {\n        const { option } = this.props;\n\n        event.preventDefault();\n\n        const node = this.optionTextRef.current;\n        const length = node.dataset.length;\n        const maxLength = node.dataset.maxLength;\n        const text = this.getText();\n\n        this.setState({\n            remainLength: length - text.length\n        });\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdatePollOption',\n            id: option.id,\n            text\n        });\n    };\n\n    handleKeyDown = event => {\n        const node = this.optionTextRef.current;\n        const maxLength = node.dataset.maxLength;\n        const innerText = this.getText();\n        const length = innerText.length;\n\n        let hasSelection = false;\n        const selection = window.getSelection();\n        const isSpecial = utils.isSpecial(event);\n        const isNavigational = utils.isNavigational(event);\n\n        if (selection) {\n            hasSelection = !!selection.toString();\n        }\n\n        switch (event.key) {\n            case 'Backspace': {\n                const text = this.getText();\n                if (!text) {\n                    const { option, onDelete } = this.props;\n                    if (onDelete) {\n                        onDelete(option.id, true);\n                    }\n\n                    event.preventDefault();\n                    return false;\n                }\n\n                break;\n            }\n            case 'Enter': {\n                const { option, onFocusNext } = this.props;\n                if (option && onFocusNext) {\n                    onFocusNext(option.id);\n                }\n\n                event.preventDefault();\n                return false;\n            }\n            case 'ArrowUp': {\n                const selection = window.getSelection();\n                if (!selection) break;\n                if (!selection.isCollapsed) break;\n\n                const firstChild = node.childNodes && node.childNodes.length > 0 ? node.childNodes[0] : null;\n\n                if (!firstChild || (selection.anchorNode === firstChild && !selection.anchorOffset)) {\n                    const { option, onFocusPrev } = this.props;\n                    if (onFocusPrev) {\n                        onFocusPrev(option.id);\n                    }\n\n                    event.preventDefault();\n                    return false;\n                }\n\n                break;\n            }\n            case 'ArrowDown': {\n                const selection = window.getSelection();\n                if (!selection) break;\n                if (!selection.isCollapsed) break;\n\n                const lastChild =\n                    node.childNodes && node.childNodes.length > 0 ? node.childNodes[node.childNodes.length - 1] : null;\n\n                if (!lastChild || (selection.anchorNode === lastChild && selection.anchorOffset === lastChild.length)) {\n                    const { option, onFocusNext } = this.props;\n                    if (onFocusNext) {\n                        onFocusNext(option.id);\n                    }\n\n                    event.preventDefault();\n                    return false;\n                }\n\n                break;\n            }\n        }\n\n        if (isSpecial || isNavigational) {\n            return true;\n        }\n\n        if (length >= maxLength && !hasSelection) {\n            event.preventDefault();\n            return false;\n        }\n\n        return true;\n    };\n\n    handlePaste = event => {\n        event.preventDefault();\n\n        const node = this.optionTextRef.current;\n        const maxLength = node.dataset.maxLength;\n\n        const selection = window.getSelection();\n        const selectionString = selection ? selection.toString() : '';\n\n        const innerText = this.getText();\n        if (innerText.length - selection.length >= maxLength) return;\n\n        let pasteText = event.clipboardData.getData('text/plain');\n        if (!pasteText) return;\n\n        pasteText = pasteText.replace('\\r\\n', '\\n').replace('\\n', ' ');\n\n        if (innerText.length - selectionString.length + pasteText.length > maxLength) {\n            pasteText = pasteText.substr(0, maxLength - innerText.length + selectionString.length);\n        }\n        document.execCommand('insertText', false, pasteText);\n    };\n\n    handleChange = () => {\n        const { option } = this.props;\n        if (!option) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdatePollChooseOption',\n            id: option.id\n        });\n    };\n\n    render() {\n        const { t, option } = this.props;\n        const { remainLength } = this.state;\n\n        const { is_chosen } = option;\n\n        return (\n            <div className='create-poll-option'>\n                <div className='create-poll-option-wrapper'>\n                    <Radio\n                        key={Date.now()}\n                        classes={{ root: 'create-poll-radio-root' }}\n                        color='primary'\n                        checked={is_chosen}\n                        onChange={this.handleChange}\n                    />\n                    <div\n                        ref={this.optionTextRef}\n                        className='create-poll-option-text'\n                        contentEditable\n                        suppressContentEditableWarning\n                        placeholder={t('Option')}\n                        data-length={POLL_OPTION_LENGTH}\n                        data-max-length={POLL_OPTION_MAX_LENGTH}\n                        onInput={this.handleInput}\n                        onKeyDown={this.handleKeyDown}\n                        onPaste={this.handlePaste}\n                    />\n                </div>\n                <div className='create-poll-option-delete-button'>\n                    <IconButton className='create-poll-option-button' onClick={this.handleDelete}>\n                        <CloseIcon fontSize='small' />\n                    </IconButton>\n                </div>\n                <div className='create-poll-option-bottom-border' />\n                {remainLength <= POLL_OPTION_LENGTH - POLL_OPTION_HINT_LENGTH && (\n                    <Typography\n                        align='center'\n                        className='create-poll-option-subtitle'\n                        color={remainLength >= 0 ? 'textSecondary' : 'error'}\n                        variant='subtitle1'>\n                        {remainLength}\n                    </Typography>\n                )}\n            </div>\n        );\n    }\n}\n\nCreatePollOption.propTypes = {\n    option: PropTypes.object.isRequired,\n    onDelete: PropTypes.func.isRequired,\n    onFocusPrev: PropTypes.func.isRequired,\n    onFocusNext: PropTypes.func.isRequired\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(CreatePollOption);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withSnackbar } from 'notistack';\nimport { withRestoreRef, withSaveRef, compose } from '../../Utils/HOC';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Divider from '@material-ui/core/Divider';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport IconButton from '@material-ui/core/IconButton';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Typography from '@material-ui/core/Typography';\nimport CreatePollOption from './CreatePollOption';\nimport { focusNode } from '../../Utils/Component';\nimport { utils } from '../../Utils/Key';\nimport { hasPollData, isValidPoll } from '../../Utils/Poll';\nimport { modalManager } from '../../Utils/Modal';\nimport {\n    NOTIFICATION_AUTO_HIDE_DURATION_MS,\n    POLL_OPTIONS_MAX_COUNT,\n    POLL_QUESTION_HINT_LENGTH,\n    POLL_QUESTION_LENGTH,\n    POLL_QUESTION_MAX_LENGTH\n} from '../../Constants';\nimport PollStore from '../../Stores/PollStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './CreatePollDialog.css';\n\nclass CreatePollDialog extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.questionRef = React.createRef();\n        this.optionsRefMap = new Map();\n\n        this.state = {\n            poll: null,\n            confirm: false,\n            remainLength: POLL_QUESTION_MAX_LENGTH\n        };\n    }\n\n    componentDidMount() {\n        PollStore.on('clientUpdatePollChooseOption', this.handleClientUpdatePoll);\n        PollStore.on('clientUpdatePollChangeAnonymous', this.handleClientUpdatePoll);\n        PollStore.on('clientUpdatePollChangeAllowMultipleAnswers', this.handleClientUpdatePoll);\n        PollStore.on('clientUpdatePollChangeType', this.handleClientUpdatePoll);\n        PollStore.on('clientUpdateDeletePoll', this.handleClientUpdatePoll);\n        PollStore.on('clientUpdateDeletePollOption', this.handleClientUpdatePoll);\n        PollStore.on('clientUpdateNewPoll', this.handleClientUpdateNewPoll);\n        PollStore.on('clientUpdateNewPollOption', this.handleClientUpdateNewPollOption);\n        PollStore.on('clientUpdatePollOption', this.handleClientUpdatePoll);\n        PollStore.on('clientUpdatePollQuestion', this.handleClientUpdatePollQuestion);\n    }\n\n    componentWillUnmount() {\n        PollStore.off('clientUpdatePollChooseOption', this.handleClientUpdatePoll);\n        PollStore.off('clientUpdatePollChangeAnonymous', this.handleClientUpdatePoll);\n        PollStore.off('clientUpdatePollChangeAllowMultipleAnswers', this.handleClientUpdatePoll);\n        PollStore.off('clientUpdatePollChangeType', this.handleClientUpdatePoll);\n        PollStore.off('clientUpdateDeletePoll', this.handleClientUpdatePoll);\n        PollStore.off('clientUpdateDeletePollOption', this.handleClientUpdatePoll);\n        PollStore.off('clientUpdateNewPoll', this.handleClientUpdateNewPoll);\n        PollStore.off('clientUpdateNewPollOption', this.handleClientUpdateNewPollOption);\n        PollStore.off('clientUpdatePollOption', this.handleClientUpdatePoll);\n        PollStore.off('clientUpdatePollQuestion', this.handleClientUpdatePollQuestion);\n    }\n\n    handleClientUpdateNewPoll = update => {\n        const { poll } = PollStore;\n\n        this.setState({\n            confirm: false,\n            remainLength: POLL_QUESTION_MAX_LENGTH,\n            poll\n        });\n    };\n\n    handleClientUpdatePollQuestion = update => {\n        const { poll } = PollStore;\n\n        const node = this.questionRef.current;\n        const length = node.dataset.length;\n        const innerText = node.innerText;\n\n        this.setState({\n            remainLength: length - innerText.length,\n            poll\n        });\n    };\n\n    handleClientUpdatePoll = update => {\n        const { poll } = PollStore;\n\n        this.setState({ poll });\n    };\n\n    handleClientUpdateNewPollOption = update => {\n        const { poll } = PollStore;\n\n        this.setState({ poll }, () => {\n            setTimeout(() => {\n                const node = this.optionsRefMap.get(poll.options.length - 1);\n\n                node.focus(true);\n            });\n        });\n    };\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { poll } = this.state;\n\n        if (poll && !prevState.poll) {\n            setTimeout(() => {\n                focusNode(this.questionRef.current, true);\n            }, 0);\n        }\n    }\n\n    handleKeyDown = event => {\n        const node = this.questionRef.current;\n        const maxLength = node.dataset.maxLength;\n        const innerText = node.innerText;\n        const length = innerText.length;\n\n        let hasSelection = false;\n        const selection = window.getSelection();\n        const isSpecial = utils.isSpecial(event);\n        const isNavigational = utils.isNavigational(event);\n\n        if (selection) {\n            hasSelection = !!selection.toString();\n        }\n\n        switch (event.key) {\n            case 'Enter': {\n                if (!event.shiftKey) {\n                    this.handleFocusNextOption(0);\n\n                    event.preventDefault();\n                    return false;\n                }\n\n                break;\n            }\n            case 'ArrowDown': {\n                const selection = window.getSelection();\n                if (!selection) break;\n                if (!selection.isCollapsed) break;\n\n                const lastChild =\n                    node.childNodes && node.childNodes.length > 0 ? node.childNodes[node.childNodes.length - 1] : null;\n\n                if (!lastChild || (selection.anchorNode === lastChild && selection.anchorOffset === lastChild.length)) {\n                    this.handleFocusNextOption(0);\n\n                    event.preventDefault();\n                    return false;\n                }\n\n                break;\n            }\n        }\n\n        if (isSpecial || isNavigational) {\n            return true;\n        }\n\n        if (length >= maxLength && !hasSelection) {\n            event.preventDefault();\n            return false;\n        }\n\n        return true;\n    };\n\n    handlePaste = event => {\n        event.preventDefault();\n\n        const node = this.questionRef.current;\n        const maxLength = node.dataset.maxLength;\n\n        const selection = window.getSelection();\n        const selectionString = selection ? selection.toString() : '';\n\n        const innerText = node.innerText;\n        if (innerText.length - selection.length >= maxLength) return;\n\n        let pasteText = event.clipboardData.getData('text/plain');\n        if (!pasteText) return;\n\n        if (innerText.length - selectionString.length + pasteText.length > maxLength) {\n            pasteText = pasteText.substr(0, maxLength - innerText.length + selectionString.length);\n        }\n        document.execCommand('insertText', false, pasteText);\n    };\n\n    handleInput = event => {\n        event.preventDefault();\n\n        const node = this.questionRef.current;\n        //const length = node.dataset.length;\n\n        const innerText = node.innerText;\n        const innerHtml = node.innerHTML;\n\n        if (innerHtml === '<br>') {\n            node.innerText = '';\n        }\n\n        // this.setState({\n        //     remainLength: length - innerText.length\n        // });\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdatePollQuestion',\n            question: innerText\n        });\n    };\n\n    handleAddOption = () => {\n        const { poll } = this.state;\n        if (!poll) return;\n\n        const { options } = poll;\n        if (options.length >= POLL_OPTIONS_MAX_COUNT) return;\n\n        const option = {\n            id: Date.now(),\n            text: ''\n        };\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateNewPollOption',\n            option\n        });\n    };\n\n    handleDeleteOption = (id, backspace = false) => {\n        if (backspace) {\n            this.handleDeleteByBackspace(id);\n        } else {\n            this.handleDelete(id);\n        }\n    };\n\n    handleDelete = id => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateDeletePollOption',\n            id\n        });\n    };\n\n    handleDeleteByBackspace = id => {\n        const { poll } = this.state;\n        if (!poll) return;\n\n        const { options } = poll;\n\n        const index = options.findIndex(x => x.id === id);\n        const prevIndex = index - 1;\n        let deleteOption = true;\n        for (let i = index; i < options.length; i++) {\n            const { text } = options[i];\n            if (text) {\n                deleteOption = false;\n                break;\n            }\n        }\n\n        if (deleteOption) {\n            this.handleDeleteOption(id);\n        }\n\n        const prevNode = this.optionsRefMap.get(prevIndex);\n        if (!prevNode) {\n            const element = this.questionRef.current;\n\n            focusNode(element, true);\n            return;\n        }\n\n        prevNode.focus(true);\n    };\n\n    handleFocusPrevOption = id => {\n        const { poll } = this.state;\n        if (!poll) return;\n\n        const { options } = poll;\n\n        const index = options.findIndex(x => x.id === id);\n        const prevIndex = index - 1;\n\n        const prevNode = this.optionsRefMap.get(prevIndex);\n        if (!prevNode) {\n            const element = this.questionRef.current;\n\n            focusNode(element, false);\n            return;\n        }\n\n        prevNode.focus(false);\n    };\n\n    handleFocusNextOption = id => {\n        const { poll } = this.state;\n        if (!poll) return;\n\n        const { options } = poll;\n\n        const index = options.findIndex(x => x.id === id);\n        const nextIndex = index + 1;\n\n        const nextNode = this.optionsRefMap.get(nextIndex);\n        if (!nextNode) {\n            const text = index >= 0 && index < options.length ? options[index].text : '';\n            if (options.length && !text) {\n                return;\n            }\n\n            this.handleAddOption();\n            return;\n        }\n\n        nextNode.focus(nextNode, true);\n    };\n\n    getHint = () => {\n        const { poll } = this.state;\n        if (!poll) return;\n\n        const { options } = poll;\n\n        const addCount = POLL_OPTIONS_MAX_COUNT - options.length;\n\n        if (addCount <= 0) {\n            return 'You have added the maximum number of options.';\n        }\n        if (addCount === 1) {\n            return 'You can add 1 more option.';\n        }\n\n        return `You can add ${POLL_OPTIONS_MAX_COUNT - options.length} more options.`;\n    };\n\n    handleClose = () => {\n        const { poll } = this.state;\n\n        if (hasPollData(poll)) {\n            this.setState({ confirm: true });\n        } else {\n            this.handleConfirmationDone();\n        }\n    };\n\n    handleSend = () => {\n        const { onSend } = this.props;\n\n        const inputMessagePoll = PollStore.getInputMessagePoll();\n        if (!inputMessagePoll) return;\n\n        onSend(inputMessagePoll);\n\n        this.handleConfirmationDone();\n    };\n\n    handleConfirmationClose = () => {\n        this.setState({ confirm: false });\n    };\n\n    handleConfirmationDone = () => {\n        this.handleConfirmationClose();\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateDeletePoll'\n        });\n    };\n\n    handleChangeAnonymous = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdatePollChangeAnonymous'\n        });\n    };\n\n    handleChangeAllowMultipleAnswers = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdatePollChangeAllowMultipleAnswers'\n        });\n    };\n\n    handleChangeType = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdatePollChangeType'\n        });\n    };\n\n    handleScheduledAction = message => {\n        const { enqueueSnackbar, closeSnackbar } = this.props;\n\n        const snackKey = enqueueSnackbar(message, {\n            autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\n            preventDuplicate: true,\n            action: [\n                <IconButton\n                    key='close'\n                    aria-label='Close'\n                    color='inherit'\n                    className='notification-close-button'\n                    onClick={() => closeSnackbar(snackKey)}>\n                    <CloseIcon />\n                </IconButton>\n            ]\n        });\n    };\n\n    handleAllowMultipleAnswersClick = event => {\n        const { t } = this.props;\n        const { poll } = this.state;\n        if (!poll) return;\n\n        const quizPoll = poll.type['@type'] === 'pollTypeQuiz';\n        if (quizPoll) {\n            event.stopPropagation();\n\n            this.handleScheduledAction(t('PollQuizOneRightAnswer'));\n        }\n    };\n\n    render() {\n        const { t } = this.props;\n        const { remainLength, confirm, poll } = this.state;\n        if (!poll) return null;\n\n        const { is_anonymous } = poll;\n\n        const options = poll ? poll.options : [];\n        const allowMultipleAnswers = poll.type.allow_multiple_answers;\n        const allowMultipleAnswersDisabled = poll.type['@type'] !== 'pollTypeRegular';\n        const quizPoll = poll.type['@type'] === 'pollTypeQuiz';\n\n        this.optionsRefMap.clear();\n        const items = options.map((x, i) => (\n            <CreatePollOption\n                ref={el => this.optionsRefMap.set(i, el)}\n                key={x.id}\n                option={x}\n                onDelete={this.handleDeleteOption}\n                onFocusPrev={this.handleFocusPrevOption}\n                onFocusNext={this.handleFocusNextOption}\n            />\n        ));\n\n        const canAddOption = POLL_OPTIONS_MAX_COUNT - options.length > 0;\n        const hint = this.getHint();\n\n        return (\n            <>\n                <Dialog\n                    className={classNames('create-poll-dialog', { 'create-quiz-dialog': quizPoll })}\n                    open\n                    manager={modalManager}\n                    transitionDuration={0}\n                    onClose={this.handleClose}\n                    aria-labelledby='dialog-title'>\n                    <DialogTitle id='dialog-title'>{t('NewPoll')}</DialogTitle>\n                    <DialogContent classes={{ root: 'create-poll-dialog-root' }}>\n                        <div className='create-poll-dialog-question-title'>\n                            <Typography color='primary' variant='subtitle1' style={{ flexGrow: 1 }}>\n                                {t('Question')}\n                            </Typography>\n                            {remainLength <= POLL_QUESTION_LENGTH - POLL_QUESTION_HINT_LENGTH && (\n                                <Typography color={remainLength >= 0 ? 'textSecondary' : 'error'} variant='subtitle1'>\n                                    {remainLength}\n                                </Typography>\n                            )}\n                        </div>\n                        <div\n                            ref={this.questionRef}\n                            id='create-poll-dialog-question'\n                            contentEditable\n                            suppressContentEditableWarning\n                            placeholder={t('QuestionHint')}\n                            data-length={POLL_QUESTION_LENGTH}\n                            data-max-length={POLL_QUESTION_MAX_LENGTH}\n                            onPaste={this.handlePaste}\n                            onKeyDown={this.handleKeyDown}\n                            onInput={this.handleInput}\n                        />\n                        <Divider className='divider' />\n                        <Typography color='primary' variant='subtitle1'>\n                            {t('PollOptions')}\n                        </Typography>\n                        <List classes={{ root: 'create-poll-dialog-list' }}>\n                            {items}\n                            {canAddOption && (\n                                <ListItem\n                                    selected={false}\n                                    className='create-poll-add-option'\n                                    button\n                                    onClick={this.handleAddOption}>\n                                    <ListItemText disableTypography primary={t('AddAnOption')} />\n                                </ListItem>\n                            )}\n                        </List>\n                        <Typography>{hint}</Typography>\n                        <Divider className='divider' />\n                        <Typography color='primary' variant='subtitle1'>\n                            {t('Settings')}\n                        </Typography>\n                        <FormGroup>\n                            <FormControlLabel\n                                control={\n                                    <Checkbox\n                                        color='primary'\n                                        checked={is_anonymous}\n                                        onChange={this.handleChangeAnonymous}\n                                    />\n                                }\n                                label={t('PollAnonymous')}\n                            />\n                            <div onClick={this.handleAllowMultipleAnswersClick} style={{ background: 'transparent' }}>\n                                <FormControlLabel\n                                    control={\n                                        <Checkbox\n                                            color='primary'\n                                            disabled={allowMultipleAnswersDisabled}\n                                            checked={allowMultipleAnswers}\n                                            onChange={this.handleChangeAllowMultipleAnswers}\n                                        />\n                                    }\n                                    label={t('PollMultiple')}\n                                />\n                            </div>\n                            <FormControlLabel\n                                control={\n                                    <Checkbox color='primary' checked={quizPoll} onChange={this.handleChangeType} />\n                                }\n                                label={t('PollQuiz')}\n                            />\n                        </FormGroup>\n                        <Typography>{t('QuizInfo')}</Typography>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button color='primary' onClick={this.handleClose}>\n                            {t('Cancel')}\n                        </Button>\n                        {isValidPoll(poll) && (\n                            <Button color='primary' onClick={this.handleSend}>\n                                {t('Create')}\n                            </Button>\n                        )}\n                    </DialogActions>\n                </Dialog>\n                <Dialog\n                    className='create-poll-dialog-root'\n                    open={confirm}\n                    manager={modalManager}\n                    transitionDuration={0}\n                    onClose={this.handleConfirmationClose}\n                    aria-labelledby='dialog-title'>\n                    <DialogTitle id='dialog-title'>{t('CancelPollAlertTitle')}</DialogTitle>\n                    <DialogContent classes={{ root: 'create-poll-dialog-root' }}>\n                        {t('CancelPollAlertText')}\n                    </DialogContent>\n                    <DialogActions>\n                        <Button color='primary' onClick={this.handleConfirmationClose}>\n                            {t('Cancel')}\n                        </Button>\n                        <Button color='primary' onClick={this.handleConfirmationDone}>\n                            {t('Ok')}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </>\n        );\n    }\n}\n\nCreatePollDialog.propTypes = {\n    onSend: PropTypes.func.isRequired\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withSnackbar,\n    withRestoreRef()\n);\n\nexport default enhance(CreatePollDialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport TextField from '@material-ui/core/TextField';\nimport { validateUrl } from '../../Utils/Url';\nimport { modalManager } from '../../Utils/Modal';\nimport './EditUrlDialog.css';\n\nclass EditUrlDialog extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.textRef = React.createRef();\n        this.textInputRef = React.createRef();\n        this.urlRef = React.createRef();\n        this.urlInputRef = React.createRef();\n\n        this.state = {};\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { defaultText, defaultUrl, open } = this.props;\n\n        if (open && prevProps.open !== open) {\n            setTimeout(() => {\n                const text = this.textInputRef.current;\n                const url = this.urlInputRef.current;\n\n                if (!text) return;\n                if (!url) return;\n\n                if (!defaultText) {\n                    text.focus();\n                } else if (!defaultUrl) {\n                    url.focus();\n                } else {\n                    text.focus();\n                    text.select();\n                }\n            }, 0);\n        }\n    }\n\n    componentDidMount() {\n        // const { defaultText, defaultUrl } = this.props;\n        //\n        // const text = this.textInputRef.current;\n        // const url = this.urlInputRef.current;\n        //\n        // if (!text) return;\n        // if (!url) return;\n        //\n        // setTimeout(() => {\n        //     if (!defaultText) {\n        //         text.focus();\n        //     } else if (!defaultUrl) {\n        //         url.focus();\n        //     } else {\n        //         text.focus();\n        //         // text.select();\n        //     }\n        // }, 0);\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { defaultText, defaultUrl, onDone, onCancel, open } = this.props;\n        const { textError, urlError } = this.state;\n\n        if (nextProps.defaultText !== defaultText) {\n            return true;\n        }\n\n        if (nextProps.defaultUrl !== defaultUrl) {\n            return true;\n        }\n\n        if (nextState.textError !== textError) {\n            return true;\n        }\n\n        if (nextState.urlError !== urlError) {\n            return true;\n        }\n\n        if (nextProps.onDone !== onDone) {\n            return true;\n        }\n\n        if (nextProps.onCancel !== onCancel) {\n            return true;\n        }\n\n        if (nextProps.open !== open) {\n            return true;\n        }\n\n        return false;\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (state.prevOpen !== props.open) {\n            return {\n                prevOpen: true,\n                textError: false,\n                urlError: false,\n                text: null,\n                url: null\n            };\n        }\n\n        return null;\n    }\n\n    handleTextKeyDown = event => {\n        if (event.key === 'Enter') {\n            this.urlInputRef.current.focus();\n            event.preventDefault();\n            event.stopPropagation();\n        }\n    };\n\n    handleUrlKeyDown = event => {\n        if (event.key === 'Enter') {\n            this.handleDone();\n            event.preventDefault();\n            event.stopPropagation();\n        }\n    };\n\n    handleTextChange = event => {\n        this.setState({\n            text: event.target.value\n        });\n    };\n\n    handleUrlChange = event => {\n        this.setState({\n            url: event.target.value\n        });\n    };\n\n    handleDone = () => {\n        const { defaultText, defaultUrl } = this.props;\n        let { text, url } = this.state;\n\n        text = text !== null ? text : defaultText;\n        url = url !== null ? url : defaultUrl;\n\n        if (!text && !url) {\n            this.textInputRef.current.focus();\n            return;\n        }\n\n        if (!text) {\n            this.setState({ textError: true });\n            this.textInputRef.current.focus();\n            return;\n        }\n\n        url = validateUrl(url);\n        if (!url) {\n            this.setState({ urlError: true });\n            this.urlInputRef.current.focus();\n            return;\n        }\n\n        const { onDone } = this.props;\n\n        onDone(text, url);\n    };\n\n    handleCancel = () => {\n        const { onCancel } = this.props;\n\n        onCancel();\n    };\n\n    render() {\n        const { open, defaultUrl, defaultText, t } = this.props;\n        const { textError, urlError } = this.state;\n        if (!open) return null;\n\n        return (\n            <Dialog\n                manager={modalManager}\n                transitionDuration={0}\n                open={true}\n                onClose={this.handleCancel}\n                aria-labelledby='edit-url-dialog-title'>\n                <DialogTitle id='edit-url-dialog-title'>{t('CreateLink')}</DialogTitle>\n                <DialogContent>\n                    <div style={{ display: 'flex', flexDirection: 'column', width: 260 }}>\n                        <TextField\n                            ref={this.textRef}\n                            inputRef={this.textInputRef}\n                            label={t('Text')}\n                            margin='normal'\n                            autoComplete='off'\n                            defaultValue={defaultText}\n                            error={textError}\n                            onChange={this.handleTextChange}\n                            onKeyDown={this.handleTextKeyDown}\n                        />\n                        <TextField\n                            ref={this.urlRef}\n                            inputRef={this.urlInputRef}\n                            label={t('URL')}\n                            margin='normal'\n                            autoComplete='off'\n                            defaultValue={defaultUrl}\n                            error={urlError}\n                            onChange={this.handleUrlChange}\n                            onKeyDown={this.handleUrlKeyDown}\n                        />\n                    </div>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={this.handleCancel} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={this.handleDone} color='primary'>\n                        {t('Create')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nEditUrlDialog.propTypes = {\n    open: PropTypes.bool,\n    defaultText: PropTypes.string,\n    defaultUrl: PropTypes.string,\n    onDone: PropTypes.func.isRequired,\n    onCancel: PropTypes.func.isRequired\n};\n\nexport default withTranslation()(EditUrlDialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { getSrc } from '../../Utils/File';\nimport { isBlurredThumbnail } from '../../Utils/Media';\nimport { hasVideoNote } from '../../Utils/Message';\nimport { THUMBNAIL_BLURRED_SIZE_90 } from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport './ReplyTile.css';\n\nclass ReplyTile extends React.Component {\n    componentDidMount() {\n        FileStore.on('clientUpdateAnimationThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdateAudioThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdateDocumentThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdatePhotoBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdateStickerThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdateVideoThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdateVideoNoteThumbnailBlob', this.onClientUpdatePhotoBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdateAnimationThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.off('clientUpdateAudioThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.off('clientUpdateDocumentThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.off('clientUpdatePhotoBlob', this.onClientUpdatePhotoBlob);\n        FileStore.off('clientUpdateStickerThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.off('clientUpdateVideoThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.off('clientUpdateVideoNoteThumbnailBlob', this.onClientUpdatePhotoBlob);\n    }\n\n    onClientUpdatePhotoBlob = update => {\n        const { chatId, messageId, photoSize } = this.props;\n        if (!photoSize) return;\n\n        const photo = photoSize.photo || photoSize.file;\n        if (!photo) return;\n\n        if (update.chatId === chatId && update.messageId === messageId && update.fileId === photo.id) {\n            this.forceUpdate();\n        }\n    };\n\n    render() {\n        const { chatId, messageId, photoSize, minithumbnail } = this.props;\n        if (!photoSize) return null;\n\n        const photo = photoSize.photo || photoSize.file;\n        if (!photo) return null;\n\n        const miniSrc = minithumbnail ? 'data:image/jpeg;base64, ' + minithumbnail.data : null;\n        const src = getSrc(photo);\n        const isBlurred = (!src && miniSrc) || isBlurredThumbnail(photoSize, THUMBNAIL_BLURRED_SIZE_90);\n        const isVideoNote = hasVideoNote(chatId, messageId);\n        const hasSrc = Boolean(src || miniSrc);\n\n        return (\n            <div className='reply-tile'>\n                {hasSrc && (\n                    <img\n                        className={classNames(\n                            'reply-tile-photo',\n                            { 'reply-tile-photo-round': isVideoNote },\n                            { 'media-blurred': src && isBlurred },\n                            { 'media-mini-blurred': !src && miniSrc && isBlurred }\n                        )}\n                        draggable={false}\n                        src={src || miniSrc}\n                        alt=''\n                    />\n                )}\n            </div>\n        );\n    }\n}\n\nReplyTile.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    photoSize: PropTypes.object,\n    minithumbnail: PropTypes.object\n};\n\nexport default ReplyTile;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport ReplyTile from '../Tile/ReplyTile';\nimport { getContent, getTitle, isDeletedMessage, getReplyPhotoSize, getReplyMinithumbnail } from '../../Utils/Message';\nimport { openChat } from '../../Actions/Client';\nimport MessageStore from '../../Stores/MessageStore';\nimport './Reply.css';\n\nclass Reply extends React.Component {\n    componentDidMount() {\n        MessageStore.on('getMessageResult', this.onGetMessageResult);\n    }\n\n    componentWillUnmount() {\n        MessageStore.off('getMessageResult', this.onGetMessageResult);\n    }\n\n    onGetMessageResult = result => {\n        const { chatId, messageId } = this.props;\n\n        if (chatId === result.chat_id && messageId === result.id) {\n            this.forceUpdate();\n        }\n    };\n\n    handleClick = event => {\n        event.stopPropagation();\n    };\n\n    handleOpen = event => {\n        if (event.button !== 0) return;\n\n        event.stopPropagation();\n\n        const { chatId, messageId, onClick } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n        if (isDeletedMessage(message)) return null;\n\n        openChat(chatId, messageId, false);\n        if (onClick) onClick();\n    };\n\n    render() {\n        const { t, chatId, messageId } = this.props;\n        let { title } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n\n        title = title || getTitle(message, t);\n        let content = !message ? t('Loading') : getContent(message, t);\n        const photoSize = getReplyPhotoSize(chatId, messageId);\n        const minithumbnail = getReplyMinithumbnail(chatId, messageId);\n\n        if (isDeletedMessage(message)) {\n            title = null;\n            content = t('DeletedMessage');\n        }\n\n        return (\n            <div className='reply' onMouseDown={this.handleOpen} onClick={this.handleClick}>\n                <div className='reply-wrapper'>\n                    <div className='border reply-border' />\n                    {photoSize && (\n                        <ReplyTile\n                            chatId={chatId}\n                            messageId={messageId}\n                            photoSize={photoSize}\n                            minithumbnail={minithumbnail}\n                        />\n                    )}\n                    <div className='reply-content'>\n                        {title && <div className='reply-content-title'>{title}</div>}\n                        <div className={classNames('reply-content-subtitle')}>{content}</div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nReply.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    title: PropTypes.string,\n    onClick: PropTypes.func\n};\n\nexport default withTranslation()(Reply);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport Reply from '../Message/Reply';\nimport { editMessage, replyMessage } from '../../Actions/Client';\nimport MessageStore from '../../Stores/MessageStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './InputBoxHeader.css';\n\nclass InputBoxHeader extends React.Component {\n    componentDidMount() {\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    componentWillUnmount() {\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    onUpdateMessageContent = update => {\n        const { chatId, messageId, editMessageId } = this.props;\n        const { chat_id, message_id } = update;\n\n        if (chatId !== chat_id) return;\n        if (messageId !== message_id && editMessageId !== message_id) return;\n\n        this.forceUpdate();\n    };\n\n    handleClose = () => {\n        const { chatId, editMessageId } = this.props;\n\n        if (editMessageId) {\n            editMessage(chatId, 0);\n        } else {\n            replyMessage(chatId, 0);\n        }\n    };\n\n    render() {\n        const { chatId, messageId, editMessageId, t, onClick } = this.props;\n        if (!chatId) return null;\n        if (!messageId && !editMessageId) return null;\n\n        return (\n            <div className='inputbox-header'>\n                <div className='inputbox-header-left-column'>\n                    <IconButton className='inputbox-icon-button' aria-label='Close' onClick={this.handleClose}>\n                        <CloseIcon />\n                    </IconButton>\n                </div>\n                <div className='inputbox-header-middle-column'>\n                    <Reply\n                        chatId={chatId}\n                        messageId={editMessageId || messageId}\n                        title={editMessageId ? t('EditMessage') : null}\n                        onClick={onClick}\n                    />\n                </div>\n                <div className='inputbox-header-right-column' />\n            </div>\n        );\n    }\n}\n\nInputBoxHeader.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    editMessageId: PropTypes.number,\n    onClick: PropTypes.func\n};\n\nexport default withTranslation()(InputBoxHeader);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from '../../Utils/HOC';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport { modalManager } from '../../Utils/Modal';\nimport './PasteFilesDialog.css';\n\nclass PasteFilesDialog extends React.Component {\n    handleDone = () => {\n        const { onConfirm } = this.props;\n        onConfirm();\n    };\n\n    handleCancel = () => {\n        const { onCancel } = this.props;\n        onCancel();\n    };\n\n    render() {\n        const { files, t } = this.props;\n        if (!files) return null;\n\n        return (\n            <Dialog\n                manager={modalManager}\n                transitionDuration={0}\n                open={true}\n                onClose={this.handleCancel}\n                aria-labelledby='delete-dialog-title'>\n                <DialogTitle id='delete-dialog-title'>{t('Confirm')}</DialogTitle>\n                <DialogContent>\n                    <DialogContentText>\n                        {files.length > 1 ? t('SendFilesConfirmation') : t('SendFileConfirmation')}\n                    </DialogContentText>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={this.handleCancel} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={this.handleDone} color='primary'>\n                        {t('Ok')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nPasteFilesDialog.propTypes = {\n    files: PropTypes.array,\n    onConfirm: PropTypes.func.isRequired,\n    onCancel: PropTypes.func.isRequired\n};\n\nconst enhance = compose(withTranslation());\n\nexport default enhance(PasteFilesDialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport MessageStore from '../../Stores/MessageStore';\nimport './RecordTimer.css';\n\nclass RecordTimer extends React.Component {\n    state = { };\n\n    componentDidMount() {\n        MessageStore.on('clientUpdateRecordStart', this.onClientUpdateRecordStart);\n        MessageStore.on('clientUpdateRecordStop', this.onClientUpdateRecordStop);\n        MessageStore.on('clientUpdateRecordError', this.onClientUpdateRecordError);\n    }\n\n    componentWillUnmount() {\n        MessageStore.off('clientUpdateRecordStart', this.onClientUpdateRecordStart);\n        MessageStore.off('clientUpdateRecordStop', this.onClientUpdateRecordStop);\n        MessageStore.off('clientUpdateRecordError', this.onClientUpdateRecordError);\n    }\n\n    onClientUpdateRecordStart = () => {\n        this.timer = setInterval(() => {\n            const now = new Date();\n            const diff = now - this.startTime;\n\n            // console.log('[recordTimer] ');\n            this.setState({\n                time: diff\n            });\n        }, 25);\n        this.startTime = new Date();\n    }\n\n    onClientUpdateRecordStop = () => {\n        if (this.timer) {\n            clearTimeout(this.timer);\n        }\n\n        this.setState({\n            time: null\n        });\n    }\n\n    onClientUpdateRecordError = () => {\n        if (this.timer) {\n            clearTimeout(this.timer);\n        }\n\n        this.setState({\n            time: null\n        });\n    }\n\n    normalizeM(n) {\n        let msStr = n.toString();\n        if (msStr.length === 1) {\n            msStr += '0'\n        } else if (msStr.length > 2) {\n            msStr = msStr.substr(0, 2);\n        }\n\n        return msStr;\n    }\n\n    normalizeS(n) {\n        let msStr = n.toString();\n        if (msStr.length === 1) {\n            msStr = '0' + msStr;\n        }\n\n        return msStr;\n    }\n\n    msToTime(s) {\n        let ms = (s % 1000);\n        s = (s - ms) / 1000;\n        let secs = s % 60;\n        s = (s - secs) / 60;\n        let mins = s % 60;\n        let hrs = (s - mins) / 60;\n\n        let result = mins + ':' + this.normalizeS(secs) + ',' + this.normalizeM(ms);\n        if (hrs > 0) {\n            result = hrs + ':' + result;\n        }\n\n        return result;\n    }\n\n    render() {\n        const { time } = this.state;\n        if (!time) return null;\n\n        return (\n            <div className='record-timer'>\n                {this.msToTime(time)}\n                <div className='record-timer-icon'/>\n            </div>\n        );\n    }\n\n}\n\nRecordTimer.propTypes = {};\n\nexport default RecordTimer;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport EditIcon from '@material-ui/icons/Edit';\nimport IconButton from '@material-ui/core/IconButton';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport EditUrlDialog from './EditUrlDialog';\nimport { focusInput } from '../../Utils/DOM';\nimport { editMessage as editMessageAction } from '../../Actions/Client';\nimport { getEntities, getNodes } from '../../Utils/Message';\nimport { getMedia, getMediaPhotoFromFile } from '../../Utils/Media';\nimport { modalManager } from '../../Utils/Modal';\nimport MessageStore from '../../Stores/MessageStore';\nimport './EditMediaDialog.css';\n\nclass EditMediaDialog extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.captionRef = React.createRef();\n        this.editMediaRef = React.createRef();\n\n        this.state = {\n\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { prevOpen } = state;\n        const { open, chatId, messageId, newItem } = props;\n\n        if (prevOpen !== open) {\n            if (open) {\n                const editMessage = MessageStore.get(chatId, messageId);\n                let sendAsPhoto = false;\n                if (editMessage && editMessage.content['@type'] === 'messagePhoto') {\n                    sendAsPhoto = true;\n                } else if (newItem && newItem.media && newItem.media['@type'] === 'messagePhoto'){\n                    sendAsPhoto = true;\n                }\n\n                return {\n                    prevOpen: true,\n                    sendAsPhoto,\n                    editMessage,\n                    editMedia: null,\n                    editFile: null\n                }\n            } else {\n                return {\n                    prevOpen: false,\n                    sendAsPhoto: false,\n                    editMessage: null,\n                    editMedia: null,\n                    editFile: null\n                }\n            }\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        document.addEventListener('selectionchange', this.handleSelectionChange, true);\n    }\n\n    componentWillUnmount() {\n        document.removeEventListener('selectionchange', this.handleSelectionChange, true);\n    }\n\n    handleSelectionChange = () => {\n        if (document.activeElement === this.captionRef.current) {\n            this.saveSelection();\n        }\n    };\n\n    handleEnter = () => {\n        const { chatId, messageId, open, newItem } = this.props;\n        if (!open) return;\n\n        let text = null;\n        let caption = null;\n        const message = MessageStore.get(chatId, messageId);\n        if (message) {\n            const { content } = message;\n            if (content) {\n                text = content.text;\n                caption = content.caption;\n            }\n        }\n\n        const element = this.captionRef.current;\n        if (!element) return;\n\n        if (text) {\n            this.setFormattedText(text);\n        } else if (caption) {\n            this.setFormattedText(caption);\n        } else if (newItem && newItem.caption) {\n            element.innerHTML = newItem.caption;\n        } else {\n            element.innerText = null;\n        }\n\n        focusInput(element);\n    };\n\n    setFormattedText(formattedText) {\n        const { t } = this.props;\n        const element = this.captionRef.current;\n\n        if (!formattedText) {\n            element.innerText = null;\n            return;\n        }\n\n        const { text, entities } = formattedText;\n        try {\n            const nodes = getNodes(text, entities, t);\n            element.innerHTML = null;\n            nodes.forEach(x => {\n                element.appendChild(x);\n            });\n        } catch (e) {\n            element.innerText = text;\n        }\n    }\n\n    handleDone = () => {\n        const { chatId, newItem, onSend, onEdit } = this.props;\n        const { editMessage, editFile, editMedia, sendAsPhoto } = this.state;\n\n        const element = this.captionRef.current;\n        if (!element) return;\n\n        const { innerHTML } = element;\n\n        element.innerText = null;\n\n        const { text, entities } = getEntities(innerHTML);\n\n        const caption = {\n            '@type': 'formattedText',\n            text,\n            entities\n        };\n\n        const isEditing = Boolean(editMessage);\n        if (isEditing) {\n            if (editMedia) {\n                const { photo } = editMedia;\n                if (!photo) return;\n\n                const { sizes } = photo;\n                if (!sizes) return;\n\n                const size = sizes[sizes.length - 1];\n\n                const { width, height } = size;\n\n                const content = {\n                    '@type': 'inputMessagePhoto',\n                    photo: { '@type': 'inputFileBlob', name: editFile.name, data: editFile },\n                    width,\n                    height,\n                    caption\n                };\n\n                onEdit(null, content);\n            } else {\n                onEdit(caption, null);\n            }\n\n            editMessageAction(chatId, 0);\n        } else {\n            const { media, file } = newItem;\n            const { audio, photo, document } = media;\n\n            let content = null;\n            if (photo) {\n                const { sizes } = photo;\n                if (!sizes) return;\n\n                const size = sizes[sizes.length - 1];\n\n                const { width, height } = size;\n\n                content = sendAsPhoto\n                    ? {\n                        '@type': 'inputMessagePhoto',\n                        photo: { '@type': 'inputFileBlob', name: file.name, data: file },\n                        width,\n                        height,\n                        caption\n                    }\n                    : {\n                        '@type': 'inputMessageDocument',\n                        document: { '@type': 'inputFileBlob', name: file.name, data: file },\n                        thumbnail: null,\n                        caption\n                    };\n            } else if (document) {\n                content = {\n                    '@type': 'inputMessageDocument',\n                    document: { '@type': 'inputFileBlob', name: file.name, data: file },\n                    thumbnail: null,\n                    caption\n                };\n            } else if (audio) {\n                const { duration, title, performer } = audio;\n\n                content = {\n                    '@type': 'inputMessageAudio',\n                    audio: { '@type': 'inputFileBlob', name: file.name, data: file },\n                    thumbnail: null,\n                    duration,\n                    title,\n                    performer,\n                    caption\n                };\n            }\n            if (!content) return;\n\n            onSend(content, file);\n        }\n    };\n\n    handleCancel = () => {\n        const { chatId, messageId, onCancel } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        const isEditing = Boolean(message);\n\n        if (isEditing) {\n            editMessageAction(chatId, 0);\n        }\n\n        onCancel();\n    };\n\n    handleKeyDown = event => {\n        const { altKey, ctrlKey, key, keyCode, code, metaKey, shiftKey, repeat, nativeEvent } = event;\n\n        // fix CJK input\n        const { isComposing } = nativeEvent;\n        if (isComposing) {\n            event.stopPropagation();\n            return;\n        }\n\n        switch (nativeEvent.code) {\n            case 'Enter':\n            case 'NumpadEnter': {\n                // enter+cmd, enter+ctrl, enter+shift\n                if (!altKey && (ctrlKey || metaKey || shiftKey) && !repeat) {\n                    document.execCommand('insertLineBreak');\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                // enter\n                else if (!altKey && !ctrlKey && !metaKey && !shiftKey && !repeat) {\n                    this.handleDone();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n            // cmd + b\n            case 'KeyB': {\n                if (!altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\n                    this.handleBold();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n            // cmd + i\n            case 'KeyI': {\n                if (!altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\n                    this.handleItalic();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n            case 'KeyK': {\n                // cmd + k\n                if (!altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\n                    this.handleUrl();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                // alt + cmd + k\n                else if (altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\n                    this.handleMono();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n            // alt + cmd + n\n            case 'KeyN': {\n                if (altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\n                    this.handleClear();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n        }\n    };\n\n    handleClear = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n    };\n\n    handleBold = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        document.execCommand('bold', false, null);\n    };\n\n    handleItalic = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        document.execCommand('italic', false, null);\n    };\n\n    handleMono = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        let text = '';\n        const { selection } = this;\n        if (selection && !selection.isCollapsed) {\n            text = selection.toString();\n        }\n\n        if (!text) return;\n        text = `<code>${text}</code>`;\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('insertHTML', false, text);\n    };\n\n    handleUnderline = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        document.execCommand('underline', false, null);\n    };\n\n    handleStrikeThrough = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        document.execCommand('strikeThrough', false, null);\n    };\n\n    handleUrl = () => {\n        this.openEditUrlDialog();\n    };\n\n    openEditUrlDialog = () => {\n        let defaultText = '';\n        let defaultUrl = '';\n\n        const { selection, range } = this;\n        if (range) {\n            let { startContainer, endContainer } = range;\n            if (startContainer === endContainer) {\n                const { parentElement } = startContainer;\n                if (parentElement && parentElement.nodeName === 'A') {\n                    defaultText = parentElement.innerText;\n                    defaultUrl = parentElement.href;\n                }\n            }\n        }\n\n        if (!defaultText && selection && !selection.isCollapsed) {\n            defaultText = selection.toString();\n        }\n\n        this.setState({\n            openEditUrl: true,\n            defaultUrl,\n            defaultText\n        });\n    };\n\n    closeEditUrlDialog = () => {\n        this.setState(\n            {\n                openEditUrl: false\n            },\n            () => {\n                this.restoreSelection();\n            }\n        );\n    };\n\n    saveSelection() {\n        this.selection = document.getSelection();\n        if (!this.selection) return;\n        if (!this.selection.rangeCount) return;\n\n        this.range = this.selection.getRangeAt(0);\n    }\n\n    restoreSelection() {\n        const { range } = this;\n\n        if (!range) {\n            focusInput();\n            return;\n        }\n\n        const selection = document.getSelection();\n        selection.removeAllRanges();\n        selection.addRange(range);\n\n        this.captionRef.current.focus();\n    }\n\n    handlePaste = event => {\n        const plainText = event.clipboardData.getData('text/plain');\n        if (plainText) {\n            event.preventDefault();\n            document.execCommand('insertText', false, plainText);\n        }\n    };\n\n    handleInput = () => {\n        this.clearInnerHtml();\n    };\n\n    clearInnerHtml() {\n        const element = this.captionRef.current;\n        if (!element) return;\n\n        const { innerHTML } = element;\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\n            element.innerHTML = null;\n        }\n    }\n\n    handleCancelEditUrl = () => {\n        this.closeEditUrlDialog();\n    };\n\n    handleDoneEditUrl = (text, url) => {\n        this.closeEditUrlDialog();\n        setTimeout(() => {\n            // edit current link node\n            const { range } = this;\n            if (range) {\n                const { startContainer, endContainer } = range;\n                if (startContainer && startContainer === endContainer) {\n                    const { parentNode } = startContainer;\n                    if (parentNode && parentNode.nodeName === 'A') {\n                        parentNode.href = url;\n                        parentNode.title = url;\n                        parentNode.innerText = text;\n\n                        // move cursor to end of editing node\n                        const { lastChild } = parentNode;\n                        if (lastChild) {\n                            const range = document.createRange();\n                            range.setStart(lastChild, lastChild.textContent.length);\n                            range.setEnd(lastChild, lastChild.textContent.length);\n\n                            const selection = document.getSelection();\n                            selection.removeAllRanges();\n                            selection.addRange(range);\n                        }\n                        return;\n                    }\n                }\n            }\n\n            // replace selected text with new link node\n            const link = `<a href=${url} title=${url} rel='noopener noreferrer' target='_blank'>${text}</a>`;\n            document.execCommand('removeFormat', false, null);\n            document.execCommand('insertHTML', false, link);\n        }, 0);\n    };\n\n    handleEditMedia = event => {\n        const element = this.editMediaRef.current;\n        if (!element) return;\n\n        element.click();\n    };\n\n    handleEditMediaComplete = async () => {\n        const element = this.editMediaRef.current;\n        if (!element) return;\n\n        const { files } = element;\n        if (files.length === 0) return;\n\n        const [file, ...rest] = Array.from(files);\n        if (!file) return;\n\n        const editMedia = await getMediaPhotoFromFile(file);\n\n        this.setState({\n            editFile: file,\n            editMedia\n        });\n\n        element.value = '';\n    };\n\n    handleSendAsPhoto = () => {\n        const { sendAsPhoto } = this.state;\n\n        this.setState({\n            sendAsPhoto: !sendAsPhoto\n        });\n    };\n\n    render() {\n        const { chatId, messageId, newItem, open, t } = this.props;\n        const { defaultText, defaultUrl, openEditUrl, editMessage, editMedia, sendAsPhoto } = this.state;\n        if (!open) return null;\n\n        const message = MessageStore.get(chatId, messageId);\n        const isEditing = Boolean(message);\n        let isPhoto = false;\n        if (newItem && newItem.media && newItem.media['@type'] === 'messagePhoto') {\n            isPhoto = true;\n        } else if (editMedia && editMedia['@type'] === 'messagePhoto') {\n            isPhoto = true;\n        } else if (editMessage && editMessage.content['@type'] === 'messagePhoto'){\n            isPhoto = true;\n        }\n\n        let media = null;\n        if (isEditing) {\n            media =\n            editMedia\n                ? getMedia({ content: editMedia })\n                : getMedia(message, null);\n        } else if (newItem) {\n            media = getMedia({ content: newItem.media });\n        }\n        const doneLabel = isEditing ? t('Save') : t('Send');\n\n        return (\n            <Dialog\n                manager={modalManager}\n                transitionDuration={0}\n                open={true}\n                onClose={this.handleCancel}\n                aria-labelledby='edit-media-dialog-title'\n                onEnter={this.handleEnter}>\n                <div className='edit-media-dialog-content'>\n                    <div style={{ margin: 24 }}>{media}</div>\n                    { isEditing && (\n                        <>\n                            <IconButton\n                                disableRipple={true}\n                                aria-label={t('Edit')}\n                                className='edit-media-dialog-edit-button'\n                                size='small'\n                                onClick={this.handleEditMedia}>\n                                <EditIcon fontSize='inherit' />\n                            </IconButton>\n                            <input\n                                ref={this.editMediaRef}\n                                className='inputbox-attach-button'\n                                type='file'\n                                accept='image/*'\n                                onChange={this.handleEditMediaComplete}\n                            />\n                        </>\n                    )}\n                    { !isEditing && isPhoto && (\n                        <RadioGroup value={sendAsPhoto} onChange={this.handleSendAsPhoto} style={{ margin: '0 24px 24px' }}>\n                            <FormControlLabel value={true} control={<Radio color='primary'/>} label={t('SendAsPhoto')} />\n                            <FormControlLabel value={false} control={<Radio color='primary'/>} label={t('SendAsFile')} />\n                        </RadioGroup>\n                    )}\n                </div>\n                <div\n                    ref={this.captionRef}\n                    id='edit-media-dialog-caption'\n                    className='scrollbars-hidden'\n                    contentEditable\n                    suppressContentEditableWarning\n                    placeholder={t('Caption')}\n                    onKeyDown={this.handleKeyDown}\n                    onPaste={this.handlePaste}\n                    onInput={this.handleInput}\n                />\n                <DialogActions>\n                    <Button onClick={this.handleCancel} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={this.handleDone} color='primary'>\n                        {doneLabel}\n                    </Button>\n                </DialogActions>\n                <EditUrlDialog\n                    open={openEditUrl}\n                    defaultText={defaultText}\n                    defaultUrl={defaultUrl}\n                    onDone={this.handleDoneEditUrl}\n                    onCancel={this.handleCancelEditUrl}\n                />\n            </Dialog>\n        );\n    }\n}\n\nEditMediaDialog.propTypes = {\n    open: PropTypes.bool,\n\n    chatId: PropTypes.number,\n    messageId: PropTypes.number,\n    newItem: PropTypes.object,\n\n    onSend: PropTypes.func,\n    onEdit: PropTypes.func,\n    onCancel: PropTypes.func\n};\n\nexport default withTranslation()(EditMediaDialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { TYPING_OUTPUT_INTERVAL_S } from '../Constants';\nimport TdLibController from '../Controllers/TdLibController';\n\nclass OutputTypingManager {\n    constructor(chatId) {\n        this.chatId = chatId;\n        this.lastAction = null;\n    }\n\n    setTyping(action) {\n        if (!this.chatId) return;\n\n        if (this.lastAction && this.lastAction['@type'] === action['@type']) {\n            let now = new Date();\n            now.setSeconds(now.getSeconds() - TYPING_OUTPUT_INTERVAL_S);\n            if (this.lastTypingDate && this.lastTypingDate > now) {\n                return;\n            }\n        }\n\n        this.lastAction = action;\n        this.lastTypingDate = new Date();\n\n        TdLibController.send({\n            '@type': 'sendChatAction',\n            chat_id: this.chatId,\n            action: action\n        });\n    }\n}\n\nexport default OutputTypingManager;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport emojiRegex from 'emoji-regex';\nimport MediaRecorder from 'opus-media-recorder';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport SpeedDialIcon from '@material-ui/lab/SpeedDialIcon';\nimport DoneIcon from '../../Assets/Icons/Done';\nimport IconButton from '@material-ui/core/IconButton';\nimport InsertEmoticonIcon from '../../Assets/Icons/Smile';\nimport SendIcon from '../../Assets/Icons/Send';\nimport MicrophoneIcon from '../../Assets/Icons/Microphone';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport AttachButton from './../ColumnMiddle/AttachButton';\nimport CreatePollDialog from '../Popup/CreatePollDialog';\nimport EditUrlDialog from '../Popup/EditUrlDialog';\nimport InputBoxHeader from './InputBoxHeader';\nimport PasteFilesDialog from '../Popup/PasteFilesDialog';\nimport RecordTimer from './RecordTimer';\nimport EditMediaDialog from '../Popup/EditMediaDialog';\nimport OutputTypingManager from '../../Utils/OutputTypingManager';\nimport { draftEquals, getChatDraft, getChatDraftReplyToMessageId, isMeChat, isPrivateChat } from '../../Utils/Chat';\nimport { findLastTextNode, focusInput } from '../../Utils/DOM';\nimport { getMediaDocumentFromFile, getMediaPhotoFromFile, isEditedMedia } from '../../Utils/Media';\nimport { getEntities, getNodes, isTextMessage } from '../../Utils/Message';\nimport { getSize, readImageSize } from '../../Utils/Common';\nimport { editMessage, replyMessage } from '../../Actions/Client';\nimport { PHOTO_SIZE, VOICENOTE_MIN_RECORD_DURATION } from '../../Constants';\nimport AnimationStore from '../../Stores/AnimationStore';\nimport AppStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport StickerStore from '../../Stores/StickerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './InputBox.css';\n\nconst EmojiPickerButton = React.lazy(() => import('./../ColumnMiddle/EmojiPickerButton'));\n\nclass InputBox extends Component {\n    constructor(props) {\n        super(props);\n\n        this.attachDocumentRef = React.createRef();\n        this.attachPhotoRef = React.createRef();\n        this.newMessageRef = React.createRef();\n\n        const chatId = AppStore.getChatId();\n\n        this.state = {\n            chatId,\n            replyToMessageId: getChatDraftReplyToMessageId(chatId),\n            editMessageId: 0,\n            recordingReady: true,\n            recordingTime: null,\n            recordPermissionDenied: false,\n            sendFile: null\n        };\n\n        document.execCommand('defaultParagraphSeparator', false, 'br');\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { t } = this.props;\n        const {\n            chatId,\n            newDraft,\n            files,\n            replyToMessageId,\n            editMessageId,\n            openEditMedia,\n            openEditUrl,\n            sendFile,\n            recordingReady,\n            recordingTime,\n            recordPermissionDenied,\n            shook\n        } = this.state;\n\n        if (nextProps.t !== t) {\n            return true;\n        }\n\n        if (nextState.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextState.newDraft !== newDraft) {\n            return true;\n        }\n\n        if (nextState.files !== files) {\n            return true;\n        }\n\n        if (nextState.replyToMessageId !== replyToMessageId) {\n            return true;\n        }\n\n        if (nextState.editMessageId !== editMessageId) {\n            return true;\n        }\n\n        if (nextState.sendFile !== sendFile) {\n            return true;\n        }\n\n        if (nextState.openEditUrl !== openEditUrl) {\n            return true;\n        }\n\n        if (nextState.openEditMedia !== openEditMedia) {\n            return true;\n        }\n\n        if (nextState.recordingTime !== recordingTime) {\n            return true;\n        }\n\n        if (nextState.recordingReady !== recordingReady) {\n            return true;\n        }\n\n        if (nextState.recordPermissionDenied !== recordPermissionDenied) {\n            return true;\n        }\n\n        if (nextState.shook !== shook) {\n            return true;\n        }\n\n        return false;\n    }\n\n    loadDraft() {\n        this.setDraft();\n        this.setInputFocus();\n        this.handleInput();\n    }\n\n    saveDraft() {\n        const { chatId, editMessageId, replyToMessageId } = this.state;\n\n        const element = this.newMessageRef.current;\n        if (!element) return;\n\n        let innerHTML = null;\n        if (editMessageId) {\n            innerHTML = this.beforeEditText ? this.beforeEditText.innerHTML : null;\n        } else {\n            innerHTML = element.innerHTML;\n        }\n\n        const draftMessage = this.getDraftMessage(chatId, replyToMessageId, innerHTML);\n        this.setChatDraftMessage(draftMessage);\n    }\n\n    selectionChangeListener = () => {\n        // console.log('[ed] selectionchange', document.activeElement);\n        if (document.activeElement === this.newMessageRef.current) {\n            this.saveSelection();\n        }\n    };\n\n    componentDidMount() {\n        document.addEventListener('selectionchange', this.selectionChangeListener, true);\n\n        AnimationStore.on('clientUpdateAnimationSend', this.onClientUpdateAnimationSend);\n        AppStore.on('clientUpdateInputShake', this.onClientUpdateInputShake);\n        AppStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n        AppStore.on('clientUpdateFocusWindow', this.onClientUpdateFocusWindow);\n        ChatStore.on('updateChatDraftMessage', this.onUpdateChatDraftMessage);\n        FileStore.on('clientUpdateSendFiles', this.onClientUpdateSendFiles);\n        MessageStore.on('clientUpdateEditMessage', this.onClientUpdateEditMessage);\n        MessageStore.on('clientUpdateReply', this.onClientUpdateReply);\n        MessageStore.on('updateDeleteMessages', this.onUpdateDeleteMessages);\n        StickerStore.on('clientUpdateStickerSend', this.onClientUpdateStickerSend);\n\n        this.loadDraft();\n    }\n\n    componentWillUnmount() {\n        this.saveDraft();\n\n        AnimationStore.off('clientUpdateAnimationSend', this.onClientUpdateAnimationSend);\n        AppStore.off('clientUpdateInputShake', this.onClientUpdateInputShake);\n        AppStore.off('clientUpdateChatId', this.onClientUpdateChatId);\n        AppStore.off('clientUpdateFocusWindow', this.onClientUpdateFocusWindow);\n        ChatStore.off('updateChatDraftMessage', this.onUpdateChatDraftMessage);\n        FileStore.off('clientUpdateSendFiles', this.onClientUpdateSendFiles);\n        MessageStore.off('clientUpdateEditMessage', this.onClientUpdateEditMessage);\n        MessageStore.off('clientUpdateReply', this.onClientUpdateReply);\n        MessageStore.off('updateDeleteMessages', this.onUpdateDeleteMessages);\n        StickerStore.off('clientUpdateStickerSend', this.onClientUpdateStickerSend);\n\n        document.removeEventListener('selectionchange', this.selectionChangeListener, true);\n\n        this.handleCancelRecord();\n    }\n\n    onClientUpdateInputShake = update => {\n        const { chatId, messageId } = this.props;\n        const { shook } = this.state;\n\n        if (shook) {\n            this.setState({ shook: false }, () => {\n                setTimeout(() => {\n                    this.setState({ shook: true });\n                }, 0);\n            });\n        } else {\n            this.setState({ shook: true });\n        }\n    };\n\n    onClientUpdateSendFiles = update => {\n        const { files } = update;\n        if (!files) return;\n\n        this.handleSendFiles(Array.from(files));\n    };\n\n    onUpdateDeleteMessages = update => {\n        const { chatId, editMessageId } = this.state;\n        const { chat_id, message_ids, is_permanent } = update;\n\n        if (!editMessageId) return;\n        if (!is_permanent) return;\n        if (chatId !== chat_id) return;\n        if (message_ids.indexOf(editMessageId) === -1) return;\n\n        this.handleCancel();\n    };\n\n    onClientUpdateEditMessage = update => {\n        const { chatId, messageId } = update;\n        const { recordingTime } = this.state;\n        if (recordingTime) return;\n        if (this.state.chatId !== chatId) return;\n\n        if (!messageId) {\n            this.restoreDraftAndSelection();\n        } else {\n            this.saveDraftAndSelection();\n        }\n\n        const openEditMedia = messageId !== 0 && isEditedMedia(chatId, messageId);\n        this.setState(\n            {\n                editMessageId: messageId,\n                openEditMedia\n            },\n            () => {\n                if (!this.state.openEditMedia) {\n                    this.setEditMessage();\n                    this.handleInput();\n                    setTimeout(() => {\n                        this.focusInput();\n                    }, 0);\n                }\n            }\n        );\n    };\n\n    restoreDraftAndSelection() {\n        const element = this.newMessageRef.current;\n        if (!element) return;\n\n        const { beforeEditText } = this;\n\n        if (beforeEditText) {\n            element.innerHTML = beforeEditText.innerHTML;\n\n            if (!beforeEditText.range) {\n                this.focusInput();\n                return;\n            }\n\n            const selection = document.getSelection();\n            selection.removeAllRanges();\n            selection.addRange(beforeEditText.range);\n\n            element.focus();\n        } else {\n            element.innerHTML = null;\n            this.focusInput();\n        }\n\n        this.handleInput();\n    }\n\n    saveDraftAndSelection() {\n        const element = this.newMessageRef.current;\n        if (!element) return;\n\n        this.beforeEditText = {\n            innerHTML: element.innerHTML,\n            range: this.range\n        };\n    }\n\n    onClientUpdateFocusWindow = update => {\n        const { focused } = update;\n        if (focused) return;\n\n        this.saveDraft();\n    };\n\n    onUpdateChatDraftMessage = update => {\n        const { chat_id } = update;\n        const { chatId, recordingTime } = this.state;\n\n        if (recordingTime) return;\n        if (chatId !== chat_id) return;\n\n        this.loadDraft();\n    };\n\n    onClientUpdateAnimationSend = update => {\n        const { animation: item } = update;\n        if (!item) return;\n\n        const { animation, thumbnail, width, height, duration } = item;\n        if (!animation) return;\n\n        const element = this.newMessageRef.current;\n        if (!element) return;\n\n        element.innerText = null;\n\n        this.restoreSelection();\n\n        const content = {\n            '@type': 'inputMessageAnimation',\n            animation: {\n                '@type': 'inputFileId',\n                id: animation.id\n            },\n            width,\n            height,\n            duration\n        };\n\n        if (thumbnail) {\n            const { width: thumbnailWidth, height: thumbnailHeight, file } = thumbnail;\n\n            content.thumbnail = {\n                '@type': 'inputThumbnail',\n                thumbnail: {\n                    '@type': 'inputFileId',\n                    id: file.id\n                },\n                width: thumbnailWidth,\n                height: thumbnailHeight\n            };\n        }\n\n        this.sendMessage(content, false, result => {});\n    };\n\n    onClientUpdateStickerSend = update => {\n        const { sticker: item } = update;\n        if (!item) return;\n\n        const { sticker, thumbnail, width, height } = item;\n        if (!sticker) return;\n\n        const element = this.newMessageRef.current;\n        if (!element) return;\n\n        element.innerText = null;\n\n        this.restoreSelection();\n\n        const content = {\n            '@type': 'inputMessageSticker',\n            sticker: {\n                '@type': 'inputFileId',\n                id: sticker.id\n            },\n            width,\n            height\n        };\n\n        if (thumbnail) {\n            const { width: thumbnailWidth, height: thumbnailHeight, file } = thumbnail;\n\n            content.thumbnail = {\n                '@type': 'inputThumbnail',\n                thumbnail: {\n                    '@type': 'inputFileId',\n                    id: file.id\n                },\n                width: thumbnailWidth,\n                height: thumbnailHeight\n            };\n        }\n\n        this.sendMessage(content, false, result => {});\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateLocalStickersHint',\n            hint: null\n        });\n    };\n\n    onClientUpdateReply = update => {\n        const { chatId: currentChatId, recordingTime } = this.state;\n        const { chatId, messageId } = update;\n\n        if (currentChatId !== chatId) {\n            return;\n        }\n\n        this.setState({ replyToMessageId: messageId });\n\n        if (messageId && !recordingTime) {\n            this.setInputFocus();\n        }\n    };\n\n    onClientUpdateChatId = update => {\n        const { chatId } = this.state;\n        if (chatId === update.nextChatId) return;\n\n        this.saveDraft();\n        this.beforeEditText = null;\n        this.setState(\n            {\n                chatId: update.nextChatId,\n                replyToMessageId: getChatDraftReplyToMessageId(update.nextChatId),\n                editMessageId: 0,\n                openEditUrl: false\n            },\n            () => {\n                this.loadDraft();\n            }\n        );\n\n        this.handleCancelRecord();\n    };\n\n    setDraft = () => {\n        const { chatId } = this.state;\n\n        const element = this.newMessageRef.current;\n\n        const formattedText = getChatDraft(chatId);\n        if (formattedText) {\n            this.setFormattedText(formattedText);\n            this.setState({\n                replyToMessageId: getChatDraftReplyToMessageId(chatId)\n            });\n        } else {\n            element.innerText = null;\n        }\n    };\n\n    setEditMessage() {\n        const { chatId, editMessageId } = this.state;\n\n        const message = MessageStore.get(chatId, editMessageId);\n        if (!message) return;\n\n        const { content } = message;\n        if (!content) return;\n\n        const { text, caption } = content;\n        if (!text && !caption) return;\n\n        const element = this.newMessageRef.current;\n\n        if (text) {\n            this.setFormattedText(text);\n        } else if (caption) {\n            this.setFormattedText(caption);\n        } else {\n            element.innerText = null;\n        }\n    }\n\n    setFormattedText(formattedText) {\n        const { t } = this.props;\n        const element = this.newMessageRef.current;\n\n        if (!formattedText) {\n            element.innerText = null;\n            return;\n        }\n\n        const { text, entities } = formattedText;\n        try {\n            const nodes = getNodes(text, entities, t);\n            element.innerHTML = null;\n            nodes.forEach(x => {\n                element.appendChild(x);\n            });\n        } catch (e) {\n            element.innerText = text;\n        }\n    }\n\n    setInputFocus = () => {\n        const { recordingTime } = this.state;\n        if (recordingTime) return;\n\n        setTimeout(() => {\n            const element = this.newMessageRef.current;\n\n            focusInput(element);\n        }, 100);\n    };\n\n    setChatDraftMessage = chatDraftMessage => {\n        if (!chatDraftMessage) return;\n\n        const { chatId, draftMessage } = chatDraftMessage;\n        if (!chatId) return;\n\n        TdLibController.send({\n            '@type': 'setChatDraftMessage',\n            chat_id: chatId,\n            draft_message: draftMessage\n        });\n    };\n\n    getDraftMessage = (chatId, replyToMessageId, innerHTML) => {\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const { draft_message } = chat;\n        const { text, entities } = getEntities(innerHTML);\n        const draftMessage =\n            (text && text.length > 0) || entities.length > 0\n                ? {\n                      '@type': 'draftMessage',\n                      reply_to_message_id: replyToMessageId,\n                      input_message_text: {\n                          '@type': 'inputMessageText',\n                          text: {\n                              '@type': 'formattedText',\n                              text,\n                              entities\n                          },\n                          disable_web_page_preview: false,\n                          clear_draft: false\n                      }\n                  }\n                : null;\n\n        if (draftEquals(draft_message, draftMessage)) {\n            return null;\n        }\n\n        return { chatId, draftMessage };\n    };\n\n    handleSubmit = (startRecord = true) => {\n        const { chatId, editMessageId, replyToMessageId, recordingReady, recordingTime } = this.state;\n\n        if (recordingTime) {\n            if ((new Date() - recordingTime) < VOICENOTE_MIN_RECORD_DURATION) {\n                return;\n            }\n\n            this.handleStopRecord();\n            return;\n        } else if (recordingReady) {\n            if (startRecord) this.handleRecord();\n            return;\n        }\n\n        const element = this.newMessageRef.current;\n        if (!element) return;\n\n        let { innerHTML } = element;\n\n        element.innerText = null;\n        this.handleInput();\n\n        if (!innerHTML) return;\n        if (!innerHTML.trim()) return;\n\n        const { text, entities } = getEntities(innerHTML);\n\n        const formattedText = {\n            '@type': 'formattedText',\n            text,\n            entities\n        };\n        const inputContent = {\n            '@type': 'inputMessageText',\n            text: formattedText,\n            disable_web_page_preview: false,\n            clear_draft: true\n        };\n\n        if (editMessageId) {\n            const editedMessage = MessageStore.get(chatId, editMessageId);\n            if (!editedMessage) return;\n\n            const { content } = editedMessage;\n            if (!content) return;\n\n            const { text, caption } = content;\n            if (text) {\n                this.editMessageText(inputContent, result => {});\n            } else if (caption) {\n                this.editMessageCaption(formattedText);\n            }\n            editMessage(chatId, 0);\n        } else {\n            this.sendMessage(inputContent, false, result => {});\n        }\n    };\n\n    handleAttachPoll = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateNewPoll'\n        });\n    };\n\n    handleAttachPhoto = () => {\n        if (!this.attachPhotoRef) return;\n\n        this.attachPhotoRef.current.click();\n    };\n\n    async getNewItem(file, sendAsFile) {\n        if (!file) return null;\n\n        const caption = this.newMessageRef.current.innerHTML;\n        if (caption) {\n            this.newMessageRef.current.innerHTML = null;\n            this.handleInput();\n        }\n\n        const media = sendAsFile\n            ? await getMediaPhotoFromFile(file)\n            : await getMediaDocumentFromFile(file);\n\n        return {\n            file,\n            media,\n            caption\n        }\n    };\n\n    handleAttachPhotoComplete = async () => {\n        const { files } = this.attachPhotoRef.current;\n        if (files.length === 0) return;\n\n        if (files.length === 1) {\n            const [ newFile, ...rest ] = Array.from(files);\n            if (!newFile) return;\n\n            const newItem = await this.getNewItem(newFile, true);\n\n            this.setState({\n                openEditMedia: true,\n                newItem\n            });\n        } else {\n            Array.from(files).forEach(async file => {\n                const [width, height] = await readImageSize(file);\n\n                const content = {\n                    '@type': 'inputMessagePhoto',\n                    photo: { '@type': 'inputFileBlob', name: file.name, size: file.size, data: file },\n                    width,\n                    height\n                };\n\n                this.handleSendPhoto(content, file);\n            });\n        }\n\n        this.attachPhotoRef.current.value = '';\n    };\n\n    handleAttachDocument = () => {\n        if (!this.attachDocumentRef) return;\n\n        this.attachDocumentRef.current.click();\n    };\n\n    handleAttachDocumentComplete = async () => {\n        const { files } = this.attachDocumentRef.current;\n        if (files.length === 0) return;\n\n        if (files.length === 1) {\n            const [ newFile, ...rest ] = Array.from(files);\n            if (!newFile) return;\n\n            const newItem = await this.getNewItem(newFile, false);\n\n            this.setState({\n                openEditMedia: true,\n                newItem\n            });\n        } else {\n            Array.from(files).forEach(file => {\n                const content = {\n                    '@type': 'inputMessageDocument',\n                    document: { '@type': 'inputFileBlob', name: file.name, size: file.size, data: file }\n                };\n\n                this.handleSendDocument(content, file);\n            });\n        }\n\n        this.attachDocumentRef.current.value = '';\n    };\n\n    setTyping() {\n        const { chatId, editMessageId } = this.state;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const element = this.newMessageRef.current;\n        if (!element) return;\n\n        const { innerHTML } = element;\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\n            element.innerHTML = null;\n        }\n        const { innerText } = element;\n\n        if (!innerText) return;\n        if (isMeChat(chatId)) return;\n        if (editMessageId) return;\n\n        const typingManager = chat.OutputTypingManager || (chat.OutputTypingManager = new OutputTypingManager(chat.id));\n        typingManager.setTyping({ '@type': 'chatActionTyping' });\n    }\n\n    setHints() {\n        const { editMessageId } = this.state;\n        const innerText = this.newMessageRef.current.innerText;\n        if (!innerText || innerText.length > 11 || editMessageId) {\n            const { hint } = StickerStore;\n            if (hint) {\n                TdLibController.clientUpdate({\n                    '@type': 'clientUpdateLocalStickersHint',\n                    hint: null\n                });\n            }\n\n            return;\n        }\n\n        const t0 = performance.now();\n        const regex = emojiRegex();\n        let match = regex.exec(innerText);\n        const t1 = performance.now();\n        // console.log('Matched ' + (t1 - t0) + 'ms', match);\n        if (!match || innerText !== match[0]) {\n            const { hint } = StickerStore;\n            if (hint) {\n                TdLibController.clientUpdate({\n                    '@type': 'clientUpdateLocalStickersHint',\n                    hint: null\n                });\n            }\n\n            return;\n        }\n\n        const timestamp = Date.now();\n        TdLibController.send({\n            '@type': 'getStickers',\n            emoji: match[0],\n            limit: 100\n        }).then(stickers => {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateLocalStickersHint',\n                hint: {\n                    timestamp,\n                    emoji: match[0],\n                    stickers\n                }\n            });\n        });\n\n        TdLibController.send({\n            '@type': 'searchStickers',\n            emoji: match[0],\n            limit: 100\n        }).then(stickers => {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateRemoteStickersHint',\n                hint: {\n                    timestamp,\n                    emoji: match[0],\n                    stickers\n                }\n            });\n        });\n    }\n\n    handleClear = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n    };\n\n    handleBold = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        document.execCommand('bold', false, null);\n    };\n\n    handleItalic = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        document.execCommand('italic', false, null);\n    };\n\n    handleMono = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        let text = '';\n        const { selection } = this;\n        if (selection && !selection.isCollapsed) {\n            text = selection.toString();\n        }\n\n        if (!text) return;\n        text = `<code>${text}</code>`;\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('insertHTML', false, text);\n    };\n\n    handleUnderline = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        document.execCommand('underline', false, null);\n    };\n\n    handleStrikeThrough = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        document.execCommand('strikeThrough', false, null);\n    };\n\n    handleUrl = () => {\n        this.openEditUrlDialog();\n    };\n\n    handleCancel = () => {\n        const { chatId, editMessageId, replyToMessageId } = this.state;\n        if (editMessageId) {\n            editMessage(chatId, 0);\n            return true;\n        } else if (replyToMessageId) {\n            replyMessage(chatId, 0);\n            return true;\n        }\n\n        return false;\n    };\n\n    handleKeyDown = event => {\n        const { altKey, ctrlKey, key, keyCode, charCode, metaKey, shiftKey, repeat, nativeEvent } = event;\n        const { editMessageId, replyToMessageId } = this.state;\n\n        // console.log('[input] handleKeyDown', key, keyCode, charCode, altKey, ctrlKey, metaKey, shiftKey, repeat, event, nativeEvent, nativeEvent.isComposing);\n        //\n        // setTimeout(() => {\n        //     const { innerText } = this.newMessageRef.current;\n        //     console.log('[input] text', innerText.length, [...innerText].map(x => ({ alpha: x, code: x.charCodeAt(0) })));\n        // }, 1000);\n\n        // fix CJK input\n        const { isComposing } = nativeEvent;\n        if (isComposing) {\n            return;\n        }\n\n        switch (nativeEvent.code) {\n            // ctrl+alt+0 fix\n            case 'Digit0': {\n                if (altKey && ctrlKey && !metaKey && !shiftKey) {\n                    if (editMessageId) return;\n                    if (replyToMessageId) return;\n\n                    event.preventDefault();\n                }\n                break;\n            }\n            case 'Enter':\n            case 'NumpadEnter': {\n                // enter+cmd, enter+ctrl, enter+shift\n                if (!altKey && (ctrlKey || metaKey || shiftKey) && !repeat) {\n                    document.execCommand('insertLineBreak');\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                // enter\n                else if (!altKey && !ctrlKey && !metaKey && !shiftKey && !repeat) {\n                    this.handleSubmit(false);\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n            // esc\n            case 'Escape': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    if (!repeat && this.handleCancel()) {\n                        event.preventDefault();\n                        event.stopPropagation();\n                    }\n                }\n                break;\n            }\n            // arrow up\n            case 'ArrowUp': {\n                if (!repeat && !altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    const element = this.newMessageRef.current;\n                    if (element && !element.innerText) {\n                        const { editMessageId } = this.state;\n                        if (editMessageId) return;\n\n                        TdLibController.clientUpdate({\n                            '@type': 'clientUpdateTryEditMessage'\n                        });\n\n                        event.preventDefault();\n                        event.stopPropagation();\n                    }\n                }\n                break;\n            }\n            // cmd + b\n            case 'KeyB': {\n                if (!altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\n                    this.handleBold();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n            // cmd + i\n            case 'KeyI': {\n                if (!altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\n                    this.handleItalic();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n            case 'KeyK': {\n                // cmd + k\n                if (!altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\n                    this.handleUrl();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                // alt + cmd + k\n                else if (altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\n                    this.handleMono();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n            // alt + cmd + n\n            case 'KeyN': {\n                if (altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\n                    this.handleClear();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n        }\n    };\n\n    handleSendPhoto = (content, file) => {\n        if (!content) return;\n\n        this.sendMessage(content, true, result => {\n            const cachedMessage = MessageStore.get(result.chat_id, result.id);\n            if (cachedMessage != null) {\n                this.handleSendingMessage(cachedMessage, file);\n            }\n\n            FileStore.uploadFile(result.content.photo.sizes[0].photo.id, result);\n        });\n    };\n\n    handleSendPoll = poll => {\n        this.sendMessage(poll, true, () => {});\n    };\n\n    handleSendDocument = (content, file) => {\n        if (!content) return;\n\n        this.sendMessage(content, true, result => FileStore.uploadFile(result.content.document.document.id, result));\n    };\n\n    handleSendAudio = (content, file) => {\n        if (!content) return;\n\n        this.sendMessage(content, true, result => FileStore.uploadFile(result.content.audio.audio.id, result));\n    };\n\n    handleSendVoiceNote = (content, file) => {\n        if (!content) return;\n\n        this.sendMessage(content, true, result => FileStore.uploadFile(result.content.voice_note.voice.id, result));\n    };\n\n    async handleSendFiles(files) {\n        if (!files) return;\n        if (!files.length) return;\n\n        if (files.length === 1) {\n            const newItem = await this.getNewItem(files[0], files[0].type.startsWith('image'));\n            if (!newItem) return;\n\n            this.setState({\n                openEditMedia: true,\n                newItem\n            });\n        } else {\n            this.setState({ files });\n        }\n    }\n\n    handlePaste = async event => {\n        const { items } = event.clipboardData || event.originalEvent.clipboardData;\n        if (!items) return;\n\n        const files = [];\n        Array.from(items).forEach(item => {\n            if (item.kind.indexOf('file') === 0) {\n                const file = item.getAsFile();\n                if (file) {\n                    files.push(file);\n                }\n            }\n        });\n\n        if (files.length > 0) {\n            event.preventDefault();\n\n            this.handleSendFiles(files);\n            return;\n        }\n\n        const plainText = event.clipboardData.getData('text/plain');\n        if (plainText) {\n            event.preventDefault();\n            document.execCommand('insertText', false, plainText);\n            return;\n        }\n    };\n\n    handlePasteConfirm = () => {\n        const { files } = this.state;\n        if (!files) return;\n        if (!files.length) return;\n\n        files.forEach(file => {\n            const content = {\n                '@type': 'inputMessageDocument',\n                document: { '@type': 'inputFileBlob', name: file.name, data: file }\n            };\n\n            this.handleSendDocument(content, file);\n        });\n\n        this.handlePasteCancel();\n    };\n\n    handlePasteCancel = () => {\n        this.setState({ files: null });\n    };\n\n    handleUpdateDraftConfirm = () => {\n        const { newDraft } = this.state;\n        if (!newDraft) return;\n\n        this.loadDraft();\n        this.handleUpdateDraftCancel();\n    };\n\n    handleUpdateDraftCancel = () => {\n        this.setState({ newDraft: null });\n    };\n\n    handleSendingMessage = (message, blob) => {\n        if (!message) return;\n\n        const { sending_state, content, chat_id, id } = message;\n        if (!sending_state) return;\n        if (sending_state['@type'] !== 'messageSendingStatePending') return;\n        if (content['@type'] !== 'messagePhoto') return;\n\n        const { photo } = content;\n        if (!photo) return;\n\n        const size = getSize(photo.sizes, PHOTO_SIZE);\n        if (!size) return;\n\n        const { photo: file } = size;\n        if (!file) return;\n\n        FileStore.setBlob(file.id, blob);\n        FileStore.updatePhotoBlob(chat_id, id, file.id);\n    };\n\n    async editMessageMedia(content) {\n        const { chatId, editMessageId } = this.state;\n        // console.log('[em] editMessageMedia start', chatId, editMessageId, content);\n\n        if (!chatId) return;\n        if (!editMessageId) return;\n        if (!content) return;\n\n        return TdLibController.send({\n            '@type': 'editMessageMedia',\n            chat_id: chatId,\n            message_id: editMessageId,\n            input_message_content: content\n        });\n    }\n\n    editMessageCaption(caption) {\n        const { chatId, editMessageId } = this.state;\n\n        if (!chatId) return;\n        if (!editMessageId) return;\n        if (!caption) return;\n\n        TdLibController.send({\n            '@type': 'editMessageCaption',\n            chat_id: chatId,\n            message_id: editMessageId,\n            caption\n        });\n    }\n\n    async editMessageText(content, callback) {\n        const { chatId, editMessageId } = this.state;\n\n        if (!chatId) return;\n        if (!editMessageId) return;\n        if (!content) return;\n\n        try {\n            const result = await TdLibController.send({\n                '@type': 'editMessageText',\n                chat_id: chatId,\n                message_id: editMessageId,\n                input_message_content: content\n            });\n\n            callback(result);\n        } finally {\n        }\n    }\n\n    sendMessage = async (content, clearDraft, callback) => {\n        const { chatId, replyToMessageId } = this.state;\n\n        if (!chatId) return;\n        if (!content) return;\n\n        try {\n            await AppStore.invokeScheduledAction(`clientUpdateClearHistory chatId=${chatId}`);\n\n            const result = await TdLibController.send({\n                '@type': 'sendMessage',\n                chat_id: chatId,\n                reply_to_message_id: replyToMessageId,\n                input_message_content: content\n            });\n\n            this.setState({ replyToMessageId: 0 }, () => {\n                if (clearDraft) {\n                    this.saveDraft();\n                }\n            });\n            //MessageStore.set(result);\n\n            TdLibController.send({\n                '@type': 'viewMessages',\n                chat_id: chatId,\n                message_ids: [result.id]\n            });\n\n            if (replyToMessageId) {\n                replyMessage(chatId, 0);\n            }\n\n            callback(result);\n        } catch (error) {\n            alert('sendMessage error ' + JSON.stringify(error));\n        }\n    };\n\n    handleEmojiSelect = emoji => {\n        if (!emoji) return;\n\n        this.restoreSelection();\n        document.execCommand('insertText', false, emoji.native);\n        this.handleInput();\n    };\n\n    handleInput = async event => {\n        this.setTyping();\n        this.setHints();\n        this.setRecordingReadyState();\n    };\n\n    setRecordingReadyState() {\n        const { editMessageId } = this.state;\n        const innerText = this.newMessageRef.current.innerText;\n        if (!innerText && !editMessageId) {\n            this.setState({\n                recordingReady: true\n            });\n        } else {\n            this.setState({\n                recordingReady: false\n            });\n        }\n    }\n\n    openEditUrlDialog = () => {\n        let defaultText = '';\n        let defaultUrl = '';\n\n        const { selection, range } = this;\n        if (range) {\n            let { startContainer, endContainer } = range;\n            if (startContainer === endContainer) {\n                const { parentElement } = startContainer;\n                if (parentElement && parentElement.nodeName === 'A') {\n                    defaultText = parentElement.innerText;\n                    defaultUrl = parentElement.href;\n                }\n            }\n        }\n\n        if (!defaultText && selection && !selection.isCollapsed) {\n            defaultText = selection.toString();\n        }\n\n        this.setState({\n            openEditUrl: true,\n            defaultUrl,\n            defaultText\n        });\n    };\n\n    closeEditUrlDialog = () => {\n        this.setState(\n            {\n                openEditUrl: false\n            },\n            () => {\n                this.restoreSelection();\n            }\n        );\n    };\n\n    saveSelection() {\n        this.selection = document.getSelection();\n        if (!this.selection) return;\n        if (!this.selection.rangeCount) return;\n\n        this.range = this.selection.getRangeAt(0);\n    }\n\n    restoreSelection() {\n        const { range } = this;\n\n        if (!range) {\n            this.focusInput();\n            return;\n        }\n\n        const selection = document.getSelection();\n        selection.removeAllRanges();\n        selection.addRange(range);\n\n        this.newMessageRef.current.focus();\n    }\n\n    focusInput = () => {\n        const element = this.newMessageRef.current;\n        if (!element) return;\n        if (!element.childNodes.length) {\n            element.focus();\n            return;\n        }\n\n        const lastTextNode = findLastTextNode(element);\n        if (!lastTextNode) {\n            return;\n        }\n\n        const range = document.createRange();\n        range.setStart(lastTextNode, lastTextNode.length);\n        range.collapse(true);\n\n        const selection = window.getSelection();\n        selection.removeAllRanges();\n        selection.addRange(range);\n\n        element.focus();\n    };\n\n    handleCancelEditUrl = () => {\n        this.closeEditUrlDialog();\n    };\n\n    handleDoneEditUrl = (text, url) => {\n        this.closeEditUrlDialog();\n        setTimeout(() => {\n            // edit current link node\n            const { range } = this;\n            if (range) {\n                const { startContainer, endContainer } = range;\n                if (startContainer && startContainer === endContainer) {\n                    const { parentNode } = startContainer;\n                    if (parentNode && parentNode.nodeName === 'A') {\n                        parentNode.href = url;\n                        parentNode.title = url;\n                        parentNode.innerText = text;\n\n                        // move cursor to end of editing node\n                        const { lastChild } = parentNode;\n                        if (lastChild) {\n                            const range = document.createRange();\n                            range.setStart(lastChild, lastChild.textContent.length);\n                            range.setEnd(lastChild, lastChild.textContent.length);\n\n                            const selection = document.getSelection();\n                            selection.removeAllRanges();\n                            selection.addRange(range);\n                        }\n                        return;\n                    }\n                }\n            }\n\n            // replace selected text with new link node\n            const link = `<a href=${url} title=${url} rel='noopener noreferrer' target='_blank'>${text}</a>`;\n            document.execCommand('removeFormat', false, null);\n            document.execCommand('insertHTML', false, link);\n        }, 0);\n    };\n\n    handleCancelEditMedia = () => {\n        this.closeEditMediaDialog();\n    };\n\n    handleEditMedia = async (caption, content) => {\n        if (content) {\n            const message = await this.editMessageMedia(content);\n            if (message) {\n                const { content: editContent } = message;\n                switch (editContent['@type']) {\n                    case 'messagePhoto': {\n                        const { photo: sendPhoto } = content;\n                        if (!sendPhoto) break;\n\n                        const { data: blob } = sendPhoto;\n                        if (!blob) break;\n\n                        const { photo } = editContent;\n                        if (!photo) break;\n\n                        const iSize = photo.sizes.find(x => x.type === 'i');\n                        if (!iSize) break;\n\n                        const { photo: file } = iSize;\n                        if (file) {\n                            FileStore.setBlob(file.id, blob);\n                        }\n                        break;\n                    }\n                }\n            }\n            return;\n        }\n\n        this.editMessageCaption(caption);\n    };\n\n    handleSendMedia = (content, file) => {\n        this.closeEditMediaDialog(false);\n\n        switch (content['@type']) {\n            case 'inputMessageAudio': {\n                this.handleSendAudio(content, file);\n                break;\n            }\n            case 'inputMessagePhoto': {\n                this.handleSendPhoto(content, file);\n                break;\n            }\n            case 'inputMessageDocument': {\n                this.handleSendDocument(content, file);\n                break;\n            }\n        }\n    };\n\n    closeEditMediaDialog(cancel = true) {\n        const { newItem } = this.state;\n\n        this.setState(\n            {\n                openEditMedia: false,\n                newItem: null\n            },\n            () => {\n                if (cancel && newItem && newItem.caption) {\n                    this.newMessageRef.current.innerHTML = newItem.caption;\n                    this.focusInput();\n                    this.handleInput();\n                } else {\n                    this.restoreSelection();\n                }\n            }\n        );\n    }\n\n    handleHeaderClick = () => {\n        setTimeout(() => this.restoreSelection(), 0);\n    };\n\n    handleStopRecord = (cancelled = false) => {\n        if (!this.recorder) return;\n\n        this.recorder.cancelled = cancelled;\n        this.recorder.stop();\n        this.recorder.stream.getAudioTracks().forEach(track => track.stop());\n    }\n\n    handleCancelRecord = () => {\n        this.handleStopRecord(true);\n    }\n\n    handleRecord = async () => {\n        if (this.recorder) return;\n\n        let stream = null;\n        try{\n            stream = await navigator.mediaDevices.getUserMedia({ audio: true });\n            if (this.recorder) return;\n        } catch { }\n\n        if (!stream) {\n            this.setState({\n                recordPermissionDenied: true\n            });\n            return;\n        }\n\n        const constraints = {\n            channelCount: 1,\n            sampleRate: 48000,\n        };\n\n        const track = stream.getAudioTracks()[0];\n        track.applyConstraints(constraints)\n\n        const options = { mimeType: 'audio/ogg; codecs=opus', audioBitsPerSecond: 64000 };\n        const workerOptions = {\n            encoderWorkerFactory: function () {\n                return new Worker(process.env.PUBLIC_URL + '/opus-media-recorder/encoderWorker.umd.js')\n            },\n            OggOpusEncoderWasmPath: process.env.PUBLIC_URL + '/opus-media-recorder/OggOpusEncoder.wasm'\n        };\n\n        const recorder = new MediaRecorder(stream, options, workerOptions);\n\n        const chunks = [];\n\n        recorder.ondataavailable = e => {\n            chunks.push(e.data);\n        };\n        recorder.onstart = () => {\n\n        };\n        recorder.onstop = () => {\n            TdLibController.clientUpdate({ '@type': 'clientUpdateRecordStop' });\n            this.setState({ recordingTime: null });\n\n            const { cancelled } = this.recorder;\n            this.recorder = null;\n\n            this.loadDraft();\n            if (cancelled) {\n                return;\n            }\n\n            // console.log('stop');\n            const blob = new Blob(chunks, { 'type' : 'audio/ogg; codecs=opus' });\n            const audioURL = window.URL.createObjectURL(blob);\n\n            const audio = new Audio(audioURL);\n            audio.oncanplay = () => {\n                const content = {\n                    '@type': 'inputMessageVoiceNote',\n                    voice_note: { '@type': 'inputFileBlob', name: '', size: blob.size, data: blob },\n                    duration: Math.trunc(audio.duration),\n                    waveform: '',\n                    caption: null\n                };\n\n                this.handleSendVoiceNote(content, blob);\n            };\n        };\n        recorder.onerror = () => {\n            TdLibController.clientUpdate({ '@type': 'clientUpdateRecordError' });\n            this.setState({ recordingTime: null });\n\n            this.loadDraft();\n            // console.log('error', e);\n        };\n\n        this.recorder = recorder;\n        this.recorder.start(50);\n        this.startTime = new Date();\n\n        TdLibController.clientUpdate({ '@type': 'clientUpdateRecordStart' });\n        this.setState({ recordingTime: new Date() });\n    }\n\n    handleClosePermission = () => {\n        this.setState({\n            recordPermissionDenied: false\n        })\n    };\n\n    render() {\n        const { t } = this.props;\n        const {\n            chatId,\n            editMessageId,\n            newItem,\n            replyToMessageId,\n            files,\n            newDraft,\n            defaultText,\n            defaultUrl,\n            openEditUrl,\n            openEditMedia,\n            recordingReady,\n            recordingTime,\n            recordPermissionDenied,\n            shook\n        } = this.state;\n\n        const isMediaEditing = editMessageId > 0 && !isTextMessage(chatId, editMessageId);\n        let icon = (<SpeedDialIcon open={!recordingTime && recordingReady} openIcon={<MicrophoneIcon />} icon={<SendIcon />} />);\n        if (editMessageId) {\n            icon = <DoneIcon/>;\n        }\n\n        return (\n            <div className='inputbox-background'>\n                <div className={classNames('inputbox', { 'inputbox-recording': recordingTime }, { 'shook': shook })}>\n                    <div className={classNames('inputbox-bubble')}>\n                        <InputBoxHeader\n                            chatId={chatId}\n                            messageId={replyToMessageId}\n                            editMessageId={openEditMedia ? 0 : editMessageId}\n                            onClick={this.handleHeaderClick}\n                        />\n                        <div className='inputbox-wrapper'>\n                            <div className='inputbox-left-column'>\n                                <React.Suspense\n                                    fallback={\n                                        <IconButton className='inputbox-icon-button' aria-label='Emoticon'>\n                                            <InsertEmoticonIcon />\n                                        </IconButton>\n                                    }>\n                                    <EmojiPickerButton onSelect={this.handleEmojiSelect} />\n                                </React.Suspense>\n                            </div>\n                            <div className='inputbox-middle-column'>\n                                <div\n                                    id='inputbox-message'\n                                    className='scrollbars-hidden'\n                                    ref={this.newMessageRef}\n                                    placeholder={isMediaEditing ? t('Caption') : t('Message')}\n                                    contentEditable\n                                    suppressContentEditableWarning\n                                    onKeyDown={this.handleKeyDown}\n                                    // onKeyDownCapture={this.handleKeyDownCapture}\n                                    onPaste={this.handlePaste}\n                                    onInput={this.handleInput}\n                                />\n                            </div>\n                            <div className='inputbox-right-column'>\n                                <RecordTimer/>\n                                <input\n                                    ref={this.attachDocumentRef}\n                                    className='inputbox-attach-button'\n                                    type='file'\n                                    multiple='multiple'\n                                    onChange={this.handleAttachDocumentComplete}\n                                />\n                                <input\n                                    ref={this.attachPhotoRef}\n                                    className='inputbox-attach-button'\n                                    type='file'\n                                    multiple='multiple'\n                                    accept='image/*'\n                                    onChange={this.handleAttachPhotoComplete}\n                                />\n                                {!Boolean(editMessageId) && !recordingTime && (\n                                    <AttachButton\n                                        chatId={chatId}\n                                        onAttachPhoto={this.handleAttachPhoto}\n                                        onAttachDocument={this.handleAttachDocument}\n                                        onAttachPoll={this.handleAttachPoll}\n                                    />\n                                )}\n\n                                {/*<IconButton>*/}\n                                {/*<KeyboardVoiceIcon />*/}\n                                {/*</IconButton>*/}\n                            </div>\n                        </div>\n                    </div>\n                    { recordingTime && (\n                        <div className='inputbox-cancel-record-button-background'>\n                            <IconButton\n                                className='inputbox-cancel-record-button'\n                                aria-label='Delete'\n                                size='small'\n                                color='secondary'\n                                onClick={this.handleCancelRecord}>\n                                <DeleteIcon />\n                            </IconButton>\n                        </div>\n                    )}\n                    <div className='inputbox-send-button-background'>\n                        <IconButton\n                            className={classNames('inputbox-send-button', {'inputbox-send-accent-button': recordingTime || !recordingReady})}\n                            aria-label='Send'\n                            size='small'\n                            onClick={this.handleSubmit}>\n                            {icon}\n                        </IconButton>\n                    </div>\n                </div>\n                {!isPrivateChat(chatId) && <CreatePollDialog onSend={this.handleSendPoll} />}\n                <PasteFilesDialog files={files} onConfirm={this.handlePasteConfirm} onCancel={this.handlePasteCancel} />\n                {/*<UpdateDraftDialog draft={newDraft} onConfirm={this.handleUpdateDraftConfirm} onCancel={this.handleUpdateDraftCancel}/>*/}\n                <EditUrlDialog\n                    open={openEditUrl}\n                    defaultText={defaultText}\n                    defaultUrl={defaultUrl}\n                    onDone={this.handleDoneEditUrl}\n                    onCancel={this.handleCancelEditUrl}\n                />\n                <EditMediaDialog\n                    open={openEditMedia}\n                    chatId={chatId}\n                    messageId={editMessageId}\n                    newItem={newItem}\n                    onEdit={this.handleEditMedia}\n                    onSend={this.handleSendMedia}\n                    onCancel={this.handleCancelEditMedia}\n                />\n                <Dialog\n                    transitionDuration={0}\n                    open={recordPermissionDenied}\n                    onClose={this.handleClosePermission}\n                    aria-labelledby='form-dialog-title'>\n                    <DialogTitle id='form-dialog-title'>{t('RecordDeniedTitle')}</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText>{t('RecordDeniedDescription')}</DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleClosePermission} color='primary'>\n                            {t('Ok')}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </div>\n        );\n    }\n}\n\nexport default withTranslation()(InputBox);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport Button from '@material-ui/core/Button/Button';\nimport './FooterCommand.css';\n\nclass FooterCommand extends React.Component {\n    render() {\n        const { command, onCommand } = this.props;\n\n        return (\n            <div className='footer-command-wrapper'>\n                <div className='footer-command-actions'>\n                    <Button color='primary' className='footer-command-button' onClick={onCommand}>\n                        {command}\n                    </Button>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default FooterCommand;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport FooterCommand from './FooterCommand';\nimport Notifications from './Notifications';\n\nclass NotificationsCommand extends Notifications {\n    render() {\n        const { t } = this.props;\n        const { isMuted } = this.state;\n        const command = isMuted ? t('ChatsUnmute') : t('ChatsMute');\n\n        return <FooterCommand command={command} onCommand={this.handleSetChatNotifications} />;\n    }\n}\n\nexport default withTranslation()(NotificationsCommand);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport InputBox from './InputBox';\nimport FooterCommand from './FooterCommand';\nimport NotificationsCommand from './NotificationsCommand';\nimport { hasBasicGroupId, hasSupergroupId } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport BasicGroupStore from '../../Stores/BasicGroupStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Footer.css';\n\nclass Footer extends React.Component {\n    shouldComponentUpdate(nextProps, nextState) {\n        const { t, chatId } = this.props;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.t !== t) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        BasicGroupStore.on('updateBasicGroup', this.onUpdateBasicGroup);\n        SupergroupStore.on('updateSupergroup', this.onUpdateSupergroup);\n    }\n\n    componentWillUnmount() {\n        BasicGroupStore.off('updateBasicGroup', this.onUpdateBasicGroup);\n        SupergroupStore.off('updateSupergroup', this.onUpdateSupergroup);\n    }\n\n    onUpdateBasicGroup = update => {\n        const { chatId } = this.props;\n\n        if (hasBasicGroupId(chatId, update.basic_group.id)) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateSupergroup = update => {\n        const { chatId } = this.props;\n\n        if (hasSupergroupId(chatId, update.supergroup.id)) {\n            this.forceUpdate();\n        }\n    };\n\n    handleJoin = () => {\n        const { chatId } = this.props;\n        if (!chatId) return;\n\n        TdLibController.send({\n            '@type': 'joinChat',\n            chat_id: chatId\n        });\n    };\n\n    handleDeleteAndExit = () => {\n        const { chatId } = this.props;\n        if (!chatId) return;\n\n        TdLibController.send({\n            '@type': 'deleteChatHistory',\n            chat_id: chatId,\n            remove_from_chat_list: true\n        });\n\n        // TdLibController\n        //     .send({\n        //         '@type': 'leaveChat',\n        //         chat_id: this.props.chatId\n        //     });\n    };\n\n    render() {\n        const { chatId, t } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        const { type } = chat;\n        if (!type) return null;\n\n        switch (type['@type']) {\n            case 'chatTypeBasicGroup': {\n                const basicGroup = BasicGroupStore.get(type.basic_group_id);\n                if (!basicGroup) return null;\n\n                const { status } = basicGroup;\n                if (!status) return null;\n\n                const { is_member, permissions } = status;\n\n                switch (status['@type']) {\n                    case 'chatMemberStatusAdministrator': {\n                        return <InputBox />;\n                    }\n                    case 'chatMemberStatusBanned': {\n                        return <FooterCommand command={t('DeleteChat')} onCommand={this.handleDeleteAndExit} />;\n                    }\n                    case 'chatMemberStatusCreator': {\n                        return is_member ? <InputBox /> : <FooterCommand command={t('JoinGroup')} onCommand={this.handleJoin} />;\n                    }\n                    case 'chatMemberStatusLeft': {\n                        return null;\n                    }\n                    case 'chatMemberStatusMember': {\n                        return <InputBox />;\n                    }\n                    case 'chatMemberStatusRestricted': {\n                        if (is_member) {\n                            return permissions && permissions.can_send_messages ? <InputBox /> : null;\n                        } else {\n                            return <FooterCommand command={t('JoinGroup')} onCommand={this.handleJoin} />;\n                        }\n                    }\n                }\n                break;\n            }\n            case 'chatTypePrivate': {\n                return <InputBox />;\n            }\n            case 'chatTypeSecret': {\n                return <InputBox />;\n            }\n            case 'chatTypeSupergroup': {\n                const supergroup = SupergroupStore.get(type.supergroup_id);\n                if (!supergroup) return null;\n\n                const { is_channel, status } = supergroup;\n                if (!status) return null;\n\n                const { is_member, permissions } = status;\n\n                switch (status['@type']) {\n                    case 'chatMemberStatusAdministrator': {\n                        return <InputBox />;\n                    }\n                    case 'chatMemberStatusBanned': {\n                        return <FooterCommand command={t('DeleteChat')} onCommand={this.handleDeleteAndExit} />;\n                    }\n                    case 'chatMemberStatusCreator': {\n                        return is_member ? <InputBox /> : <FooterCommand command={is_channel ? t('ChannelJoin') : t('JoinGroup')} onCommand={this.handleJoin} />;\n                    }\n                    case 'chatMemberStatusLeft': {\n                        return (\n                            <FooterCommand\n                                command={is_channel ? t('ChannelJoin') : t('JoinGroup')}\n                                onCommand={this.handleJoin}\n                            />\n                        );\n                    }\n                    case 'chatMemberStatusMember': {\n                        if (is_channel) {\n                            return <NotificationsCommand chatId={chatId} />;\n                        } else {\n                            return <InputBox />;\n                        }\n                    }\n                    case 'chatMemberStatusRestricted': {\n                        if (is_member) {\n                            return permissions && permissions.can_send_messages ? <InputBox /> : null;\n                        } else {\n                            return (\n                                <FooterCommand\n                                    command={is_channel ? t('ChannelJoin') : t('JoinGroup')}\n                                    onCommand={this.handleJoin}\n                                />\n                            );\n                        }\n                    }\n                }\n            }\n        }\n\n        return null;\n    }\n}\n\nexport default withTranslation()(Footer);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { compose } from '../../Utils/HOC';\nimport { withTranslation } from 'react-i18next';\nimport { withSnackbar } from 'notistack';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport BroomIcon from '../../Assets/Icons/Broom';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport MoreVertIcon from '../../Assets/Icons/More';\nimport UnpinIcon from '../../Assets/Icons/Pin2';\nimport UserIcon from '../../Assets/Icons/User';\nimport GroupIcon from '../../Assets/Icons/Group';\nimport { clearHistory, leaveChat } from '../../Actions/Chat';\nimport { canClearHistory, canDeleteChat, canUnpinMessage, getViewInfoTitle, isPrivateChat, getDeleteChatTitle } from '../../Utils/Chat';\nimport AppStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MainMenuButton.css';\n\nclass MainMenuButton extends React.Component {\n    state = {\n        anchorEl: null\n    };\n\n    handleButtonClick = async event => {\n        const { currentTarget: anchorEl } = event;\n\n        const chatId = AppStore.getChatId();\n        const chat = await TdLibController.send({ '@type': 'getChat', chat_id: chatId });\n        ChatStore.set(chat);\n\n        this.setState({ anchorEl });\n    };\n\n    handleMenuClose = () => {\n        this.setState({ anchorEl: null });\n    };\n\n    handleChatInfo = () => {\n        this.handleMenuClose();\n        setTimeout(() => this.props.openChatDetails(), 150);\n    };\n\n    handleClearHistory = () => {\n        this.handleMenuClose();\n\n        clearHistory(AppStore.getChatId());\n    };\n\n    handleDeleteChat = () => {\n        this.handleMenuClose();\n\n        leaveChat(AppStore.getChatId());\n    };\n\n    handleUnpin = () => {\n        this.handleMenuClose();\n\n        const chatId = AppStore.getChatId();\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateUnpin',\n            chatId\n        });\n    };\n\n    render() {\n        const { t } = this.props;\n        const { anchorEl } = this.state;\n\n        const chatId = AppStore.getChatId();\n        const clearHistory = canClearHistory(chatId);\n        const deleteChat = canDeleteChat(chatId);\n        const deleteChatTitle = getDeleteChatTitle(chatId, t);\n        const unpinMessage = canUnpinMessage(chatId);\n\n        return (\n            <>\n                <IconButton\n                    aria-owns={anchorEl ? 'simple-menu' : null}\n                    aria-haspopup='true'\n                    className='main-menu-button'\n                    aria-label='Menu'\n                    onClick={this.handleButtonClick}>\n                    <MoreVertIcon />\n                </IconButton>\n                <Menu\n                    id='main-menu'\n                    anchorEl={anchorEl}\n                    open={Boolean(anchorEl)}\n                    onClose={this.handleMenuClose}\n                    getContentAnchorEl={null}\n                    disableAutoFocusItem\n                    disableRestoreFocus={true}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'right'\n                    }}>\n                    <MenuItem onClick={this.handleChatInfo}>\n                        <ListItemIcon>\n                            {isPrivateChat(chatId) ? <UserIcon /> : <GroupIcon />}\n                        </ListItemIcon>\n                        <ListItemText primary={getViewInfoTitle(chatId, t)} />\n                    </MenuItem>\n                    {clearHistory && (\n                        <MenuItem onClick={this.handleClearHistory}>\n                            <ListItemIcon>\n                                <BroomIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('ClearHistory')} />\n                        </MenuItem>\n                    )}\n                    {deleteChat && deleteChatTitle && (\n                        <MenuItem onClick={this.handleDeleteChat}>\n                            <ListItemIcon>\n                                <DeleteIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={deleteChatTitle} />\n                        </MenuItem>\n                    )}\n                    {unpinMessage && (\n                        <MenuItem onClick={this.handleUnpin}>\n                            <ListItemIcon>\n                                <UnpinIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('UnpinMessageAlertTitle')} />\n                        </MenuItem>\n                    )}\n                </Menu>\n            </>\n        );\n    }\n}\n\nconst enhance = compose(\n    withSnackbar,\n    withTranslation()\n);\n\nexport default enhance(MainMenuButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { getChatSubtitle, isAccentChatSubtitle } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport UserStore from '../../Stores/UserStore';\nimport BasicGroupStore from '../../Stores/BasicGroupStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport './HeaderChatSubtitle.css';\n\nclass HeaderChatSubtitle extends React.Component {\n    componentDidMount() {\n        ChatStore.on('updateChatOnlineMemberCount', this.onUpdateChatOnlineMemberCount);\n        ChatStore.on('updateChatTitle', this.onUpdateChatTitle);\n        UserStore.on('updateUserStatus', this.onUpdateUserStatus);\n        ChatStore.on('updateUserChatAction', this.onUpdateUserChatAction);\n        UserStore.on('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.on('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.on('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n        BasicGroupStore.on('updateBasicGroup', this.onUpdateBasicGroup);\n        SupergroupStore.on('updateSupergroup', this.onUpdateSupergroup);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('updateChatOnlineMemberCount', this.onUpdateChatOnlineMemberCount);\n        ChatStore.off('updateChatTitle', this.onUpdateChatTitle);\n        UserStore.off('updateUserStatus', this.onUpdateUserStatus);\n        ChatStore.off('updateUserChatAction', this.onUpdateUserChatAction);\n        UserStore.off('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.off('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.off('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n        BasicGroupStore.off('updateBasicGroup', this.onUpdateBasicGroup);\n        SupergroupStore.off('updateSupergroup', this.onUpdateSupergroup);\n    }\n\n    onUpdateChatOnlineMemberCount = update => {\n        const { chatId } = this.props;\n        if (chatId !== update.chat_id) return;\n\n        this.forceUpdate();\n    };\n\n    onUpdateChatTitle = update => {\n        const { chatId } = this.props;\n        if (chatId !== update.chat_id) return;\n\n        this.forceUpdate();\n    };\n\n    onUpdateUserChatAction = update => {\n        const { chatId } = this.props;\n        if (chatId !== update.chat_id) return;\n\n        this.forceUpdate();\n    };\n\n    onUpdateUserStatus = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup': {\n                const fullInfo = BasicGroupStore.getFullInfo(chat.type.basic_group_id);\n                if (fullInfo && fullInfo.members) {\n                    const member = fullInfo.members.find(x => x.user_id === update.user_id);\n                    if (member) {\n                        this.forceUpdate();\n                    }\n                }\n                break;\n            }\n            case 'chatTypePrivate': {\n                if (chat.type.user_id === update.user_id) {\n                    this.forceUpdate();\n                }\n                break;\n            }\n            case 'chatTypeSecret': {\n                if (chat.type.user_id === update.user_id) {\n                    this.forceUpdate();\n                }\n                break;\n            }\n            case 'chatTypeSupergroup': {\n                break;\n            }\n        }\n    };\n\n    onUpdateUserFullInfo = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        if (\n            (chat.type['@type'] === 'chatTypePrivate' || chat.type['@type'] === 'chatTypeSecret') &&\n            chat.type.user_id === update.user_id\n        ) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateBasicGroupFullInfo = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        if (chat.type['@type'] === 'chatTypeBasicGroup' && chat.type.basic_group_id === update.basic_group_id) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateSupergroupFullInfo = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        if (chat.type['@type'] === 'chatTypeSupergroup' && chat.type.supergroup_id === update.supergroup_id) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateBasicGroup = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        if (chat.type['@type'] === 'chatTypeBasicGroup' && chat.type.basic_group_id === update.basic_group.id) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateSupergroup = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        if (chat.type['@type'] === 'chatTypeSupergroup' && chat.type.supergroup_id === update.supergroup.id) {\n            this.forceUpdate();\n        }\n    };\n\n    render() {\n        const { chatId } = this.props;\n\n        const subtitle = getChatSubtitle(chatId, true);\n        const isAccentSubtitle = isAccentChatSubtitle(chatId);\n\n        return (\n            <div className={classNames('header-chat-subtitle', { 'header-chat-subtitle-accent': isAccentSubtitle })}>\n                {subtitle}\n            </div>\n        );\n    }\n}\n\nHeaderChatSubtitle.propTypes = {\n    chatId: PropTypes.number.isRequired\n};\n\nexport default HeaderChatSubtitle;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport ChatTile from './ChatTile';\nimport DialogTitle from './DialogTitle';\nimport HeaderChatSubtitle from './HeaderChatSubtitle';\nimport './HeaderChat.css';\n\nclass HeaderChat extends React.Component {\n    render() {\n        const { className, chatId, onClick } = this.props;\n\n        return (\n            <div className={classNames('header-chat', className)} onClick={onClick}>\n                <ChatTile chatId={chatId} size={44} />\n                <div className='header-chat-content'>\n                    <DialogTitle chatId={chatId} />\n                    <HeaderChatSubtitle chatId={chatId} />\n                </div>\n            </div>\n        );\n    }\n}\n\nHeaderChat.propTypes = {\n    chatId: PropTypes.number.isRequired\n};\n\nexport default HeaderChat;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport { clearSelection, deleteMessages, forwardMessages } from '../../Actions/Client';\nimport MessageStore from '../../Stores/MessageStore';\nimport './HeaderCommand.css';\n\nclass HeaderCommand extends React.Component {\n    handleCancel = () => {\n        clearSelection();\n    };\n\n    handleDelete = () => {\n        let id = 0;\n        let messageIds = [];\n        for (let { chatId, messageId } of MessageStore.selectedItems.values()) {\n            id = chatId;\n            messageIds.push(messageId);\n        }\n\n        deleteMessages(id, messageIds);\n    };\n\n    handleForward = () => {\n        let id;\n        const messageIds = [];\n        for (let { chatId, messageId } of MessageStore.selectedItems.values()) {\n            id = chatId;\n            messageIds.push(messageId);\n        }\n\n        forwardMessages(id, messageIds);\n    };\n\n    render() {\n        const { t, count } = this.props;\n\n        let canBeDeleted = true;\n        for (let { chatId, messageId } of MessageStore.selectedItems.values()) {\n            const message = MessageStore.get(chatId, messageId);\n            if (!message) {\n                canBeDeleted = false;\n                break;\n            }\n            if (!message.can_be_deleted_only_for_self && !message.can_be_deleted_for_all_users) {\n                canBeDeleted = false;\n                break;\n            }\n        }\n\n        let canBeForwarded = true;\n        for (let { chatId, messageId } of MessageStore.selectedItems.values()) {\n            const message = MessageStore.get(chatId, messageId);\n            if (!message) {\n                canBeForwarded = false;\n                break;\n            }\n            if (!message.can_be_forwarded) {\n                canBeForwarded = false;\n                break;\n            }\n        }\n\n        return (\n            <div className='header-command'>\n                {canBeForwarded && (\n                    <Button color='primary' className='header-command-button' onClick={this.handleForward}>\n                        {count <= 1 ? t('Forward') : `${t('Forward')} ${count}`}\n                    </Button>\n                )}\n                {canBeDeleted && (\n                    <Button color='primary' className='header-command-button' onClick={this.handleDelete}>\n                        {count <= 1 ? t('Delete') : `${t('Delete')} ${count}`}\n                    </Button>\n                )}\n                <div className='header-command-space' />\n                <Button color='primary' className='header-command-button' onClick={this.handleCancel}>\n                    {t('Cancel')}\n                </Button>\n            </div>\n        );\n    }\n}\n\nHeaderCommand.propTypes = {\n    count: PropTypes.number\n};\n\nexport default withTranslation()(HeaderCommand);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport ReplyTile from '../Tile/ReplyTile';\nimport { canPinMessages } from '../../Utils/Chat';\nimport { getContent, getReplyMinithumbnail, getReplyPhotoSize, isDeletedMessage } from '../../Utils/Message';\nimport { loadMessageContents } from '../../Utils/File';\nimport { openChat } from '../../Actions/Client';\nimport { modalManager } from '../../Utils/Modal';\nimport AppStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './PinnedMessage.css';\n\nclass PinnedMessage extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {};\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { prevPropsChatId } = state;\n        const { chatId } = props;\n\n        if (prevPropsChatId !== chatId) {\n            const chat = ChatStore.get(chatId);\n            return {\n                prevPropsChatId: chatId,\n                clientData: ChatStore.getClientData(chatId),\n                messageId: chat && chat.pinned_message_id ? chat.pinned_message_id : 0,\n                confirm: false\n            };\n        }\n\n        return null;\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { messageId } = this.state;\n\n        if (messageId && prevState.messageId !== messageId) {\n            this.loadContent();\n        }\n    }\n\n    componentDidMount() {\n        this.loadContent();\n\n        AppStore.on('clientUpdateDialogsReady', this.onClientUpdateDialogsReady);\n        ChatStore.on('clientUpdateSetChatClientData', this.onClientUpdateSetChatClientData);\n        ChatStore.on('clientUpdateUnpin', this.onClientUpdateUnpin);\n        ChatStore.on('updateChatPinnedMessage', this.onUpdateChatPinnedMessage);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateDialogsReady', this.onClientUpdateDialogsReady);\n        ChatStore.off('clientUpdateSetChatClientData', this.onClientUpdateSetChatClientData);\n        ChatStore.off('clientUpdateUnpin', this.onClientUpdateUnpin);\n        ChatStore.off('updateChatPinnedMessage', this.onUpdateChatPinnedMessage);\n    }\n\n    onClientUpdateUnpin = update => {\n        const { chatId } = update;\n\n        if (this.props.chatId !== chatId) return;\n\n        this.handleDelete();\n    };\n\n    onClientUpdateDialogsReady = update => {\n        const { messageId } = this.state;\n\n        if (messageId) {\n            this.loadContent();\n        }\n    };\n\n    onClientUpdateSetChatClientData = update => {\n        const { chatId, clientData } = update;\n\n        if (this.props.chatId !== chatId) return;\n\n        this.setState({ clientData });\n    };\n\n    onUpdateChatPinnedMessage = update => {\n        const { chat_id, pinned_message_id: messageId } = update;\n        const { chatId } = this.props;\n\n        if (chatId !== chat_id) return;\n\n        this.setState({ messageId });\n    };\n\n    loadContent = () => {\n        const { chatId } = this.props;\n        const { messageId } = this.state;\n\n        if (!chatId) return;\n        if (!messageId) return;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (message) return;\n\n        TdLibController.send({\n            '@type': 'getMessage',\n            chat_id: chatId,\n            message_id: messageId\n        })\n            .then(result => {\n                MessageStore.set(result);\n\n                const store = FileStore.getStore();\n                loadMessageContents(store, [result]);\n\n                this.forceUpdate();\n            })\n            .catch(error => {\n                const { code, message } = error;\n                if (message !== 'Chat not found') {\n                    const deletedMessage = {\n                        '@type': 'deletedMessage',\n                        chat_id: chatId,\n                        id: messageId,\n                        content: null\n                    };\n\n                    MessageStore.set(deletedMessage);\n                    this.forceUpdate();\n                }\n            });\n    };\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { chatId, t, theme } = this.props;\n        const { clientData, confirm, messageId } = this.state;\n\n        if (nextProps.t !== t) {\n            return true;\n        }\n\n        if (nextProps.theme !== theme) {\n            return true;\n        }\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextState.clientData !== clientData) {\n            return true;\n        }\n\n        if (nextState.confirm !== confirm) {\n            return true;\n        }\n\n        if (nextState.messageId !== messageId) {\n            return true;\n        }\n\n        return false;\n    }\n\n    handleClick = event => {\n        const { chatId } = this.props;\n        const { messageId } = this.state;\n\n        if (!messageId) return;\n\n        openChat(chatId, messageId);\n    };\n\n    handleDelete = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        const { chatId } = this.props;\n        const { messageId } = this.state;\n\n        const canPin = canPinMessages(chatId);\n        if (canPin) {\n            this.setState({ confirm: true });\n        } else {\n            const data = ChatStore.getClientData(chatId);\n            await TdLibController.clientUpdate({\n                '@type': 'clientUpdateSetChatClientData',\n                chatId: chatId,\n                clientData: Object.assign({}, data, { unpinned_message_id: messageId })\n            });\n        }\n    };\n\n    handleUnpin = async () => {\n        const { chatId } = this.props;\n\n        this.handleClose();\n\n        TdLibController.send({\n            '@type': 'unpinChatMessage',\n            chat_id: chatId\n        });\n    };\n\n    handleClose = () => {\n        this.setState({ confirm: false });\n    };\n\n    render() {\n        const { chatId, t } = this.props;\n        const { messageId, confirm } = this.state;\n\n        if (!chatId) return null;\n\n        const { unpinned_message_id } = ChatStore.getClientData(chatId);\n        if (unpinned_message_id === messageId) return null;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        let content = !message ? t('Loading') : getContent(message, t);\n        const photoSize = getReplyPhotoSize(chatId, messageId);\n        const minithumbnail = getReplyMinithumbnail(chatId, messageId);\n\n        if (isDeletedMessage(message)) {\n            content = t('DeletedMessage');\n        }\n\n        return (\n            <>\n                <div className='pinned-message' onMouseDown={this.handleClick}>\n                    <div className='border reply-border' />\n                    {photoSize && (\n                        <ReplyTile\n                            chatId={chatId}\n                            messageId={messageId}\n                            photoSize={photoSize}\n                            minithumbnail={minithumbnail}\n                        />\n                    )}\n                    <div className='pinned-message-content'>\n                        <div className='pinned-message-title'>{t('PinnedMessage')}</div>\n                        <div className='pinned-message-subtitle'>{content}</div>\n                    </div>\n                </div>\n                {confirm && (\n                    <Dialog\n                        manager={modalManager}\n                        transitionDuration={0}\n                        open\n                        onClose={this.handleClose}\n                        aria-labelledby='unpin-message-confirmation'>\n                        <DialogTitle id='unpin-message-confirmation'>{t('Confirm')}</DialogTitle>\n                        <DialogContent>\n                            <DialogContentText>{t('UnpinMessageAlert')}</DialogContentText>\n                        </DialogContent>\n                        <DialogActions>\n                            <Button onClick={this.handleClose} color='primary'>\n                                {t('Cancel')}\n                            </Button>\n                            <Button onClick={this.handleUnpin} color='primary'>\n                                {t('Ok')}\n                            </Button>\n                        </DialogActions>\n                    </Dialog>\n                )}\n            </>\n        );\n    }\n}\n\nPinnedMessage.propTypes = {\n    chatId: PropTypes.number.isRequired\n};\n\nexport default withTranslation()(PinnedMessage);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport SearchIcon from '../../Assets/Icons/Search';\nimport MainMenuButton from './MainMenuButton';\nimport HeaderChat from '../Tile/HeaderChat';\nimport HeaderCommand from './HeaderCommand';\nimport HeaderProgress from './HeaderProgress';\nimport PinnedMessage from './PinnedMessage';\nimport { changeChatDetailsVisibility } from '../../Actions/Chat';\nimport {\n    getChatSubtitle,\n    getChatTitle,\n    isAccentChatSubtitle\n} from '../../Utils/Chat';\nimport { openChat, searchChat } from '../../Actions/Client';\nimport AppStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport './Header.css';\n\nclass Header extends Component {\n    state = {\n        authorizationState: AppStore.getAuthorizationState(),\n        connectionState: AppStore.getConnectionState()\n    };\n\n    componentDidMount() {\n        AppStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n        AppStore.on('updateAuthorizationState', this.onUpdateAuthorizationState);\n        AppStore.on('updateConnectionState', this.onUpdateConnectionState);\n\n        MessageStore.on('clientUpdateClearSelection', this.onClientUpdateMessageSelected);\n        MessageStore.on('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateChatId', this.onClientUpdateChatId);\n        AppStore.off('updateAuthorizationState', this.onUpdateAuthorizationState);\n        AppStore.off('updateConnectionState', this.onUpdateConnectionState);\n\n        MessageStore.off('clientUpdateClearSelection', this.onClientUpdateMessageSelected);\n        MessageStore.off('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n    }\n\n    onClientUpdateMessageSelected = update => {\n        this.setState({ selectionCount: MessageStore.selectedItems.size });\n    };\n\n    onClientUpdateChatId = update => {\n        this.forceUpdate();\n    };\n\n    onUpdateConnectionState = update => {\n        this.setState({ connectionState: update.state });\n    };\n\n    onUpdateAuthorizationState = update => {\n        this.setState({ authorizationState: update.authorization_state });\n    };\n\n    openChatDetails = () => {\n        const chatId = AppStore.getChatId();\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const { isSmallWidth } = AppStore;\n\n        if (isSmallWidth) {\n            openChat(chatId, null, true);\n        } else {\n            changeChatDetailsVisibility(true);\n        }\n    };\n\n    handleSearchChat = () => {\n        const chatId = AppStore.getChatId();\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        searchChat(chatId);\n    };\n\n    localize = str => {\n        const { t } = this.props;\n\n        return t(str)\n            .replace('...', '')\n            .replace('…', '');\n    };\n\n    render() {\n        const { t } = this.props;\n        const {\n            authorizationState,\n            connectionState,\n            selectionCount,\n        } = this.state;\n\n        let control = null;\n        if (selectionCount) {\n            control = <HeaderCommand count={selectionCount} />;\n        }\n\n        const chatId = AppStore.getChatId();\n        const chat = ChatStore.get(chatId);\n\n        const isAccentSubtitle = isAccentChatSubtitle(chatId);\n        let title = getChatTitle(chatId, true, t);\n        let subtitle = getChatSubtitle(chatId, true);\n        let showProgressAnimation = false;\n\n        if (connectionState) {\n            switch (connectionState['@type']) {\n                case 'connectionStateConnecting':\n                    title = this.localize('Connecting');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n                case 'connectionStateConnectingToProxy':\n                    title = this.localize('Connecting to proxy');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n                case 'connectionStateReady':\n                    break;\n                case 'connectionStateUpdating':\n                    title = this.localize('Updating');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n                case 'connectionStateWaitingForNetwork':\n                    title = this.localize('Waiting for network');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n            }\n        } else if (authorizationState) {\n            switch (authorizationState['@type']) {\n                case 'authorizationStateClosed':\n                    break;\n                case ' authorizationStateClosing':\n                    break;\n                case 'authorizationStateLoggingOut':\n                    title = this.localize('Logging out');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n                case 'authorizationStateReady':\n                    break;\n                case 'authorizationStateWaitCode':\n                    break;\n                case 'authorizationStateWaitEncryptionKey':\n                    title = this.localize('Loading');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n                case 'authorizationStateWaitPassword':\n                    break;\n                case 'authorizationStateWaitPhoneNumber':\n                    break;\n                case 'authorizationStateWaitTdlibParameters':\n                    title = this.localize('Loading');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n            }\n        } else {\n            title = this.localize('Loading');\n            subtitle = '';\n            showProgressAnimation = true;\n        }\n\n        control = control || (\n            <div className='header-details'>\n                {showProgressAnimation ? (\n                    <div\n                        className={classNames('header-status', 'grow', chat ? 'cursor-pointer' : 'cursor-default')}\n                        onClick={this.openChatDetails}>\n                        <span className='header-status-content'>{title}</span>\n                        <HeaderProgress />\n                        <span\n                            className={classNames('header-status-title', { 'header-status-accent': isAccentSubtitle })}>\n                            {subtitle}\n                        </span>\n                        <span className='header-status-tail' />\n                    </div>\n                ) : (\n                    <HeaderChat\n                        className={classNames('grow', 'cursor-pointer')}\n                        chatId={chatId}\n                        onClick={this.openChatDetails}\n                    />\n                )}\n                <PinnedMessage chatId={chatId} />\n                {chat && (\n                    <>\n                        <IconButton\n                            className='header-right-second-button'\n                            aria-label='Search'\n                            onClick={this.handleSearchChat}>\n                            <SearchIcon />\n                        </IconButton>\n                        <MainMenuButton openChatDetails={this.openChatDetails} />\n                    </>\n                )}\n            </div>\n        );\n\n        return control;\n    }\n}\n\nexport default withTranslation()(Header);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport VolumeMuteIcon from '@material-ui/icons/VolumeMute';\nimport VolumeDownIcon from '@material-ui/icons/VolumeDown';\nimport VolumeUpIcon from '@material-ui/icons/VolumeUp';\nimport VolumeOffIcon from '@material-ui/icons/VolumeOff';\nimport IconButton from '@material-ui/core/IconButton';\nimport Slider from '@material-ui/core/Slider';\nimport { PLAYER_VOLUME_NORMAL } from '../../Constants';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './VolumeButton.css';\n\nclass VolumeButton extends React.Component {\n    state = {\n        anchorEl: null,\n        value: PlayerStore.volume,\n        prevValue: PlayerStore.volume,\n        dragging: false,\n        buttonOver: false,\n        popupOver: false\n    };\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaVolume', this.onClientUpdateMediaVolume);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.off('clientUpdateMediaVolume', this.onClientUpdateMediaVolume);\n    }\n\n    onClientUpdateMediaVolume = update => {\n        const { volume, prevVolume } = update;\n\n        if (prevVolume === undefined) {\n            this.setState({ value: volume });\n        } else {\n            this.setState({ value: volume, prevValue: prevVolume });\n        }\n    };\n\n    handlePopoverOpen = anchorEl => {\n        this.setState({ anchorEl: anchorEl });\n    };\n\n    handlePopoverClose = () => {\n        const { dragging, buttonOver, popupOver } = this.state;\n\n        if (dragging) return;\n        if (buttonOver) return;\n        if (popupOver) return;\n\n        this.setState({ anchorEl: null });\n    };\n\n    handleMouseEnter = (event, openPopover) => {\n        this.setState({ buttonOver: true });\n\n        if (openPopover) {\n            this.handlePopoverOpen(event.currentTarget);\n        }\n    };\n\n    handleMouseLeave = () => {\n        this.setState({ buttonOver: false }, () => {\n            this.handlePopoverClose();\n        });\n    };\n\n    handlePopupMouseLeave = () => {\n        this.setState({ popupOver: false }, () => {\n            this.handlePopoverClose();\n        });\n    };\n\n    handleVoiceClick = () => {\n        const { value, prevValue } = this.state;\n        const nextValue = value > 0 ? 0 : prevValue || PLAYER_VOLUME_NORMAL;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaVolume',\n            volume: nextValue\n        });\n    };\n\n    handleChange = (event, value) => {\n        const { dragging, prevValue } = this.state;\n\n        if (dragging) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaVolume',\n                volume: value\n            });\n        } else {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaVolume',\n                prevVolume: value > 0 ? value : prevValue,\n                volume: value\n            });\n        }\n    };\n\n    handleDragStart = () => {\n        const { value } = this.state;\n\n        this.setState({\n            dragging: true,\n            prevValue: value\n        });\n    };\n\n    handleDragEnd = () => {\n        const { value, prevValue } = this.state;\n\n        this.setState(\n            {\n                dragging: false,\n                prevValue: value > 0 ? value : prevValue\n            },\n            () => {\n                this.handlePopoverClose();\n            }\n        );\n    };\n\n    getVolumeIcon = value => {\n        if (value === 0) {\n            return <VolumeOffIcon fontSize='small' />;\n        }\n\n        if (value < 0.25) {\n            return <VolumeMuteIcon fontSize='small' />;\n        }\n\n        if (value < 0.5) {\n            return <VolumeDownIcon fontSize='small' />;\n        }\n\n        return <VolumeUpIcon fontSize='small' />;\n    };\n\n    render() {\n        const { anchorEl, value } = this.state;\n        const open = Boolean(anchorEl);\n\n        return (\n            <div\n                onMouseEnter={e => this.handleMouseEnter(e, true)}\n                onMouseLeave={this.handleMouseLeave}\n                style={{\n                    position: 'relative',\n                    background: 'transparent'\n                }}>\n                <IconButton className='header-player-button' color='primary' onClick={this.handleVoiceClick}>\n                    {this.getVolumeIcon(value)}\n                </IconButton>\n                <div\n                    style={{\n                        position: 'absolute',\n                        background: 'transparent',\n                        visibility: open ? 'visible' : 'hidden',\n                        zIndex: 1\n                    }}\n                    onMouseEnter={e => this.handleMouseEnter(e, false)}\n                    onMouseLeave={this.handlePopupMouseLeave}>\n                    <div className='volume-button-panel'>\n                        <Slider\n                            min={0}\n                            max={1}\n                            step={0.01}\n                            value={value}\n                            onChange={this.handleChange}\n                            onDragStart={this.handleDragStart}\n                            onDragEnd={this.handleDragEnd}\n                            orientation='vertical'\n                        />\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default VolumeButton;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport IconButton from '@material-ui/core/IconButton';\nimport RepeatIcon from '@material-ui/icons/Repeat';\nimport RepeatOneIcon from '@material-ui/icons/RepeatOne';\nimport PlayerStore, { RepeatEnum } from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\n\nclass RepeatButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { repeat } = PlayerStore;\n\n        this.state = {\n            repeat\n        };\n    }\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaRepeat', this.onClientUpdateMediaRepeat);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.off('clientUpdateMediaRepeat', this.onClientUpdateMediaRepeat);\n    }\n\n    onClientUpdateMediaRepeat = update => {\n        const { repeat } = update;\n\n        this.setState({ repeat });\n    };\n\n    handleRepeat = () => {\n        const { repeat } = this.state;\n\n        let nextRepeat = repeat;\n        switch (repeat) {\n            case RepeatEnum.NONE: {\n                nextRepeat = RepeatEnum.REPEAT;\n                break;\n            }\n            case RepeatEnum.REPEAT: {\n                nextRepeat = RepeatEnum.REPEAT_ONE;\n                break;\n            }\n            case RepeatEnum.REPEAT_ONE: {\n                nextRepeat = RepeatEnum.NONE;\n                break;\n            }\n        }\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaRepeat',\n            repeat: nextRepeat\n        });\n    };\n\n    getIcon = repeat => {\n        switch (repeat) {\n            case RepeatEnum.NONE: {\n                return <RepeatIcon fontSize='small' />;\n            }\n            case RepeatEnum.REPEAT: {\n                return <RepeatIcon fontSize='small' />;\n            }\n            case RepeatEnum.REPEAT_ONE: {\n                return <RepeatOneIcon fontSize='small' />;\n            }\n            default: {\n                return <RepeatIcon fontSize='small' />;\n            }\n        }\n    };\n\n    render() {\n        const { repeat } = this.state;\n\n        return (\n            <IconButton\n                className='header-player-button'\n                color={repeat === RepeatEnum.NONE ? 'default' : 'primary'}\n                onClick={this.handleRepeat}>\n                {this.getIcon(repeat)}\n            </IconButton>\n        );\n    }\n}\n\nexport default RepeatButton;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport IconButton from '@material-ui/core/IconButton';\nimport ShuffleIcon from '@material-ui/icons/Shuffle';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\n\nclass ShuffleButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { shuffle } = PlayerStore;\n\n        this.state = {\n            shuffle\n        };\n    }\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaShuffle', this.onClientUpdateMediaShuffle);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.off('clientUpdateMediaShuffle', this.onClientUpdateMediaShuffle);\n    }\n\n    onClientUpdateMediaShuffle = update => {\n        const { shuffle } = update;\n\n        this.setState({ shuffle });\n    };\n\n    handleShuffle = () => {\n        const { shuffle } = this.state;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaShuffle',\n            shuffle: !shuffle\n        });\n    };\n\n    render() {\n        const { shuffle } = this.state;\n\n        return (\n            <IconButton\n                className='header-player-button'\n                color={!shuffle ? 'default' : 'primary'}\n                onClick={this.handleShuffle}>\n                <ShuffleIcon fontSize='small' />\n            </IconButton>\n        );\n    }\n}\n\nexport default ShuffleButton;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport IconButton from '@material-ui/core/IconButton';\nimport { PLAYER_PLAYBACKRATE_FAST, PLAYER_PLAYBACKRATE_NORMAL } from '../../Constants';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\n\nclass PlaybackRateButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { audioPlaybackRate, playbackRate } = PlayerStore;\n\n        this.state = {\n            audioPlaybackRate,\n            playbackRate\n        };\n    }\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaPlaybackRate', this.onClientUpdateMediaPlaybackRate);\n        PlayerStore.on('clientUpdateMediaAudioPlaybackRate', this.onClientUpdateMediaAudioPlaybackRate);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.off('clientUpdateMediaPlaybackRate', this.onClientUpdateMediaPlaybackRate);\n        PlayerStore.off('clientUpdateMediaAudioPlaybackRate', this.onClientUpdateMediaAudioPlaybackRate);\n    }\n\n    onClientUpdateMediaPlaybackRate = update => {\n        const { playbackRate } = update;\n\n        this.setState({ playbackRate });\n    };\n\n    onClientUpdateMediaAudioPlaybackRate = update => {\n        const { audioPlaybackRate } = update;\n\n        this.setState({ audioPlaybackRate });\n    };\n\n    handlePlaybackRate = () => {\n        const { audio } = this.props;\n        const { audioPlaybackRate, playbackRate } = this.state;\n\n        const rate = audio ? audioPlaybackRate : playbackRate;\n        const nextRate = rate === PLAYER_PLAYBACKRATE_NORMAL\n            ? PLAYER_PLAYBACKRATE_FAST\n            : PLAYER_PLAYBACKRATE_NORMAL;\n\n        if (audio) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaAudioPlaybackRate',\n                audioPlaybackRate: nextRate\n            });\n        } else {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaPlaybackRate',\n                playbackRate: nextRate\n            });\n        }\n    };\n\n    render() {\n        const { audio } = this.props;\n        const { audioPlaybackRate, playbackRate } = this.state;\n\n        const rate = audio ? audioPlaybackRate : playbackRate;\n\n        return (\n            <IconButton\n                className='header-player-button'\n                color={rate > PLAYER_PLAYBACKRATE_NORMAL ? 'primary' : 'default'}\n                onClick={this.handlePlaybackRate}>\n                <div className='header-player-playback-icon'>2X</div>\n            </IconButton>\n        );\n    }\n}\n\nPlaybackRateButton.defaultProps = {\n    audio: false\n}\n\nPlaybackRateButton.propTypes = {\n    audio: PropTypes.bool\n}\n\nexport default PlaybackRateButton;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { getDurationString } from '../../Utils/Common';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport './Time.css';\n\nclass Time extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { duration } = this.props;\n\n        const currentTime = 0;\n        const reverse = false;\n\n        this.state = {\n            reverse,\n            currentTime,\n            duration,\n            currentTimeString: getDurationString(currentTime, duration, reverse),\n        };\n    }\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaTime', this.onClientUpdateMediaTime);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.off('clientUpdateMediaTime', this.onClientUpdateMediaTime);\n    }\n\n    onClientUpdateMediaTime = update => {\n        const { currentTime, duration } = update;\n        const { reverse } = this.state;\n\n        this.setState({\n            currentTime,\n            duration,\n            currentTimeString: getDurationString(Math.floor(currentTime || 0), duration, reverse)\n        });\n    };\n\n    handleReverse = event => {\n        event.stopPropagation();\n        event.preventDefault();\n\n        const { currentTime, duration, reverse } = this.state;\n\n        this.setState({\n            reverse: !reverse,\n            currentTimeString: getDurationString(Math.floor(currentTime || 0), duration, !reverse)\n        });\n    };\n\n    render() {\n        const { currentTimeString } = this.state;\n\n        return (\n            <div className='header-player-time' onClick={this.handleReverse}>\n                {currentTimeString}\n            </div>\n        );\n    }\n}\n\nexport default Time;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport * as ReactDOM from 'react-dom';\nimport MediaAudio from '../Message/Media/Audio';\nimport MediaVoiceNote from '../Message/Media/VoiceNote';\nimport { openMedia } from '../../Utils/Message';\nimport { getMedia } from '../../Utils/Media';\nimport { isCurrentSource, playlistItemEquals } from '../../Utils/Player';\nimport { openInstantViewMedia } from '../../Utils/InstantView';\nimport { SCROLL_PRECISION } from '../../Constants';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Playlist.css';\n\nclass Playlist extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.listRef = React.createRef();\n        this.itemRefMap = new Map();\n\n        const { message, block, playlist } = PlayerStore;\n        this.state = {\n            message,\n            block,\n            playlist,\n\n            open: false,\n            titleMouseOver: false,\n            playlistMouseOver: false\n        };\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { open } = this.state;\n\n        if (!prevState.open && open) {\n            this.scrollToActive();\n        }\n    }\n\n    scrollToActive = () => {\n        const list = this.listRef.current;\n        if (!list) return;\n\n        const { playlist, message, block } = this.state;\n        if (!message && !block) return;\n        if (!playlist) return;\n\n        const index = [...playlist.items]\n            .reverse()\n            .findIndex(x => playlistItemEquals(x, message || block));\n        if (index === -1) return;\n\n        const item = this.itemRefMap.get(index);\n        if (!item) return;\n\n        const node = ReactDOM.findDOMNode(item);\n        if (!node) return;\n\n        list.scrollTop = node.offsetTop - 15;\n    };\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.on('clientUpdateMediaPlaylist', this.onClientUpdateMediaPlaylist);\n        PlayerStore.on('clientUpdateMediaPlaylistLoading', this.onClientUpdateMediaPlaylistLoading);\n        PlayerStore.on('clientUpdateMediaTitleMouseOver', this.onClientUpdateMediaTitleMouseOver);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.off('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.off('clientUpdateMediaPlaylist', this.onClientUpdateMediaPlaylist);\n        PlayerStore.off('clientUpdateMediaPlaylistLoading', this.onClientUpdateMediaPlaylistLoading);\n        PlayerStore.off('clientUpdateMediaTitleMouseOver', this.onClientUpdateMediaTitleMouseOver);\n    }\n\n    onClientUpdateMediaTitleMouseOver = update => {\n        const { over } = update;\n\n        if (over) {\n            this.setState(\n                {\n                    playlistMouseOver: over\n                },\n                () => {\n                    this.tryOpen();\n                }\n            );\n        } else {\n            this.setState(\n                {\n                    playlistMouseOver: over\n                },\n                () => {\n                    this.tryClose();\n                }\n            );\n        }\n    };\n\n    onClientUpdateMediaActive = update => {\n        const { source } = update;\n\n        switch (source['@type']) {\n            case 'message': {\n\n                this.setState({\n                    message: source,\n                    block: null\n                })\n                break;\n            }\n            case 'instantViewSource': {\n\n                this.setState({\n                    message: null,\n                    block: source.block\n                });\n                break;\n            }\n        }\n    };\n\n    onClientUpdateMediaPlaylistLoading = update => {\n        const { message, block } = this.state;\n        const { source } = update;\n\n        const chatId = message ? message.chat_id : 0;\n        const messageId = message ? message.id : 0;\n\n        if (isCurrentSource(chatId, messageId, block, source)) {\n            this.setState({\n                playlist: null\n            });\n        }\n    };\n\n    onClientUpdateMediaPlaylist = update => {\n        const { message, block } = this.state;\n        const { source, playlist } = update;\n\n        const chatId = message ? message.chat_id : 0;\n        const messageId = message ? message.id : 0;\n\n        if (isCurrentSource(chatId, messageId, block, source)) {\n            this.setState({\n                playlist\n            });\n        }\n    };\n\n    tryOpen = () => {\n        clearTimeout(this.openTimeout);\n\n        this.openTimeout = setTimeout(() => {\n            const { titleMouseOver, playlistMouseOver } = this.state;\n            this.setState({\n                open: titleMouseOver || playlistMouseOver\n            });\n        }, 250);\n    };\n\n    tryClose = () => {\n        clearTimeout(this.timeout);\n\n        this.timeout = setTimeout(() => {\n            const { titleMouseOver, playlistMouseOver } = this.state;\n            this.setState({\n                open: titleMouseOver || playlistMouseOver\n            });\n        }, 250);\n    };\n\n    handleMouseEnter = () => {\n        this.setState({\n            playlistMouseOver: true,\n            open: true\n        });\n    };\n\n    handleMouseLeave = () => {\n        this.setState(\n            {\n                playlistMouseOver: false\n            },\n            () => {\n                this.tryClose();\n            }\n        );\n    };\n\n    handleScroll = () => {\n        const list = this.listRef.current;\n        if (!list) return;\n\n        if (list.scrollTop <= SCROLL_PRECISION) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaPlaylistNext'\n            });\n        } else if (list.scrollTop + list.offsetHeight >= list.scrollHeight - SCROLL_PRECISION) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaPlaylistPrev'\n            });\n        }\n    };\n\n    getPageBlock(block, instantView) {\n        if (!block) return null;\n\n        let element = null;\n        switch (block['@type']) {\n            case 'pageBlockAudio': {\n                element = (\n                    <MediaAudio\n                        block={block}\n                        audio={block.audio}\n                        openMedia={() => openInstantViewMedia(block.audio, block.caption, block, instantView, true)} />\n                );\n                break;\n            }\n            case 'pageBlockVoiceNote': {\n                element = (\n                    <MediaVoiceNote\n                        block={block}\n                        voiceNote={block.voice_note}\n                        openMedia={() => openInstantViewMedia(block.voice_note, block.caption, block, instantView, true)} />\n                );\n                break;\n            }\n        }\n\n        return element;\n    }\n\n    render() {\n        const { open, playlist } = this.state;\n\n        if (!open) return null;\n        if (!playlist) return null;\n\n        const { items } = playlist;\n        if (!items) return null;\n        if (items.length <= 1) return null;\n\n        this.itemRefMap.clear();\n\n        let iv = null;\n        if (items[0]['@type'] === 'instantViewSource') {\n            iv = playlist.source.instantView;\n        }\n\n        const getMediaFunc = items[0]['@type'] === 'message'\n            ? x => getMedia(x, () => openMedia(x.chat_id, x.id))\n            : x => this.getPageBlock(x, iv)\n\n        return (\n            <div className='playlist'>\n                <div className='playlist-wrapper'>\n                    <div\n                        ref={this.listRef}\n                        className='playlist-items'\n                        onMouseEnter={this.handleMouseEnter}\n                        onMouseLeave={this.handleMouseLeave}\n                        onScroll={this.handleScroll}>\n                        {[...items]\n                            .reverse()\n                            .map((x, index) => (\n                                <div key={x.id || index} ref={el => this.itemRefMap.set(index, el)} className='playlist-item'>\n                                    {getMediaFunc(x)}\n                                </div>\n                            ))}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nPlaylist.propTypes = {\n\n};\n\nexport default Playlist;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { loadInstantViewContent } from '../Utils/File';\nimport { setInstantViewContent } from './Client';\nimport TdLibController from '../Controllers/TdLibController';\n\nexport function openMediaInstantView(instantView, block) {\n    const url = urlCache.get(instantView);\n    if (!url) return;\n\n    console.log('[IV] open', instantView);\n    loadInstantViewContent(instantView);\n    setInstantViewContent({ instantView, block, url });\n}\n\nlet timestamp = null;\n\nconst ivCache = new Map();\nconst urlCache = new Map();\n\nexport async function openInstantView(url) {\n    try {\n        let result = null;\n        if (ivCache.has(url)) {\n            result = ivCache.get(url);\n        } else {\n            const now = (timestamp = new Date());\n            result = await TdLibController.send({\n                '@type': 'getWebPageInstantView',\n                url,\n                force_full: true\n            });\n            ivCache.set(url, result);\n            urlCache.set(result, url);\n            if (timestamp !== now) return;\n        }\n\n        console.log('[IV] open', result);\n        loadInstantViewContent(result);\n        setInstantViewContent({ instantView: result, url });\n    } catch {\n        const newWindow = window.open();\n        newWindow.opener = null;\n        newWindow.location = url;\n    }\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport PlayArrowIcon from '../../Assets/Icons/PlayArrow';\nimport PauseIcon from '../../Assets/Icons/Pause';\nimport SkipNextIcon from '@material-ui/icons/SkipNext';\nimport SkipPreviousIcon from '@material-ui/icons/SkipPrevious';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport VolumeButton from '../Player/VolumeButton';\nimport RepeatButton from '../Player/RepeatButton';\nimport ShuffleButton from '../Player/ShuffleButton';\nimport PlaybackRateButton from './PlaybackRateButton';\nimport Time from '../Player/Time';\nimport Playlist from '../Player/Playlist';\nimport { supportsStreaming } from '../../Utils/File';\nimport { openChat } from '../../Actions/Client';\nimport { getDate, getDateHint, getMessageAudio, hasAudio, hasVoice, useAudioPlaybackRate } from '../../Utils/Message';\nimport { getCurrentTime, getMediaTitle, getMediaMimeType, getMediaSrc, isCurrentSource, playlistItemEquals } from '../../Utils/Player';\nimport { openMediaInstantView } from '../../Actions/InstantView';\nimport { clamp } from '../../Utils/Common';\nimport { PLAYER_PLAYBACKRATE_NORMAL, PLAYER_SEEK_STEP_BIG } from '../../Constants';\nimport AppStore from '../../Stores/ApplicationStore';\nimport FileStore from '../../Stores/FileStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './HeaderPlayer.css';\n\nclass HeaderPlayer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.videoRef = React.createRef();\n\n        const { message, block, instantView, playlist } = PlayerStore;\n        const { currentTime, duration } = getCurrentTime(message);\n\n        this.state = {\n            currentTime,\n            duration,\n            message,\n            block,\n            instantView,\n            playlist,\n            playing: false,\n            src: getMediaSrc(message),\n            mimeType: getMediaMimeType(message)\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { message, block, playlist, src, playing } = this.state;\n\n        if (nextState.block !== block) {\n            return true;\n        }\n\n        if (nextState.message !== message) {\n            return true;\n        }\n\n        if (nextState.playlist !== playlist) {\n            return true;\n        }\n\n        if (nextState.src !== src) {\n            return true;\n        }\n\n        if (nextState.playing !== playing) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        this.addMediaSessionHandlers();\n\n        AppStore.on('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n        FileStore.on('clientUpdateVoiceNoteBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateVideoNoteBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateAudioBlob', this.onClientUpdateMediaBlob);\n        MessageStore.on('clientUpdateRecordStart', this.onClientUpdateRecordStart);\n        MessageStore.on('clientUpdateRecordStop', this.onClientUpdateRecordStop);\n        PlayerStore.on('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.on('clientUpdateMediaClose', this.onClientUpdateMediaClose);\n        PlayerStore.on('clientUpdateMediaPlaylist', this.onClientUpdateMediaPlaylist);\n        PlayerStore.on('clientUpdateMediaViewerPlay', this.onClientUpdateMediaViewerPlay);\n        PlayerStore.on('clientUpdateMediaViewerPause', this.onClientUpdateMediaViewerPause);\n        PlayerStore.on('clientUpdateMediaViewerEnded', this.onClientUpdateMediaViewerEnded);\n        PlayerStore.on('clientUpdateMediaVolume', this.onClientUpdateMediaVolume);\n        PlayerStore.on('clientUpdateMediaPlaybackRate', this.onClientUpdateMediaPlaybackRate);\n        PlayerStore.on('clientUpdateMediaAudioPlaybackRate', this.onClientUpdateMediaAudioPlaybackRate);\n        PlayerStore.on('clientUpdateMediaSeek', this.onClientUpdateMediaSeek);\n    }\n\n    componentWillUnmount() {\n        this.removeMediaSessionHandlers();\n\n        AppStore.off('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n        FileStore.off('clientUpdateVoiceNoteBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateVideoNoteBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateAudioBlob', this.onClientUpdateMediaBlob);\n        MessageStore.off('clientUpdateRecordStart', this.onClientUpdateRecordStart);\n        MessageStore.off('clientUpdateRecordStop', this.onClientUpdateRecordStop);\n        PlayerStore.off('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.off('clientUpdateMediaClose', this.onClientUpdateMediaClose);\n        PlayerStore.off('clientUpdateMediaPlaylist', this.onClientUpdateMediaPlaylist);\n        PlayerStore.off('clientUpdateMediaViewerPlay', this.onClientUpdateMediaViewerPlay);\n        PlayerStore.off('clientUpdateMediaViewerPause', this.onClientUpdateMediaViewerPause);\n        PlayerStore.off('clientUpdateMediaViewerEnded', this.onClientUpdateMediaViewerEnded);\n        PlayerStore.off('clientUpdateMediaVolume', this.onClientUpdateMediaVolume);\n        PlayerStore.off('clientUpdateMediaPlaybackRate', this.onClientUpdateMediaPlaybackRate);\n        PlayerStore.off('clientUpdateMediaAudioPlaybackRate', this.onClientUpdateMediaAudioPlaybackRate);\n        PlayerStore.off('clientUpdateMediaSeek', this.onClientUpdateMediaSeek);\n    }\n\n    addMediaSessionHandlers() {\n        const { mediaSession } = navigator;\n        if (!mediaSession) return;\n\n        try {\n            mediaSession.setActionHandler('nexttrack', this.handleNext);\n            mediaSession.setActionHandler('previoustrack', this.handlePrev);\n            mediaSession.setActionHandler('seekforward', this.handleSeekForward);\n            mediaSession.setActionHandler('seekbackward', this.handleSeekBackward);\n            mediaSession.setActionHandler('seekto', this.handleSeekTo);\n        } catch {\n\n        }\n    }\n\n    handleSeekForward = () => {\n        const video = this.videoRef.current;\n        if (!video) return;\n\n        this.handleSeek(video.currentTime + PLAYER_SEEK_STEP_BIG);\n    };\n\n    handleSeekBackward = () => {\n        const video = this.videoRef.current;\n        if (!video) return;\n\n        this.handleSeek(video.currentTime - PLAYER_SEEK_STEP_BIG);\n    };\n\n    handleSeekTo = event => {\n        const video = this.videoRef.current;\n        if (!video) return;\n\n        this.handleSeek(event.seekTime);\n    };\n\n    handleSeek = currentTime => {\n        const video = this.videoRef.current;\n        if (!video) return;\n\n        currentTime = clamp(currentTime, 0, video.duration || 0);\n\n        video.currentTime = currentTime;\n    };\n\n    removeMediaSessionHandlers() {\n        const { mediaSession } = navigator;\n        if (!mediaSession) return;\n\n        try{\n            mediaSession.setActionHandler('nexttrack', null);\n            mediaSession.setActionHandler('previoustrack', null);\n            mediaSession.setActionHandler('seekforward', null);\n            mediaSession.setActionHandler('seekbackward', null);\n            mediaSession.setActionHandler('seekto', null);\n        }catch {\n\n        }\n    }\n\n    fadeOutVolume(duration) {\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        const totalIterations = 20;\n        let count = 0;\n        const currentVolume = player.volume;\n        this.volumeInterval = setInterval(() => {\n            if (count >= totalIterations) {\n                player.pause();\n                player.volume = currentVolume;\n                clearInterval(this.volumeInterval);\n            } else {\n                player.volume = currentVolume / (count + 1);\n                count++;\n            }\n        }, duration / totalIterations);\n    }\n\n    fadeInVolume(duration) {\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        const totalIterations = 20;\n        let count = 0;\n        const currentVolume = player.volume;\n        player.volume = 0;\n        player.play();\n        this.volumeInterval = setInterval(() => {\n            if (count >= totalIterations) {\n                player.volume = currentVolume;\n                clearInterval(this.volumeInterval);\n            } else {\n                player.volume = currentVolume / totalIterations * (count + 1);\n                count++;\n            }\n        }, duration / totalIterations);\n    }\n\n    onClientUpdateRecordStart = update => {\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        if (!player.paused) {\n            this.fadeOutVolume(250);\n            this.pausedForRecord = true;\n        }\n    };\n\n    onClientUpdateRecordStop = update => {\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        if (player.paused && this.pausedForRecord) {\n            this.fadeInVolume(250);\n            this.pausedForRecord = false;\n        }\n    };\n\n    onClientUpdateMediaPlaybackRate = update => {\n        const { playbackRate } = update;\n\n        const { message, block } = this.state;\n        if (!message && !block) return;\n\n        const audio = hasAudio(message || block);\n        if (audio) return;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        player.playbackRate = playbackRate;\n    };\n\n    onClientUpdateMediaAudioPlaybackRate = update => {\n        const { audioPlaybackRate } = update;\n\n        const { message, block } = this.state;\n        if (!message && !block) return;\n\n        if (!hasAudio(message || block)) return;\n        if (!useAudioPlaybackRate(message || block)) return;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        player.playbackRate = audioPlaybackRate;\n    };\n\n    onClientUpdateMediaVolume = update => {\n        const { volume } = update;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        player.volume = volume;\n    };\n\n    onClientUpdateMediaSeek = update => {\n        const { source, value, duration } = update;\n        const { message, block } = this.state;\n\n        if (!isCurrentSource(message? message.chat_id : 0, message? message.id : 0, block, source)) return;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n        if (!player.duration) {\n            this.currentValue = { value, duration };\n            return;\n        }\n\n        player.currentTime = value * player.duration;\n    };\n\n    onClientUpdateMediaViewerContent = update => {\n        this.playingMediaViewer = Boolean(AppStore.mediaViewerContent);\n    };\n\n    onClientUpdateMediaViewerEnded = update => {\n        this.playingMediaViewer = false;\n    };\n\n    onClientUpdateMediaViewerPause = update => {\n        this.playingMediaViewer = false;\n    };\n\n    onClientUpdateMediaViewerPlay = update => {\n        this.playingMediaViewer = true;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        this.fadeOutVolume(250);\n    };\n\n    startPlayingFile = source => {\n        if (!source) return;\n\n        const { playlist } = PlayerStore;\n        const { src: prevSrc } = this.state;\n\n        const src = getMediaSrc(source);\n        const mimeType = getMediaMimeType(source);\n        const { currentTime, duration } = getCurrentTime(source);\n        const playing = Boolean(src);\n\n        const srcSource = source['@type'] === 'instantViewSource'\n            ? { message: null, block: source.block, instantView: source.instantView }\n            : { message: source, block: null, instantView: null };\n\n        this.setState(\n            {\n                currentTime,\n                duration,\n                playlist,\n                playing,\n                src,\n                ...srcSource,\n                mimeType\n            },\n            () => {\n                const player = this.videoRef.current;\n                if (!player) return;\n\n                if (prevSrc !== src) {\n                    player.load();\n                    if (this.currentValue) {\n                        player.currentTime = this.currentValue.value * this.currentValue.duration;\n                        this.currentValue = null;\n                    } else {\n                        player.currentTime = currentTime;\n                    }\n                }\n\n                if (this.playingMediaViewer) {\n                    player.pause();\n\n                    TdLibController.clientUpdate({\n                        '@type': 'clientUpdateMediaPause',\n                        source\n                    });\n                } else if (player.paused) {\n                    player.play();\n                }\n            }\n        );\n    };\n\n    onClientUpdateMediaBlob = update => {\n        const { chatId, messageId, fileId } = update;\n        const { message, block, instantView } = this.state;\n\n        if (message) {\n            const { chat_id, id, content } = message;\n            if (!content) return;\n            if (chatId !== chat_id || messageId !== id) return;\n\n            let startPlaying = false;\n            switch (content['@type']) {\n                case 'messageText': {\n                    const { web_page } = content;\n                    if (web_page) {\n                        const { audio, voice_note, video_note } = web_page;\n\n                        if (audio) {\n                            if (supportsStreaming()) return;\n\n                            const { audio: file } = audio;\n                            if (file) {\n                                startPlaying = true;\n                                break;\n                            }\n                        }\n\n                        if (voice_note) {\n                            const { voice } = voice_note;\n                            if (voice) {\n                                startPlaying = true;\n                                break;\n                            }\n                        }\n\n                        if (video_note) {\n                            const { video } = video_note;\n                            if (video) {\n                                startPlaying = true;\n                                break;\n                            }\n                        }\n                    }\n\n                    break;\n                }\n                case 'messageAudio': {\n                    const { audio } = content;\n                    if (audio) {\n                        if (supportsStreaming()) return;\n\n                        const { audio: file } = audio;\n                        if (file) {\n                            startPlaying = true;\n                            break;\n                        }\n                    }\n\n                    break;\n                }\n                case 'messageVoiceNote': {\n                    const { voice_note } = content;\n                    if (voice_note) {\n                        const { voice } = voice_note;\n                        if (voice) {\n                            startPlaying = true;\n                            break;\n                        }\n                    }\n\n                    break;\n                }\n                case 'messageVideoNote': {\n                    const { video_note } = content;\n                    if (video_note) {\n                        const { video } = video_note;\n                        if (video) {\n                            startPlaying = true;\n                            break;\n                        }\n                    }\n\n                    break;\n                }\n            }\n\n            if (startPlaying) {\n                this.startPlayingFile(message);\n            }\n        } else if (block) {\n            let startPlaying = false;\n            switch (block['@type']) {\n                case 'pageBlockAudio': {\n                    const { audio } = block;\n                    if (audio) {\n                        if (supportsStreaming()) return;\n\n                        const { audio: file } = audio;\n                        if (file && file.id === fileId) {\n                            startPlaying = true;\n                        }\n                    }\n\n                    break;\n                }\n                case 'pageBlockVoiceNote': {\n                    const { voice_note } = block;\n                    if (voice_note) {\n                        const { voice: file } = voice_note;\n                        if (file && file.id === fileId) {\n                            startPlaying = true;\n                        }\n                    }\n\n                    break;\n                }\n                case 'pageBlockVideoNote': {\n                    const { video_note } = block;\n                    if (video_note) {\n                        const { video: file } = video_note;\n                        if (file && file.id === fileId) {\n                            startPlaying = true;\n                        }\n                    }\n\n                    break;\n                }\n            }\n\n            if (startPlaying) {\n                this.startPlayingFile({ '@type': 'instantViewSource', block, instantView });\n            }\n        }\n    };\n\n    onClientUpdateMediaPlaylist = update => {\n        const { playlist, source } = update;\n        const { message, block } = this.state;\n\n        const chatId = message ? message.chat_id : 0;\n        const messageId = message ? message.id : 0;\n\n        if (isCurrentSource(chatId, messageId, block, source)) {\n            this.setState({ playlist });\n        }\n    };\n\n    onClientUpdateMediaClose = update => {\n        this.setState({\n            message: null,\n            block: null,\n            instantView: null,\n            playlist: null,\n            playing: false,\n            src: null,\n            mimeType: null\n        }, () => {\n            const player = this.videoRef.current;\n            if (!player) return;\n\n            player.load();\n        });\n    };\n\n    onClientUpdateMediaActive = update => {\n        const { source } = update;\n        const { message, block, src } = this.state;\n\n        if (isCurrentSource(message ? message.chat_id : 0, message ? message.id : 0, block, source)) {\n            if (!src) return;\n\n            const player = this.videoRef.current;\n            if (!player) return;\n\n            this.pausedForRecord = false;\n            if (player.paused) {\n                player.play();\n            } else {\n                player.pause();\n            }\n        } else {\n            this.startPlayingFile(source);\n        }\n    };\n\n    handlePrev = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaPrev'\n        });\n    };\n\n    handlePlay = () => {\n        const { message, block, instantView } = this.state;\n        if (!message && !block) return;\n\n        const source = message || { '@type': 'instantViewSource', block, instantView };\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaActive',\n            source\n        });\n    };\n\n    handleNext = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaNext'\n        });\n    };\n\n    handleEnded = (moveNext = true) => {\n        const { message, block, instantView } = this.state;\n        if (!message && !block) return;\n\n        const source = message || { '@type': 'instantViewSource', block, instantView };\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaEnding',\n            source,\n            moveNext\n        });\n\n        this.setState(\n            {\n                //playing: false,\n                //message: null,\n                //src: null\n            },\n            () => {\n                TdLibController.clientUpdate({\n                    '@type': 'clientUpdateMediaEnd',\n                    source,\n                    moveNext\n                });\n            }\n        );\n    };\n\n    handleVideoEnded = () => {\n        const video = this.videoRef.current;\n        this.setCurrentTime({ currentTime: 0, duration: video.duration });\n\n        this.handleEnded(true);\n    };\n\n    handleClose = () => {\n        const player = this.videoRef.current;\n        if (player) {\n            player.pause();\n        }\n\n        this.handleEnded(false);\n    };\n\n    handleLoadedMetadata = () => {\n        let { message, block, instantView, currentTime } = this.state;\n        if (!message && !block) return;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        const { audioPlaybackRate, playbackRate, volume } = PlayerStore;\n\n        const audio = hasAudio(message || block);\n        const voiceNote = hasVoice(message || block);\n\n        let rate = PLAYER_PLAYBACKRATE_NORMAL;\n        if (voiceNote) {\n            rate = playbackRate;\n        } else if (audio && useAudioPlaybackRate(message || block)) {\n            rate = audioPlaybackRate;\n        }\n\n        player.playbackRate = rate;\n        player.volume = volume;\n        player.muted = false;\n        if (this.currentValue) {\n            player.currentTime = player.duration * this.currentValue.value;\n            this.currentValue = null;\n        } else {\n            player.currentTime = currentTime;\n        }\n\n        player.play();\n\n        const { buffered, duration, videoWidth, videoHeight } = player;\n        const source = message || { '@type': 'instantViewSource', block, instantView };\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaLoadedMetadata',\n            source,\n            buffered,\n            duration,\n            videoWidth,\n            videoHeight\n        });\n\n        if (audio) {\n            return;\n        }\n        if (voiceNote) {\n            return;\n        }\n\n        let stream = null;\n        if ('captureStream' in player) {\n            stream = player.captureStream();\n        } else if ('mozCaptureStream' in player) {\n            stream = player.mozCaptureStream();\n        }\n\n        if (!stream) {\n            return;\n        }\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaCaptureStream',\n            chatId: message.chat_id,\n            messageId: message.id,\n            stream: stream\n        });\n    };\n\n    handleProgress = () => {\n        const { message, block, instantView } = this.state;\n        if (!message && !block) return;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        const { buffered } = player;\n\n        const source = message || { '@type': 'instantViewSource', block, instantView };\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaProgress',\n            source,\n            buffered\n        });\n    }\n\n    handleTimeUpdate = () => {\n        const { message, block, instantView } = this.state;\n        if (!message && !block) return;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        const { currentTime, buffered, duration } = player;\n\n        this.setState({ currentTime });\n\n        const source = message || { '@type': 'instantViewSource', block, instantView };\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaTime',\n            source,\n            duration,\n            currentTime,\n            buffered,\n            timestamp: Date.now()\n        });\n\n        this.setCurrentTime({ currentTime, duration });\n    };\n\n    handleCanPlay = () => {\n\n    };\n\n    handleVideoPlay = () => {\n        const { message, block, instantView } = this.state;\n        if (!message && !block) return;\n\n        this.setState({ playing: true });\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        const { currentTime, duration } = player;\n\n        const source = message || { '@type': 'instantViewSource', block, instantView };\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaPlay',\n            source,\n            currentTime,\n            duration,\n            timestamp: Date.now()\n        });\n    };\n\n    handleVideoPause = () => {\n        const { message, block, instantView } = this.state;\n        if (!message && !block) return;\n\n        this.setState({\n            playing: false\n        });\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        const source = message || { '@type': 'instantViewSource', block, instantView };\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaPause',\n            source\n        });\n    };\n\n    hasPrev = (item, playlist) => {\n        if (!item) return false;\n        if (!playlist || !playlist.items.length) return false;\n\n        const index = playlist.items.findIndex(x => playlistItemEquals(x, item));\n        if (index === -1) return false;\n\n        return index + 1 < playlist.items.length;\n    };\n\n    hasNext = (item, playlist) => {\n        if (!item) return false;\n        if (!playlist || !playlist.items.length) return false;\n\n        const index = playlist.items.findIndex(x => playlistItemEquals(x, item));\n        if (index === -1) return false;\n\n        return index - 1 >= 0;\n    };\n\n    handleTitleMouseEnter = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaTitleMouseOver',\n            over: true\n        });\n    };\n\n    handleTitleMouseLeave = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaTitleMouseOver',\n            over: false\n        });\n    };\n\n    handleTitleClick = () => {\n        const { message, block, instantView } = this.state;\n        if (message) {\n            openChat(message.chat_id, message.id);\n            return;\n        }\n\n        if (block && instantView) {\n            openMediaInstantView(instantView, block);\n            return;\n        }\n    };\n\n    setCurrentTime = currentTime => {\n        const { message, block } = this.state;\n        if (!message && !block) return;\n\n        if (!useAudioPlaybackRate(message || block)) return;\n\n        const audio = getMessageAudio(message.chat_id, message.id);\n        if (!audio) return;\n\n        const { audio: file } = audio;\n        if (!file) return;\n\n        const { remote } = file;\n        if (!remote) return;\n\n        const { unique_id } = remote;\n        if (!unique_id) return;\n\n        if (!currentTime) {\n            PlayerStore.clearCurrentTime(unique_id);\n        } else {\n            PlayerStore.setCurrentTime(unique_id, currentTime);\n        }\n    };\n\n    render() {\n        const { t } = this.props;\n        const { playing, message, block, duration, playlist, src, mimeType } = this.state;\n\n        const audio = hasAudio(message || block);\n        const useAudioRate = useAudioPlaybackRate(message || block);\n\n        const date = message ? message.date : null;\n\n        const title = getMediaTitle(message || block, t);\n        const dateHintStr = getDateHint(date);\n        const dateStr = getDate(date);\n        const showDate = false; //!audio;\n        const showPlaybackRate = !audio || useAudioRate;\n        const showRepeat = audio;\n        const showShuffle = audio;\n        const hasPrev = this.hasPrev(message || block, playlist);\n        const hasNext = this.hasNext(message || block, playlist);\n\n        const source = src ? <source src={src} type={mimeType}/> : null;\n\n        return (\n            <>\n                <video\n                    className='header-player-video'\n                    ref={this.videoRef}\n                    autoPlay={true}\n                    controls={false}\n                    width={44}\n                    height={44}\n                    disablePictureInPicture={true}\n                    onLoadedMetadata={this.handleLoadedMetadata}\n                    onCanPlay={this.handleCanPlay}\n                    onPlay={this.handleVideoPlay}\n                    onPause={this.handleVideoPause}\n                    onEnded={this.handleVideoEnded}\n                    onTimeUpdate={this.handleTimeUpdate}\n                    onProgress={this.handleProgress}\n                >\n                    {source}\n                </video>\n                {(message || block) && (\n                    <div className='header-player'>\n                        <IconButton\n                            disabled={!hasPrev}\n                            className='header-player-button'\n                            color='primary'\n                            onClick={this.handlePrev}>\n                            <SkipPreviousIcon fontSize='small' />\n                        </IconButton>\n                        <IconButton\n                            className='header-player-button'\n                            color='primary'\n                            disabled={!src}\n                            onClick={this.handlePlay}>\n                            {playing ? <PauseIcon /> : <PlayArrowIcon />}\n                        </IconButton>\n                        <IconButton\n                            disabled={!hasNext}\n                            className='header-player-button'\n                            color='primary'\n                            onClick={this.handleNext}>\n                            <SkipNextIcon fontSize='small' />\n                        </IconButton>\n                        <Playlist />\n                        <div\n                            className='header-player-content'\n                            onMouseEnter={this.handleTitleMouseEnter}\n                            onMouseLeave={this.handleTitleMouseLeave}\n                            onClick={this.handleTitleClick}>\n                            <div className='header-player-title'>\n                                {title}\n                                {showDate && (\n                                    <span title={dateHintStr}>\n                                        &nbsp;\n                                        {dateStr}\n                                    </span>\n                                )}\n                            </div>\n                            &nbsp;\n                        </div>\n                        <Time duration={duration}/>\n                        <VolumeButton />\n                        {showPlaybackRate && <PlaybackRateButton audio={audio} />}\n                        {showRepeat && <RepeatButton />}\n                        {showShuffle && <ShuffleButton />}\n                        <IconButton className='header-player-button' onClick={this.handleClose}>\n                            <CloseIcon fontSize='small' />\n                        </IconButton>\n                    </div>\n                )}\n            </>\n        );\n    }\n}\n\nexport default withTranslation()(HeaderPlayer);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport { getChatUserId } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport UserStore from '../../Stores/UserStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './ActionBar.css';\n\nclass ActionBar extends React.Component {\n    componentDidMount() {\n        ChatStore.on('updateChatActionBar', this.onUpdateChatActionBar);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('updateChatActionBar', this.onUpdateChatActionBar);\n    }\n\n    onUpdateChatActionBar = update => {\n        const { chatId } = this.props;\n        const { chat_id } = update;\n\n        if (chat_id !== chatId) return;\n\n        this.forceUpdate();\n    };\n\n    handleClose = () => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        TdLibController.send({\n            '@type': 'removeChatActionBar',\n            chat_id: chatId\n        });\n    };\n\n    handleReportSpam = () => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        TdLibController.send({\n            '@type': 'reportChat',\n            chat_id: chatId,\n            reason: {\n                '@type': 'chatReportReasonSpam'\n            },\n            message_ids: []\n        });\n    };\n\n    handleReportUnrelatedLocation = () => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        TdLibController.send({\n            '@type': 'reportChat',\n            chat_id: chatId,\n            reason: {\n                '@type': 'chatReportReasonUnrelatedLocation'\n            },\n            message_ids: []\n        });\n    };\n\n    handleSharePhoneNumber = () => {\n        const { chatId } = this.props;\n        const userId = getChatUserId(chatId);\n        if (!userId) return;\n\n        TdLibController.send({\n            '@type': 'sharePhoneNumber',\n            user_id: userId\n        });\n    };\n\n    handleAddContact = () => {\n        const { chatId } = this.props;\n        const userId = getChatUserId(chatId);\n        if (!userId) return;\n\n        const user = UserStore.get(userId);\n        if (!user) return;\n\n        const { user_id, phone_number, first_name, last_name } = user;\n\n        TdLibController.send({\n            '@type': 'addContact',\n            contact: {\n                '@type': 'contact',\n                phone_number,\n                first_name,\n                last_name,\n                vcard: '',\n                user_id\n            },\n            share_phone_number: false\n        });\n    };\n\n    handleBlockUser = () => {\n        const { chatId } = this.props;\n        const userId = getChatUserId(chatId);\n        if (!userId) return;\n\n        TdLibController.send({\n            '@type': 'blockUser',\n            user_id: userId\n        });\n    };\n\n    render() {\n        const { chatId, t } = this.props;\n        if (!chatId) return null;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        const { action_bar } = chat;\n        if (!action_bar) return null;\n\n        let content = null;\n        switch (action_bar['@type']) {\n            case 'chatActionBarSharePhoneNumber': {\n                content = (\n                    <Button color='primary' className='header-command-button' onClick={this.handleSharePhoneNumber}>\n                        {t('ShareMyPhone')}\n                    </Button>\n                );\n                break;\n            }\n            case 'chatActionBarAddContact': {\n                content = (\n                    <Button color='primary' className='header-command-button' onClick={this.handleAddContact}>\n                        {t('AddContactChat')}\n                    </Button>\n                );\n                break;\n            }\n            case 'chatActionBarReportAddBlock': {\n                content = (\n                    <>\n                        <Button color='primary' className='header-command-button' onClick={this.handleAddContact}>\n                            {t('AddContactChat')}\n                        </Button>\n                        <Button color='secondary' className='header-command-button' onClick={this.handleBlockUser}>\n                            {t('ReportSpamUser')}\n                        </Button>\n                    </>\n                );\n                break;\n            }\n            case 'chatActionBarUnrelatedLocation': {\n                content = (\n                    <Button\n                        color='secondary'\n                        className='header-command-button'\n                        onClick={this.handleReportUnrelatedLocation}>\n                        {t('ReportSpamLocation')}\n                    </Button>\n                );\n                break;\n            }\n            case 'chatActionBarReportSpam': {\n                content = (\n                    <Button color='secondary' className='header-command-button' onClick={this.handleReportSpam}>\n                        {t('ReportSpam')}\n                    </Button>\n                );\n                break;\n            }\n        }\n\n        return (\n            <div className='action-bar' onMouseDown={this.handleClick}>\n                <div className='action-bar-content'>{content}</div>\n                <div className='action-bar-close-button'>\n                    <IconButton onClick={this.handleClose}>\n                        <CloseIcon />\n                    </IconButton>\n                </div>\n            </div>\n        );\n    }\n}\n\nActionBar.propTypes = {\n    chatId: PropTypes.number\n};\n\nexport default withTranslation()(ActionBar);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M18,5 C19.6568542,5 21,6.34314575 21,8 L21,20 C21,21.6568542 19.6568542,23 18,23 L9,23 C7.34314575,23 6,21.6568542 6,20 L6,8 C6,6.34314575 7.34314575,5 9,5 L18,5 Z M18,7 L9,7 C8.44771525,7 8,7.44771525 8,8 L8,20 C8,20.5522847 8.44771525,21 9,21 L18,21 C18.5522847,21 19,20.5522847 19,20 L19,8 C19,7.44771525 18.5522847,7 18,7 Z M15,1 C15.5522847,1 16,1.44771525 16,2 C16,2.55228475 15.5522847,3 15,3 L15,3 L5,3 C4.44771525,3 4,3.44771525 4,4 L4,4 L4,16 C4,16.5522847 3.55228475,17 3,17 C2.44771525,17 2,16.5522847 2,16 L2,16 L2,4 C2,2.34314575 3.34314575,1 5,1 L5,1 Z' />,\n    'Copy'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M18,3 C19.6568542,3 21,4.34314575 21,6 L21,18 C21,19.6568542 19.6568542,21 18,21 L6,21 C4.34314575,21 3,19.6568542 3,18 L3,6 C3,4.34314575 4.34314575,3 6,3 L18,3 Z M18,5 L6,5 C5.44771525,5 5,5.44771525 5,6 L5,18 C5,18.5522847 5.44771525,19 6,19 L18,19 C18.5522847,19 19,18.5522847 19,18 L19,6 C19,5.44771525 18.5522847,5 18,5 Z M15.7928932,8.29289322 C16.1834175,7.90236893 16.8165825,7.90236893 17.2071068,8.29289322 C17.5976311,8.68341751 17.5976311,9.31658249 17.2071068,9.70710678 L17.2071068,9.70710678 L11.2071068,15.7071068 C10.8165825,16.0976311 10.1834175,16.0976311 9.79289322,15.7071068 L9.79289322,15.7071068 L7.29289322,13.2071068 C6.90236893,12.8165825 6.90236893,12.1834175 7.29289322,11.7928932 C7.68341751,11.4023689 8.31658249,11.4023689 8.70710678,11.7928932 L8.70710678,11.7928932 L10.5,13.5857864 Z' />,\n    'FrameCheck'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <g stroke='currentColor' strokeWidth='2' fill='none' fillRule='evenodd' strokeLinecap='round' transform='translate(4, 1)'>\n        <path d='M2,3 L14,3 C15.1045695,3 16,3.8954305 16,5 L16,17 C16,18.1045695 15.1045695,19 14,19 L2,19 C0.8954305,19 0,18.1045695 0,17 L0,10 L0,10'/>\n        <polyline strokeLinejoin='round' points='4 11.5 6.5 14 12.5 8'/>\n        <polyline strokeLinejoin='round' points='3 0 -2.87547763e-14 3 3 6'/>\n    </g>,\n    'RemoveCheck'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from '../../Utils/HOC';\nimport { withSnackbar } from 'notistack';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport Popover from '@material-ui/core/Popover';\nimport CheckBoxOutlinedIcon from '@material-ui/icons/CheckBoxOutlined';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport CopyIcon from '../../Assets/Icons/Copy';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport FrameCheckIcon from '../../Assets/Icons/FrameCheck';\nimport EditIcon from '../../Assets/Icons/Edit';\nimport RemoveCheckIcon from '../../Assets/Icons/RemoveCheck';\nimport ShareIcon from '../../Assets/Icons/Share';\nimport StopIcon from '../../Assets/Icons/Stop';\nimport PinIcon from '../../Assets/Icons/Pin2';\nimport UnpinIcon from '../../Assets/Icons/Pin2';\nimport { isPublicSupergroup } from '../../Utils/Supergroup';\nimport { canMessageBeClosed, canMessageBeDeleted, canMessageBeEdited, canMessageBeForwarded, canMessageBeUnvoted, isMessagePinned } from '../../Utils/Message';\nimport { canPinMessages, canSendMessages } from '../../Utils/Chat';\nimport { cancelPollAnswer, stopPoll } from '../../Actions/Poll';\nimport { copy } from '../../Utils/Text';\nimport { clearSelection, deleteMessages, editMessage, forwardMessages, replyMessage, selectMessage } from '../../Actions/Client';\nimport { pinMessage, unpinMessage } from '../../Actions/Message';\nimport { saveBlob } from '../../Utils/File';\nimport { NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../../Constants';\nimport AppStore from '../../Stores/ApplicationStore';\nimport FileStore from '../../Stores/FileStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MessageMenu.css';\n\nclass MessageMenu extends React.PureComponent {\n    state = {\n        confirmStopPoll: false\n    };\n\n    handleConfirmStopPoll = event => {\n        const { dialog } = this.state;\n        if (dialog) return;\n\n        this.setState({\n            confirmStopPoll: true,\n            contextMenu: false\n        });\n    };\n\n    handleCloseConfirm = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ confirmStopPoll: false });\n    };\n\n    handleStopPoll = event => {\n        event.stopPropagation();\n\n        const { chatId, messageId } = this.props;\n        const { confirmStopPoll } = this.state;\n\n        if (confirmStopPoll) {\n            this.setState({ confirmStopPoll: false });\n        }\n\n        stopPoll(chatId, messageId);\n    };\n\n    handleUnvote = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { chatId, messageId, onClose } = this.props;\n\n        onClose(event);\n        cancelPollAnswer(chatId, messageId);\n    };\n\n    handleCopyLink = event => {\n        const { onClose, copyLink, t } = this.props;\n\n        onClose(event);\n\n        if (!copyLink) return;\n\n        copy(copyLink);\n        this.handleScheduledAction(t('LinkCopied'));\n    };\n\n    handleCopyPublicMessageLink = async event => {\n        const { onClose, chatId, messageId, t } = this.props;\n\n        onClose(event);\n\n        const httpUrl = await TdLibController.send({\n            '@type': 'getPublicMessageLink',\n            chat_id: chatId,\n            message_id: messageId,\n            for_album: false\n        });\n\n        if (!httpUrl) return;\n        const { link: copyLink } = httpUrl;\n\n        if (!copyLink) return;\n\n        copy(copyLink);\n        this.handleScheduledAction(t('LinkCopied'));\n    };\n\n    handleScheduledAction = message => {\n        const { enqueueSnackbar, closeSnackbar } = this.props;\n\n        const snackKey = enqueueSnackbar(message, {\n            autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\n            preventDuplicate: true,\n            action: [\n                <IconButton\n                    key='close'\n                    aria-label='Close'\n                    color='inherit'\n                    className='notification-close-button'\n                    onClick={() => {\n                        closeSnackbar(snackKey);\n                    }}>\n                    <CloseIcon />\n                </IconButton>\n            ]\n        });\n    };\n\n    handleReply = event => {\n        const { chatId, messageId, onClose } = this.props;\n\n        clearSelection();\n        onClose(event);\n        replyMessage(chatId, messageId);\n    };\n\n    handlePin = event => {\n        const { chatId, messageId, onClose } = this.props;\n\n        clearSelection();\n        onClose(event);\n\n        if (isMessagePinned(chatId, messageId)) {\n            unpinMessage(chatId);\n        } else {\n            pinMessage(chatId, messageId);\n        }\n    };\n\n    handleForward = event => {\n        const { chatId, messageId, onClose } = this.props;\n\n        onClose(event);\n        forwardMessages(chatId, [messageId]);\n    };\n\n    handleEdit = event => {\n        const { chatId, messageId, onClose } = this.props;\n\n        clearSelection();\n        onClose(event);\n        editMessage(chatId, messageId);\n    };\n\n    handleSelect = event => {\n        const { chatId, messageId, onClose } = this.props;\n        onClose(event);\n\n        const selection = window.getSelection().toString();\n        if (selection) return;\n\n        const selected = !MessageStore.selectedItems.has(`chatId=${chatId}_messageId=${messageId}`);\n        selectMessage(chatId, messageId, selected);\n    };\n\n    handleDelete = event => {\n        const { chatId, messageId, onClose } = this.props;\n\n        onClose(event);\n        deleteMessages(chatId, [messageId]);\n    };\n\n    handleDownload = event => {\n        const { chatId, messageId } = this.props;\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return;\n\n        const { content } = message;\n        if (!content) return;\n\n        const { sticker } = content;\n        if (!sticker) return;\n\n        const { sticker: file } = sticker;\n        if (!file) return;\n\n        const blob = FileStore.getBlob(file.id);\n        if (!blob) return;\n\n        saveBlob(blob, 'sticker.tgs');\n    };\n\n    render() {\n        const { t, chatId, messageId, anchorPosition, copyLink, open, onClose } = this.props;\n        const { confirmStopPoll } = this.state;\n        if (!confirmStopPoll && !open) return null;\n\n        const isPinned = isMessagePinned(chatId, messageId);\n        const canBeUnvoted = canMessageBeUnvoted(chatId, messageId);\n        const canBeClosed = canMessageBeClosed(chatId, messageId);\n        const canBeReplied = canSendMessages(chatId);\n        const canBePinned = canPinMessages(chatId);\n        const canBeForwarded = canMessageBeForwarded(chatId, messageId);\n        const canBeDeleted = canMessageBeDeleted(chatId, messageId);\n        const canBeEdited = canMessageBeEdited(chatId, messageId) && !AppStore.recording;\n        const canBeSelected = !MessageStore.hasSelectedMessage(chatId, messageId);\n        const canCopyLink = Boolean(copyLink);\n        const canCopyPublicMessageLink = isPublicSupergroup(chatId);\n\n        return (\n            <>\n                <Popover\n                    open={true}\n                    onClose={onClose}\n                    anchorReference='anchorPosition'\n                    anchorPosition={anchorPosition}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'left'\n                    }}\n                    onMouseDown={e => e.stopPropagation()}>\n                    <MenuList onClick={e => e.stopPropagation()}>\n                        {/*<MenuItem onClick={this.handleDownload}>*/}\n                        {/*    <ListItemIcon>*/}\n                        {/*        <CopyIcon />*/}\n                        {/*    </ListItemIcon>*/}\n                        {/*    <ListItemText primary={t('Download')} />*/}\n                        {/*</MenuItem>*/}\n                        {canBeSelected && (\n                            <MenuItem onClick={this.handleSelect}>\n                                <ListItemIcon>\n                                    <FrameCheckIcon />\n                                </ListItemIcon>\n                                <ListItemText primary={t('Select')} />\n                            </MenuItem>\n                        )}\n                        {canCopyPublicMessageLink && (\n                            <MenuItem onClick={this.handleCopyPublicMessageLink}>\n                                <ListItemIcon>\n                                    <CopyIcon />\n                                </ListItemIcon>\n                                <ListItemText primary={t('CopyMessageLink')} />\n                            </MenuItem>\n                        )}\n                        {canCopyLink && (\n                            <MenuItem onClick={this.handleCopyLink}>\n                                <ListItemIcon>\n                                    <CopyIcon />\n                                </ListItemIcon>\n                                <ListItemText primary={t('CopyLink')} />\n                            </MenuItem>\n                        )}\n                        {canBeReplied && (\n                            <MenuItem onClick={this.handleReply}>\n                                <ListItemIcon>\n                                    <ShareIcon style={{transform: 'scaleX(-1)'}}/>\n                                </ListItemIcon>\n                                <ListItemText primary={t('Reply')} />\n                            </MenuItem>\n                        )}\n                        {canBePinned && (\n                            <MenuItem onClick={this.handlePin}>\n                                {isPinned ? (\n                                    <>\n                                        <ListItemIcon>\n                                            <UnpinIcon />\n                                        </ListItemIcon>\n                                        <ListItemText primary={t('UnpinFromTop')} />\n                                    </>\n                                ) : (\n                                    <>\n                                        <ListItemIcon>\n                                            <PinIcon />\n                                        </ListItemIcon>\n                                        <ListItemText primary={t('PinToTop')} />\n                                    </>\n                                )}\n                            </MenuItem>\n                        )}\n                        {canBeForwarded && (\n                            <MenuItem onClick={this.handleForward}>\n                                <ListItemIcon>\n                                    <ShareIcon />\n                                </ListItemIcon>\n                                <ListItemText primary={t('Forward')} />\n                            </MenuItem>\n                        )}\n                        {canBeEdited && (\n                            <MenuItem onClick={this.handleEdit}>\n                                <ListItemIcon>\n                                    <EditIcon />\n                                </ListItemIcon>\n                                <ListItemText primary={t('Edit')} />\n                            </MenuItem>\n                        )}\n                        {canBeDeleted && (\n                            <MenuItem color='secondary' onClick={this.handleDelete}>\n                                <ListItemIcon>\n                                    <DeleteIcon />\n                                </ListItemIcon>\n                                <ListItemText primary={t('Delete')} />\n                            </MenuItem>\n                        )}\n                        {canBeUnvoted && (\n                            <MenuItem onClick={this.handleUnvote}>\n                                <ListItemIcon>\n                                    <RemoveCheckIcon />\n                                </ListItemIcon>\n                                <ListItemText primary={t('Unvote')} />\n                            </MenuItem>\n                        )}\n                        {canBeClosed && (\n                            <MenuItem onClick={this.handleConfirmStopPoll}>\n                                <ListItemIcon>\n                                    <StopIcon />\n                                </ListItemIcon>\n                                <ListItemText primary={t('StopPoll')} />\n                            </MenuItem>\n                        )}\n                    </MenuList>\n                </Popover>\n                <Dialog\n                    transitionDuration={0}\n                    open={confirmStopPoll}\n                    onClose={this.handleCloseConfirm}\n                    aria-labelledby='form-dialog-title'>\n                    <DialogTitle id='form-dialog-title'>{t('StopPollAlertTitle')}</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText>{t('StopPollAlertText')}</DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleCloseConfirm} color='primary'>\n                            {t('Cancel')}\n                        </Button>\n                        <Button onClick={this.handleStopPoll} color='primary'>\n                            {t('Stop')}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </>\n        );\n    }\n\n}\n\nMessageMenu.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    anchorPosition: PropTypes.object,\n    open: PropTypes.bool.isRequired,\n    onClose: PropTypes.func.isRequired,\n    copyLink: PropTypes.string\n};\n\nconst enhance = compose(\n    withTranslation(),\n    withSnackbar\n);\n\nexport default enhance(MessageMenu);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport VisibilityIcon from '@material-ui/icons/Visibility';\nimport Status from './Status';\nimport { getDate, getDateHint, getViews } from '../../Utils/Message';\nimport MessageStore from '../../Stores/MessageStore';\nimport './Meta.css';\n\nclass Meta extends React.Component {\n\n    state = { };\n\n    static getDerivedStateFromProps(props, state) {\n        const { chatId, messageId } = props;\n        const { prevChatId, prevMessageId } = state;\n\n        if (prevChatId !== chatId || prevMessageId !== messageId) {\n            const message = MessageStore.get(chatId, messageId);\n            if (!message) return null;\n\n            const { date, edit_date: editDate, views, is_outgoing: isOutgoing } = message;\n\n            return {\n                prevChatId: chatId,\n                prevMessageId: messageId,\n\n                date,\n                editDate,\n                views,\n                isOutgoing\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        MessageStore.on('updateMessageEdited', this.onUpdateMessageEdited);\n        MessageStore.on('updateMessageViews', this.onUpdateMessageViews);\n    }\n\n    componentWillUnmount() {\n        MessageStore.off('updateMessageEdited', this.onUpdateMessageEdited);\n        MessageStore.off('updateMessageViews', this.onUpdateMessageViews);\n    }\n\n    onUpdateMessageEdited = update => {\n        const { chat_id, message_id, edit_date: editDate } = update;\n        const { chatId, messageId } = this.props;\n\n        if (chat_id !== chatId) return;\n        if (message_id !== messageId) return;\n\n        this.setState({\n            editDate\n        });\n    };\n\n    onUpdateMessageViews = update => {\n        const { chat_id, message_id, views } = update;\n        const { chatId, messageId } = this.props;\n\n        if (chat_id !== chatId) return;\n        if (message_id !== messageId) return;\n\n        this.setState({\n            views\n        });\n    };\n\n    render() {\n        const { className, chatId, messageId, onDateClick, t, style } = this.props;\n        const { date, editDate, views, isOutgoing } = this.state;\n\n        const dateStr = getDate(date);\n        const dateHintStr = getDateHint(date);\n        const viewsStr = getViews(views);\n\n        return (\n            <div className={classNames('meta', className)} style={style}>\n                <span>&ensp;</span>\n                {views > 0 && (\n                    <>\n                        <VisibilityIcon className='meta-views-icon' />\n                        <span className='meta-views' title={views}>\n                            &nbsp;\n                            {viewsStr}\n                            &nbsp; &nbsp;\n                        </span>\n                    </>\n                )}\n                {editDate > 0 && <span>{t('EditedMessage')}&nbsp;</span>}\n                <a onClick={onDateClick}>\n                    <span title={dateHintStr}>{dateStr}</span>\n                </a>\n                {isOutgoing && <Status chatId={chatId} messageId={messageId} />}\n            </div>\n        );\n    }\n}\n\nMeta.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    onDateClick: PropTypes.func\n};\n\nexport default withTranslation()(Meta);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport Document from '../Media/Document';\nimport Photo from '../Media/Photo';\nimport Video from '../Media/Video';\nimport './AlbumItem.css';\nimport MessageMenu from '../MessageMenu';\nimport MessageStore from '../../../Stores/MessageStore';\nimport { getText, getWebPage, openMedia } from '../../../Utils/Message';\nimport { selectMessage } from '../../../Actions/Client';\nimport CheckMarkIcon from '@material-ui/icons/Check';\nimport Meta from '../Meta';\n\nclass AlbumItem extends React.Component {\n\n    state = {\n        contextMenu: false\n    };\n\n    getAlbumItem = (message, displaySize) => {\n        const { chat_id, id, content, date, edit_date, views } = message;\n\n        switch (content['@type']) {\n            case 'messagePhoto': {\n                return (\n                    <Photo\n                        type='message'\n                        chatId={chat_id}\n                        messageId={id}\n                        photo={content.photo}\n                        displaySize={displaySize}\n                        style={{ width: '100%', height: '100%' }}\n                        openMedia={this.openMedia}/>\n                    );\n            }\n            case 'messageVideo': {\n                return (\n                    <Video\n                        type='message'\n                        chatId={chat_id}\n                        messageId={id}\n                        video={content.video}\n                        displaySize={displaySize}\n                        style={{ width: '100%', height: '100%' }}\n                        openMedia={this.openMedia}/>\n                );\n            }\n            case 'messageDocument': {\n                const inlineMeta = (\n                    <Meta\n                        className='meta-hidden'\n                        key={`${chat_id}_${id}_meta`}\n                        chatId={chat_id}\n                        messageId={id}\n                        date={date}\n                        editDate={edit_date}\n                        views={views}\n                    />\n                );\n\n                const webPage = getWebPage(message);\n                const text = getText(message, !!webPage ? null : inlineMeta, x => x);\n\n                return (\n                    <>\n                        <Document\n                            type='message'\n                            chatId={chat_id}\n                            messageId={id}\n                            document={content.document}\n                            displaySize={displaySize}\n                            style={{ width: '100%', height: '100%' }}\n                            openMedia={this.openMedia}/>\n                        { text && text.length > 0 && (\n                            <div className={'message-text'}>\n                                {text}\n                            </div>\n                        )}\n                    </>\n                );\n            }\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        // MessageStore.on('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\n        MessageStore.on('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n        // MessageStore.on('clientUpdateMessageShake', this.onClientUpdateMessageShake);\n        MessageStore.on('clientUpdateClearSelection', this.onClientUpdateClearSelection);\n    }\n\n    componentWillUnmount() {\n        // MessageStore.off('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\n        MessageStore.off('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n        // MessageStore.off('clientUpdateMessageShake', this.onClientUpdateMessageShake);\n        MessageStore.off('clientUpdateClearSelection', this.onClientUpdateClearSelection);\n    }\n\n    onClientUpdateClearSelection = update => {\n        if (!this.state.selected) return;\n\n        this.setState({ selected: false });\n    };\n\n    onClientUpdateMessageSelected = update => {\n        const { message } = this.props;\n        const { chat_id: chatId, id: messageId } = message;\n\n        const { selected } = update;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            this.setState({ selected, highlighted: false });\n        }\n    };\n\n    handleOpenContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            console.log('[cm] handleOpenContextMenu');\n            // if (MessageStore.selectedItems.size > 1) {\n            //     return;\n            // }\n\n            const left = event.clientX;\n            const top = event.clientY;\n            const copyLink =\n                event.target && event.target.tagName === 'A' && event.target.href ? event.target.href : null;\n\n            this.setState({\n                contextMenu: true,\n                copyLink,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    openMedia = event => {\n        if (MessageStore.selectedItems.size > 0) return;\n\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        const { message } = this.props;\n        if (!message) return;\n\n        const { chat_id, id } = message;\n\n        openMedia(chat_id, id);\n    };\n\n    handleSelection = event => {\n        // if (!this.mouseDown) return;\n\n\n        const selection = window.getSelection().toString();\n        if (selection) return;\n\n        const { message } = this.props;\n        const { chat_id: chatId, id: messageId } = message;\n\n        if (MessageStore.selectedItems.size === 0) return;\n\n        const selected = !MessageStore.selectedItems.has(`chatId=${chatId}_messageId=${messageId}`);\n        selectMessage(chatId, messageId, selected);\n\n        event.preventDefault();\n        event.stopPropagation();\n    };\n\n    render() {\n        const { message, position, displaySize } = this.props;\n        const { contextMenu, copyLink, top, left, selected } = this.state;\n\n        const { chat_id, id } = message;\n\n        // const r = Math.floor(Math.random() * 256);\n        // const g = Math.floor(Math.random() * 256);\n        // const b = Math.floor(Math.random() * 256);\n        // const background = null; //`rgb(${r},${g},${b})`;\n\n        let style = {};\n        let className = 'album-document-item';\n        if (position) {\n            style = { width: position.width, height: position.height * displaySize };\n            className = 'album-item'\n        }\n\n        return (\n            <>\n                <div\n                    className={classNames(className, { 'item-selected': selected })}\n                    onClick={this.handleSelection}\n                    onContextMenu={this.handleOpenContextMenu}\n                    style={style}>\n                    <div className='album-item-wrapper'>{this.getAlbumItem(message, displaySize)}</div>\n                    {selected && (\n                        <div className='album-item-selection'>\n                            <div className='album-item-selection-mark'>\n                                <CheckMarkIcon className='album-item-select-tick' />\n                            </div>\n                        </div>\n                    )}\n                </div>\n                <MessageMenu\n                    chatId={chat_id}\n                    messageId={id}\n                    anchorPosition={{ top, left }}\n                    open={contextMenu}\n                    onClose={this.handleCloseContextMenu}\n                    copyLink={copyLink}\n                />\n            </>\n        );\n    }\n}\n\nAlbumItem.propTypes = {\n    message: PropTypes.object,\n    position: PropTypes.object,\n    displaySize: PropTypes.number\n};\n\nexport default AlbumItem;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport LocalizationStore from '../../Stores/LocalizationStore';\nimport './DayMeta.css';\n\nclass DayMeta extends React.Component {\n    componentDidMount() {\n        LocalizationStore.on('clientUpdateLanguageChange', this.onClientUpdateLanguage);\n    }\n\n    componentWillUnmount() {\n        LocalizationStore.off('clientUpdateLanguageChange', this.onClientUpdateLanguage);\n    }\n\n    onClientUpdateLanguage = () => {\n        this.forceUpdate();\n    };\n\n    render() {\n        const { date, i18n } = this.props;\n\n        const showYear = new Date(date * 1000) < new Date().setMonth(new Date().getMonth() - 3);\n        const options = showYear\n            ? {\n                  day: 'numeric',\n                  month: 'long',\n                  year: 'numeric'\n              }\n            : {\n                  day: 'numeric',\n                  month: 'long'\n              };\n\n        return (\n            <div className='day-meta'>\n                <div className='day-meta-wrapper'>\n                    <div>{new Date(date * 1000).toLocaleDateString([i18n.language], options)}</div>\n                </div>\n            </div>\n        );\n    }\n}\n\nDayMeta.propTypes = {\n    date: PropTypes.number.isRequired\n};\n\nexport default withTranslation()(DayMeta);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport { getForwardTitle, isForwardOriginHidden } from '../../Utils/Message';\nimport { openUser, openChat } from '../../Actions/Client';\nimport './Forward.css';\n\nclass Forward extends React.Component {\n    state = {\n        arrowRef: null\n    };\n\n    handleArrowRef = node => {\n        this.setState({\n            arrowRef: node\n        });\n    };\n\n    openForward = event => {\n        event.stopPropagation();\n\n        const { forwardInfo } = this.props;\n        if (!forwardInfo) return null;\n\n        const { origin } = forwardInfo;\n\n        switch (origin['@type']) {\n            case 'messageForwardOriginUser': {\n                const { sender_user_id } = origin;\n\n                openUser(sender_user_id, true);\n                break;\n            }\n            case 'messageForwardOriginHiddenUser': {\n                break;\n            }\n            case 'messageForwardOriginChannel': {\n                const { chat_id, message_id } = origin;\n\n                openChat(chat_id, message_id);\n                break;\n            }\n        }\n    };\n\n    render() {\n        const { t, forwardInfo } = this.props;\n        const { arrowRef } = this.state;\n\n        const title = getForwardTitle(forwardInfo, t);\n        const tooltip = isForwardOriginHidden(forwardInfo) ? (\n            <>\n                {t('HidAccount')}\n                <span className='forward-arrow' ref={this.handleArrowRef} />\n            </>\n        ) : (\n            ''\n        );\n\n        return (\n            <div className={classNames('message-author', 'forward')}>\n                <div>{t('ForwardedMessage')}</div>\n                <div className='forward-subtitle'>\n                    {t('From') + ' '}\n                    {/*<Tooltip*/}\n                    {/*    title={tooltip}*/}\n                    {/*    classes={{ popper: 'forward-arrow-popper', tooltip: 'forward-tooltip' }}*/}\n                    {/*    PopperProps={{*/}\n                    {/*        popperOptions: {*/}\n                    {/*            modifiers: {*/}\n                    {/*                arrow: {*/}\n                    {/*                    enabled: Boolean(arrowRef),*/}\n                    {/*                    element: arrowRef*/}\n                    {/*                }*/}\n                    {/*            }*/}\n                    {/*        }*/}\n                    {/*    }}*/}\n                    {/*    placement='top'>*/}\n                        <a onClick={this.openForward}>{title}</a>\n                    {/*</Tooltip>*/}\n                </div>\n            </div>\n        );\n    }\n}\n\nForward.propTypes = {\n    forwardInfo: PropTypes.object.isRequired\n};\n\nexport default withTranslation()(Forward);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n/// based on https://github.com/evgeny-nadymov/telegram-wp/blob/master/TelegramClient.WP81/Views/Controls/GroupedMessages.cs\n\nconst POSITION_FLAG_LEFT = 1;\nconst POSITION_FLAG_RIGHT = 2;\nconst POSITION_FLAG_TOP = 4;\nconst POSITION_FLAG_BOTTOM = 8;\n\nclass MessageGroupedLayoutAttempt {\n    constructor(lineCounts, heights) {\n        this.lineCounts = lineCounts;\n        this.heights = heights;\n    }\n}\n\nclass GroupedMessagePosition {\n    aspectRatio;\n    isEdge;\n    flags;\n    isLast;\n    leftSpanOffset;\n    minX;\n    maxX;\n    minY;\n    maxY;\n    height;\n    width;\n    siblingHeights;\n    spanSize;\n\n    set(minX, maxX, minY, maxY, w, h, flags) {\n        this.minX = minX;\n        this.maxX = maxX;\n        this.minY = minY;\n        this.maxY = maxY;\n        this.spanSize = w;\n        this.width = w;\n        this.height = h;\n        this.flags = flags;\n    }\n\n    getInfo() {\n        return `minX=${this.minX}\\nmaxX=${this.maxX}\\nminY=${this.minY}\\nmaxY=${this.maxY}\\nspanSize=${this.spanSize}\\nwidth=${this.width}\\nheight=${this.height}\\nflags=${this.flags}\\nsiblingHeights=${this.siblingHeights}\\nleftSpanOffset=${this.leftSpanOffset}`;\n    }\n}\n\nclass GroupedMessages {\n\n    constructor() {\n        this.posArray = [];\n        this.positions = new Map();\n        this.maxSizeWidth = 800;\n        this.hasSibling = false;\n        this.scale = 1.0;\n    }\n\n    multiHeight(array, start, end) {\n        let sum = 0.0;\n        for (let i = start; i < end; i++) {\n            sum += array[i];\n        }\n\n        return 800.0 * this.scale / sum;\n    }\n\n    calculate(messages, desiredWidth) {\n        this.posArray = [];\n        this.positions = new Map();\n        this.messages = messages;\n\n        if (!messages) return;\n        const { length } = messages;\n        if (length <= 1) {\n            return;\n        }\n\n        this.totalWidth = 0;\n        this.totalHeight = 0.0;\n\n        this.scale = desiredWidth / this.maxSizeWidth;\n        this.maxSizeWidth = desiredWidth;\n\n        const firstSpanAdditionalSize = Math.trunc(200 * this.scale);\n        const minHeight = Math.trunc(120 * this.scale);\n        const minWidth = Math.trunc(96 * this.scale);\n        const paddingsWidth = Math.trunc(32 * this.scale);\n        const maxSizeHeight = 814.0 * this.scale;\n        let averageAspectRatio = 1.0;\n        let proportions = '';\n        const isOut = false;\n        let maxX = 0;\n        let forceCalc = false;\n\n        for (let i = 0; i < length; i++) {\n            const message = messages[i];\n            const { w, h } = GroupedMessages.getWidthHeight(message);\n\n            const position = new GroupedMessagePosition();\n            position.isLast = i === messages.length - 1;\n            position.aspectRatio = w / h;\n            if (position.aspectRatio > 1.2) {\n                proportions += 'w';\n            } else if (position.aspectRatio < 0.8) {\n                proportions += 'n';\n            } else {\n                proportions += 'q';\n            }\n\n            averageAspectRatio += position.aspectRatio;\n            if (position.aspectRatio > 2.0) {\n                forceCalc = true;\n            }\n\n            this.positions.set(message, position);\n            this.posArray.push(position);\n        }\n\n        const maxAspectRation = this.maxSizeWidth / maxSizeHeight;\n        averageAspectRatio = averageAspectRatio / length;\n\n        if (!forceCalc && (length === 2 || length === 3 || length === 4)){\n            switch (length) {\n                case 2: {\n                    const position1 = this.posArray[0];\n                    const position2 = this.posArray[1];\n\n                    if (proportions === 'ww' && averageAspectRatio > 1.4 * maxAspectRation && position1.aspectRatio - position2.aspectRatio < 0.2) {\n                        const height = Math.round(Math.min(this.maxSizeWidth / position1.aspectRatio, Math.min(this.maxSizeWidth / position2.aspectRatio, maxSizeHeight / 2.0))) / maxSizeHeight;\n                        position1.set(0, 0, 0, 0, this.maxSizeWidth, height, POSITION_FLAG_LEFT | POSITION_FLAG_RIGHT | POSITION_FLAG_TOP);\n                        position2.set(0, 0, 1, 1, this.maxSizeWidth, height, POSITION_FLAG_LEFT | POSITION_FLAG_RIGHT | POSITION_FLAG_BOTTOM);\n\n                        this.totalWidth = this.maxSizeWidth;\n                        this.totalHeight = height * 2;\n                    } else if (proportions === 'ww' || proportions === 'qq') {\n                        const width = this.maxSizeWidth / 2;\n                        const height = Math.round(Math.min(width / position1.aspectRatio, Math.min(width / position2.aspectRatio, maxSizeHeight))) / maxSizeHeight;\n                        position1.set(0, 0, 0, 0, width, height, POSITION_FLAG_LEFT | POSITION_FLAG_BOTTOM | POSITION_FLAG_TOP);\n                        position2.set(1, 1, 0, 0, width, height, POSITION_FLAG_RIGHT | POSITION_FLAG_BOTTOM | POSITION_FLAG_TOP);\n                        maxX = 1;\n\n                        this.totalWidth = width + width;\n                        this.totalHeight = height;\n                    } else {\n                        let secondWidth = Math.max(0.4 * this.maxSizeWidth, Math.round((this.maxSizeWidth / position1.aspectRatio / (1.0 / position1.aspectRatio + 1.0 / position2.aspectRatio))));\n                        let firstWidth = this.maxSizeWidth - secondWidth;\n                        if (firstWidth < minWidth) {\n                            const diff = minWidth - firstWidth;\n                            firstWidth = minWidth;\n                            secondWidth -= diff;\n                        }\n\n                        const height = Math.min(maxSizeHeight, Math.round(Math.min(firstWidth / position1.aspectRatio, secondWidth / position2.aspectRatio))) / maxSizeHeight;\n                        position1.set(0, 0, 0, 0, firstWidth, height, POSITION_FLAG_LEFT | POSITION_FLAG_BOTTOM | POSITION_FLAG_TOP);\n                        position2.set(1, 1, 0, 0, secondWidth, height, POSITION_FLAG_RIGHT | POSITION_FLAG_BOTTOM | POSITION_FLAG_TOP);\n                        maxX = 1;\n\n                        this.totalWidth = firstWidth + secondWidth;\n                        this.totalHeight = height;\n                    }\n\n                    break;\n                }\n                case 3: {\n                    const position1 = this.posArray[0];\n                    const position2 = this.posArray[1];\n                    const position3 = this.posArray[2];\n                    if (proportions[0] === 'n')\n                    {\n                        const thirdHeight = Math.min(maxSizeHeight * 0.5, Math.round(position2.aspectRatio * this.maxSizeWidth / (position3.aspectRatio + position2.aspectRatio)));\n                        const secondHeight = maxSizeHeight - thirdHeight;\n                        const rightWidth = Math.max(minWidth, Math.min(this.maxSizeWidth * 0.5, Math.round(Math.min(thirdHeight * position3.aspectRatio, secondHeight * position2.aspectRatio))));\n\n                        const leftWidth = Math.round(Math.min(maxSizeHeight * position1.aspectRatio + paddingsWidth, this.maxSizeWidth - rightWidth));\n                        position1.set(0, 0, 0, 1, leftWidth, 1.0, POSITION_FLAG_LEFT | POSITION_FLAG_BOTTOM | POSITION_FLAG_TOP);\n                        position2.set(1, 1, 0, 0, rightWidth, secondHeight / maxSizeHeight, POSITION_FLAG_RIGHT | POSITION_FLAG_TOP);\n                        position3.set(0, 1, 1, 1, rightWidth, thirdHeight / maxSizeHeight, POSITION_FLAG_RIGHT | POSITION_FLAG_BOTTOM);\n                        position3.spanSize = this.maxSizeWidth;\n\n                        position1.siblingHeights = [thirdHeight / maxSizeHeight, secondHeight / maxSizeHeight];\n\n                        if (isOut) {\n                            position1.spanSize = this.maxSizeWidth - rightWidth;\n                        } else {\n                            position2.spanSize = this.maxSizeWidth - leftWidth;\n                            position3.leftSpanOffset = leftWidth;\n                        }\n                        this.hasSibling = true;\n                        maxX = 1;\n\n                        this.totalWidth = leftWidth + rightWidth;\n                        this.totalHeight = 1.0;\n                    }\n                    else\n                    {\n                        const firstHeight = Math.round(Math.min(this.maxSizeWidth / position1.aspectRatio, (maxSizeHeight) * 0.66)) / maxSizeHeight;\n                        position1.set(0, 1, 0, 0, this.maxSizeWidth, firstHeight, POSITION_FLAG_LEFT | POSITION_FLAG_RIGHT | POSITION_FLAG_TOP);\n\n                        const width = this.maxSizeWidth / 2;\n                        const secondHeight = Math.min(maxSizeHeight - firstHeight, Math.round(Math.min(width / position2.aspectRatio, width / position3.aspectRatio))) / maxSizeHeight;\n                        position2.set(0, 0, 1, 1, width, secondHeight, POSITION_FLAG_LEFT | POSITION_FLAG_BOTTOM);\n                        position3.set(1, 1, 1, 1, width, secondHeight, POSITION_FLAG_RIGHT | POSITION_FLAG_BOTTOM);\n                        maxX = 1;\n\n                        this.totalWidth = this.maxSizeWidth;\n                        this.totalHeight = firstHeight + secondHeight;\n                    }\n\n                    break;\n                }\n                case 4: {\n                    const position1 = this.posArray[0];\n                    const position2 = this.posArray[1];\n                    const position3 = this.posArray[2];\n                    const position4 = this.posArray[3];\n                    if (proportions[0] === 'w') {\n                        const h0 = Math.round(Math.min(this.maxSizeWidth / position1.aspectRatio, maxSizeHeight * 0.66)) / maxSizeHeight;\n                        position1.set(0, 2, 0, 0, this.maxSizeWidth, h0, POSITION_FLAG_LEFT | POSITION_FLAG_RIGHT | POSITION_FLAG_TOP);\n\n                        let h = Math.round(this.maxSizeWidth / (position2.aspectRatio + position3.aspectRatio + position4.aspectRatio));\n                        const w0 = Math.max(minWidth, Math.min(this.maxSizeWidth * 0.4, h * position2.aspectRatio));\n                        const w2 = Math.max(Math.max(minWidth, this.maxSizeWidth * 0.33), h * position4.aspectRatio);\n                        const w1 = this.maxSizeWidth - w0 - w2;\n                        h = Math.min(maxSizeHeight - h0, h);\n                        h /= maxSizeHeight;\n                        position2.set(0, 0, 1, 1, w0, h, POSITION_FLAG_LEFT | POSITION_FLAG_BOTTOM);\n                        position3.set(1, 1, 1, 1, w1, h, POSITION_FLAG_BOTTOM);\n                        position4.set(2, 2, 1, 1, w2, h, POSITION_FLAG_RIGHT | POSITION_FLAG_BOTTOM);\n                        maxX = 2;\n\n                        this.totalWidth = this.maxSizeWidth;\n                        this.totalHeight = h0 + h;\n                    } else {\n                        const w = Math.max(minWidth, Math.round(maxSizeHeight / (1.0 / position2.aspectRatio + 1.0 / position3.aspectRatio + 1.0 / position4.aspectRatio)));\n                        const h0 = Math.min(0.33, Math.max(minHeight, w / position2.aspectRatio) / maxSizeHeight);\n                        const h1 = Math.min(0.33, Math.max(minHeight, w / position3.aspectRatio) / maxSizeHeight);\n                        const h2 = 1.0 - h0 - h1;\n                        const w0 = Math.round(Math.min(maxSizeHeight * position1.aspectRatio + paddingsWidth, this.maxSizeWidth - w));\n\n                        position1.set(0, 0, 0, 2, w0, h0 + h1 + h2, POSITION_FLAG_LEFT | POSITION_FLAG_TOP | POSITION_FLAG_BOTTOM);\n                        position2.set(1, 1, 0, 0, w, h0, POSITION_FLAG_RIGHT | POSITION_FLAG_TOP);\n                        position3.set(0, 1, 1, 1, w, h1, POSITION_FLAG_RIGHT);\n                        position3.spanSize = this.maxSizeWidth;\n                        position4.set(0, 1, 2, 2, w, h2, POSITION_FLAG_RIGHT | POSITION_FLAG_BOTTOM);\n                        position4.spanSize = this.maxSizeWidth;\n\n                        if (isOut) {\n                            position1.spanSize = this.maxSizeWidth - w;\n                        } else {\n                            position2.spanSize = this.maxSizeWidth - w0;\n                            position3.leftSpanOffset = w0;\n                            position4.leftSpanOffset = w0;\n                        }\n                        position1.siblingHeights = [ h0, h1, h2 ];\n                        this.hasSibling = true;\n                        maxX = 1;\n\n                        this.totalWidth = w + w0;\n                        this.totalHeight = h0 + h1 + h2;\n                    }\n                    break;\n                }\n            }\n        } else {\n            const croppedRatios = new Array(this.posArray.length);\n            for (let i = 0; i < length; i++) {\n                if (averageAspectRatio > 1.1) {\n                    croppedRatios[i] = Math.max(1.0, this.posArray[i].aspectRatio);\n                } else {\n                    croppedRatios[i] = Math.min(1.0, this.posArray[i].aspectRatio);\n                }\n                croppedRatios[i] = Math.max(0.66667, Math.min(1.7, croppedRatios[i]));\n            }\n\n            let firstLine;\n            let secondLine;\n            let thirdLine;\n            let fourthLine;\n            const attempts = [];\n            for (firstLine = 1; firstLine < croppedRatios.length; firstLine++) {\n                secondLine = croppedRatios.length - firstLine;\n                if (firstLine > 3 || secondLine > 3) {\n                    continue;\n                }\n                attempts.push(new MessageGroupedLayoutAttempt([firstLine, secondLine], [this.multiHeight(croppedRatios, 0, firstLine), this.multiHeight(croppedRatios, firstLine, croppedRatios.length)]));\n            }\n\n            for (firstLine = 1; firstLine < croppedRatios.length - 1; firstLine++) {\n                for (secondLine = 1; secondLine < croppedRatios.length - firstLine; secondLine++) {\n                    thirdLine = croppedRatios.length - firstLine - secondLine;\n                    if (firstLine > 3 || secondLine > (averageAspectRatio < 0.85 ? 4 : 3) || thirdLine > 3) {\n                        continue;\n                    }\n                    attempts.push(new MessageGroupedLayoutAttempt([firstLine, secondLine, thirdLine], [this.multiHeight(croppedRatios, 0, firstLine), this.multiHeight(croppedRatios, firstLine, firstLine + secondLine), this.multiHeight(croppedRatios, firstLine + secondLine, croppedRatios.length)]));\n                }\n            }\n\n            for (firstLine = 1; firstLine < croppedRatios.length - 2; firstLine++) {\n                for (secondLine = 1; secondLine < croppedRatios.length - firstLine; secondLine++) {\n                    for (thirdLine = 1; thirdLine < croppedRatios.length - firstLine - secondLine; thirdLine++) {\n                        fourthLine = croppedRatios.length - firstLine - secondLine - thirdLine;\n                        if (firstLine > 3 || secondLine > 3 || thirdLine > 3 || fourthLine > 3) {\n                            continue;\n                        }\n                        attempts.push(new MessageGroupedLayoutAttempt([firstLine, secondLine, thirdLine, fourthLine], [this.multiHeight(croppedRatios, 0, firstLine), this.multiHeight(croppedRatios, firstLine, firstLine + secondLine), this.multiHeight(croppedRatios, firstLine + secondLine, firstLine + secondLine + thirdLine), this.multiHeight(croppedRatios, firstLine + secondLine + thirdLine, croppedRatios.length)]));\n                    }\n                }\n            }\n\n            let optimal = null;\n            let optimalDiff = 0.0;\n            let maxHeight = this.maxSizeWidth / 3 * 4;\n            for (let i = 0; i < attempts.length; i++) {\n                const attempt = attempts[i];\n                let height = 0;\n                let minLineHeight = Number.MAX_VALUE;\n                for (let j = 0; j < attempt.heights.length; j++) {\n                    height += attempt.heights[j];\n                    if (attempt.heights[j] < minLineHeight) {\n                        minLineHeight = attempt.heights[j];\n                    }\n                }\n\n                let diff = Math.abs(height - maxHeight);\n                if (attempt.lineCounts.length > 1) {\n                    if (attempt.lineCounts[0] > attempt.lineCounts[1] || (attempt.lineCounts.length > 2 && attempt.lineCounts[1] > attempt.lineCounts[2]) || (attempt.lineCounts.length > 3 && attempt.lineCounts[2] > attempt.lineCounts[3])) {\n                        diff *= 1.5;\n                    }\n                }\n\n                if (minLineHeight < minWidth) {\n                    diff *= 1.5;\n                }\n\n                if (optimal === null || diff < optimalDiff) {\n                    optimal = attempt;\n                    optimalDiff = diff;\n                }\n            }\n\n            if (optimal === null) {\n                return;\n            }\n\n            let index = 0;\n            let y = 0.0;\n\n            for (let i = 0; i < optimal.lineCounts.length; i++) {\n                let c = optimal.lineCounts[i];\n                let lineHeight = optimal.heights[i];\n                let spanLeft = this.maxSizeWidth;\n                let posToFix = null;\n                maxX = Math.max(maxX, c - 1);\n                for (let j = 0; j < c; j++) {\n                    let ratio = croppedRatios[index];\n                    let width = Math.trunc(ratio * lineHeight);\n                    spanLeft -= width;\n                    let pos = this.posArray[index];\n                    let flags = 0;\n                    if (i === 0) {\n                        flags |= POSITION_FLAG_TOP;\n                    }\n                    if (i === optimal.lineCounts.length - 1) {\n                        flags |= POSITION_FLAG_BOTTOM;\n                    }\n                    if (j === 0) {\n                        flags |= POSITION_FLAG_LEFT;\n                        if (isOut) {\n                            posToFix = pos;\n                        }\n                    }\n                    if (j === c - 1) {\n                        flags |= POSITION_FLAG_RIGHT;\n                        if (!isOut) {\n                            posToFix = pos;\n                        }\n                    }\n                    pos.set(j, j, i, i, width, lineHeight / maxSizeHeight, flags);\n                    index++;\n                }\n                posToFix.width += spanLeft;\n                posToFix.spanSize += spanLeft;\n                y += lineHeight;\n            }\n\n            this.totalWidth = this.maxSizeWidth;\n            this.totalHeight = y / maxSizeHeight;\n        }\n    }\n\n    static getWidthHeight(message) {\n        let w = 0;\n        let h = 0;\n        let sizes = [];\n        switch (message.content['@type']){\n            case 'messagePhoto': {\n                const { photo, minithumbnail } = message.content;\n                if (photo) {\n                    sizes = photo.sizes;\n                } else if (minithumbnail) {\n                    sizes.push(minithumbnail);\n                }\n\n                break;\n            }\n            case 'messageVideo': {\n                const { video, thumbnail, minithumbnail } = message.content;\n                if (video) {\n                    const { width, height } = video;\n                    sizes.push({ width, height });\n                } else if (minithumbnail) {\n                    sizes.push(minithumbnail);\n                } else if (thumbnail) {\n                    sizes.push(thumbnail);\n                }\n\n                break;\n            }\n            case 'messageDocument': {\n                const { thumbnail, minithumbnail } = message.content;\n                if (minithumbnail) {\n                    sizes.push(minithumbnail);\n                } else if (thumbnail) {\n                    sizes.push(thumbnail);\n                } else {\n                    sizes.push({ width: 90, height: 90 });\n                }\n\n                break;\n            }\n        }\n\n        const photoSize = GroupedMessages.getPhotoSize(sizes, 1280);\n        if (photoSize) {\n            w = photoSize.width;\n            h = photoSize.height;\n        }\n\n        return { w, h };\n    }\n\n    static getPhotoSize(sizes, side, byMinSize) {\n        if (!sizes || !sizes.length) return null;\n\n        let lastSide = 0;\n        let lastSize = null;\n        for (let i = 0; i < sizes.length; i++) {\n            const { width: w, height: h } = sizes[i];\n\n            if (byMinSize) {\n                const currentSide = h >= w ? w : h;\n                if (!lastSize || (side > 100 && side > lastSide && lastSide < currentSide)) {\n                    lastSide = currentSide;\n                    lastSize = sizes[i];\n                }\n\n            } else {\n                const currentSide = w >= h ? w : h;\n                if (!lastSize || (side > 100 && currentSide <= side && lastSide < currentSide)) {\n                    lastSide = currentSide;\n                    lastSize = sizes[i];\n                }\n            }\n        }\n\n        return lastSize;\n    }\n}\n\nexport default GroupedMessages;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport './UnreadSeparator.css';\n\nfunction UnreadSeparator(props) {\n    const { t } = props;\n\n    return <div className='unread-separator'>{t('UnreadMessages')}</div>;\n}\n\nexport default withTranslation()(UnreadSeparator);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport './EmptyTile.css';\n\nfunction EmptyTile(props) {\n    const { dialog, small, big, style } = props;\n\n    return (\n        <div\n            className={classNames(\n                'chat-tile',\n                { 'tile-dialog': dialog },\n                { 'tile-small': small },\n                { 'tile-big': big }\n            )}\n            style={style}/>\n    );\n}\n\nEmptyTile.propTypes = {};\n\nexport default EmptyTile;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport CheckMarkIcon from '@material-ui/icons/Check';\nimport AlbumItem from './AlbumItem';\nimport DayMeta from '../DayMeta';\nimport Forward from '../Forward';\nimport GroupedMessages from './GroupedMessages';\nimport UnreadSeparator from '../UnreadSeparator';\nimport MessageAuthor from '../MessageAuthor';\nimport Reply from '../Reply';\nimport Meta from '../Meta';\nimport ChatTile from '../../Tile/ChatTile';\nimport EmptyTile from '../../Tile/EmptyTile';\nimport UserTile from '../../Tile/UserTile';\nimport { albumHistoryEquals } from '../../../Utils/Common';\nimport { selectMessage } from '../../../Actions/Client';\nimport { getText, getWebPage, showMessageForward } from '../../../Utils/Message';\nimport { isChannelChat, isPrivateChat } from '../../../Utils/Chat';\nimport { PHOTO_DISPLAY_SIZE } from '../../../Constants';\nimport MessageStore from '../../../Stores/MessageStore';\nimport './Album.css';\n\nclass Album extends React.Component {\n    state = { };\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { messageIds, emojiMatches, selected } = this.props;\n\n        if (!albumHistoryEquals(nextProps.messageIds, messageIds)) {\n            return true;\n        }\n\n        if (nextState.emojiMatches !== emojiMatches) {\n            return true;\n        }\n\n        if (nextState.selected !== selected) {\n            return true;\n        }\n\n        return false;\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { displaySize, chatId, messageIds } = props;\n\n        if (messageIds !== state.prevMessageIds) {\n            const grouped = new GroupedMessages();\n            grouped.calculate(messageIds.map(x => MessageStore.get(chatId, x)), displaySize);\n\n            return {\n                grouped,\n                prevMessageIds: messageIds\n            }\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        // MessageStore.on('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\n        MessageStore.on('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n        // MessageStore.on('clientUpdateMessageShake', this.onClientUpdateMessageShake);\n        MessageStore.on('clientUpdateClearSelection', this.onClientUpdateClearSelection);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    componentWillUnmount() {\n        // MessageStore.off('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\n        MessageStore.off('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n        // MessageStore.off('clientUpdateMessageShake', this.onClientUpdateMessageShake);\n        MessageStore.off('clientUpdateClearSelection', this.onClientUpdateClearSelection);\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    // onClientUpdateMessageHighlighted = update => {\n    //     const { chatId, messageIds } = this.props;\n    //     const { selected, highlighted } = this.state;\n    //\n    //     if (selected) return;\n    //\n    //     if (chatId === update.chatId && messageIds.some(x => x === update.messageId)) {\n    //         if (highlighted) {\n    //             this.setState({ highlighted: false }, () => {\n    //                 setTimeout(() => {\n    //                     this.setState({ highlighted: true });\n    //                 }, 0);\n    //             });\n    //         } else {\n    //             this.setState({ highlighted: true });\n    //         }\n    //     } else if (highlighted) {\n    //         this.setState({ highlighted: false });\n    //     }\n    // };\n\n    onClientUpdateMessageSelected = update => {\n        const { chatId, messageIds } = this.props;\n        const { selected } = update;\n\n        if (chatId === update.chatId && messageIds.some(x => x === update.messageId)) {\n            this.setState({ selected: messageIds.every(x => MessageStore.hasSelectedMessage(chatId, x)) });\n        }\n    };\n\n    onClientUpdateClearSelection = update => {\n        if (!this.state.selected) return;\n\n        this.setState({ selected: false });\n    };\n\n    onUpdateMessageContent = update => {\n        const { chat_id, message_id } = update;\n        const { chatId, messageIds, displaySize } = this.props;\n        const { emojiMatches: oldEmojiMatches } = this.state;\n\n        if (chatId !== chat_id) return;\n        if (!messageIds.some(x => x === message_id)) return;\n\n        const grouped = new GroupedMessages();\n        grouped.calculate(messageIds.map(x => MessageStore.get(chatId, x)), displaySize);\n\n        const emojiMatches = null; //getEmojiMatches(chatId, messageId);\n        if (emojiMatches !== oldEmojiMatches) {\n            this.setState({ emojiMatches, grouped });\n        } else {\n            this.setState({ grouped });\n        }\n    };\n\n    handleSelection = () => {\n        // if (!this.mouseDown) return;\n\n        const selection = window.getSelection().toString();\n        if (selection) return;\n\n        const { chatId, messageIds } = this.props;\n        const { selected } = this.state;\n\n        if (selected) {\n            for (let i = 0; i < messageIds.length; i++) {\n                selectMessage(chatId, messageIds[i], false);\n            }\n        } else {\n            for (let i = 0; i < messageIds.length; i++) {\n                selectMessage(chatId, messageIds[i], true);\n            }\n        }\n    };\n\n    render() {\n        let { showTail } = this.props;\n        const { chatId, messageIds, displaySize, showUnreadSeparator, showTitle, showDate, t = x => x } = this.props;\n        const {\n            emojiMatches,\n            selected,\n            highlighted,\n            shook,\n            copyLink,\n            contextMenu,\n            left,\n            top\n        } = this.state;\n        const { grouped } = this.state;\n        if (!grouped) {\n            return null;\n        }\n\n        if (!messageIds.length) {\n            return null;\n        }\n\n        let messageId = messageIds[messageIds.length - 1];\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return <div>[empty message]</div>;\n\n        const { content, is_outgoing, views, date, edit_date, reply_to_message_id, forward_info, sender_user_id } = message;\n\n        const isOutgoing = is_outgoing && !isChannelChat(chatId);\n\n        const inlineMeta = (\n            <Meta\n                className='meta-hidden'\n                key={`${chatId}_${messageId}_meta`}\n                chatId={chatId}\n                messageId={messageId}\n                date={date}\n                editDate={edit_date}\n                views={views}\n            />\n        );\n        const webPage = getWebPage(message);\n        let text = null;\n        for (let i = 0; i < messageIds.length; i++) {\n            const m = MessageStore.get(chatId, messageIds[i]);\n            const t = getText(m, !!webPage ? null : inlineMeta, t);\n            if (t && t.length) {\n                if (text !== null) {\n                    text = null;\n                    break;\n                } else {\n                    text = t;\n                    messageId = messageIds[i];\n                }\n            }\n        }\n        const hasCaption = text !== null && text.length > 0;\n        const meta = (\n            <Meta\n                className={classNames('meta-text', {\n                    'meta-bubble': !hasCaption\n                })}\n                chatId={chatId}\n                messageId={messageId}\n                date={date}\n                editDate={edit_date}\n                views={views}\n                onDateClick={this.handleDateClick}\n            />\n        );\n\n        const showForward = showMessageForward(chatId, messageId);\n        const showReply = Boolean(reply_to_message_id);\n        const suppressTitle = isPrivateChat(chatId);\n        const hasTitle = (!suppressTitle && showTitle) || showForward || showReply;\n        // const media = getMedia(message, this.openMedia, { hasTitle, hasCaption, inlineMeta, meta });\n        const isChannel = isChannelChat(chatId);\n        const isPrivate = isPrivateChat(chatId);\n\n        // if (showTail && isMediaContent() && !hasCaption) {\n        //     showTail = false;\n        // }\n\n        let tile = null;\n        if (showTail) {\n            if (isPrivate) {\n                tile = <EmptyTile small />\n            } else if (isChannel) {\n                tile = <EmptyTile small />\n            } else if (is_outgoing) {\n                tile = <EmptyTile small />\n            } else if (sender_user_id) {\n                tile = <UserTile small userId={sender_user_id} onSelect={this.handleSelectUser} />\n            } else {\n                tile = <ChatTile small chatId={chatId} onSelect={this.handleSelectChat} />\n            }\n        }\n\n        const style = { width: grouped.totalWidth - 2 - 2 };\n        const withBubble = content['@type'] !== 'messageSticker' && content['@type'] !== 'messageVideoNote';\n        const tailRounded = !hasCaption && (content['@type'] === 'messageAnimation' || content['@type'] === 'messageVideo' || content['@type'] === 'messagePhoto');\n\n        const items = grouped.messages.map(x => (\n            <AlbumItem\n                key={x.id}\n                message={x}\n                position={grouped.positions.get(x)}\n                displaySize={displaySize}\n            />));\n\n        return (\n            <div>\n                {showDate && <DayMeta date={date} />}\n                <div\n                    className={classNames('message', 'message-album', {\n                        'message-rounded': showTitle && showTail && tailRounded,\n                        'message-short': !tile,\n                        'message-out': isOutgoing,\n                        'message-selected': selected,\n                        'message-highlighted': highlighted && !selected,\n                        'message-group-title': showTitle && !showTail,\n                        'message-group': !showTitle && !showTail,\n                        'message-group-tail': !showTitle && showTail && !tailRounded,\n                        'message-group-tail-rounded': !showTitle && showTail && tailRounded,\n                        'message-bubble-hidden': !withBubble\n                    })}\n                    onMouseOver={this.handleMouseOver}\n                    onMouseOut={this.handleMouseOut}\n                    onMouseDown={this.handleMouseDown}\n                    onClick={this.handleSelection}\n                    onAnimationEnd={this.handleAnimationEnd}\n                    onContextMenu={this.handleOpenContextMenu}>\n                    {showUnreadSeparator && <UnreadSeparator />}\n                    <div className='message-body'>\n                        <div className='message-padding'>\n                            <CheckMarkIcon className='message-select-tick' />\n                        </div>\n                        <div className={classNames('message-wrapper', { 'shook': shook })}>\n                            {tile}\n                            <div\n                                className={classNames(\n                                    'message-content', {\n                                    'message-bubble': withBubble,\n                                    'message-bubble-out': withBubble && isOutgoing\n                                })}\n                                style={style}>\n                                {withBubble && ((showTitle && !suppressTitle) || showForward) && (\n                                    <div className='message-title'>\n                                        {showTitle && !showForward && (\n                                            <MessageAuthor chatId={chatId} openChat userId={sender_user_id} openUser />\n                                        )}\n                                        {showForward && <Forward forwardInfo={forward_info} />}\n                                    </div>\n                                )}\n                                {showReply && (\n                                    <Reply\n                                        chatId={chatId}\n                                        messageId={reply_to_message_id}\n                                        onClick={this.handleReplyClick}\n                                    />\n                                )}\n                                <div className={classNames(\n                                    'album',\n                                    { 'album-caption': hasCaption },\n                                    { 'album-title': hasTitle }\n                                    )}>\n                                    <div className='album-wrapper' style={{ width: grouped.totalWidth }}>\n                                        {items}\n                                    </div>\n                                </div>\n                                <div\n                                    className={classNames('message-text', {\n                                        'message-text-1emoji': emojiMatches === 1,\n                                        'message-text-2emoji': emojiMatches === 2,\n                                        'message-text-3emoji': emojiMatches === 3\n                                    })}>\n                                    {text}\n                                </div>\n                                {withBubble && meta}\n                            </div>\n                            <div className='message-tile-padding' />\n                        </div>\n                        <div className='message-padding' />\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nAlbum.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageIds: PropTypes.arrayOf(PropTypes.number).isRequired,\n    displaySize: PropTypes.number,\n    showTitle: PropTypes.bool,\n    showTail: PropTypes.bool,\n    showUnreadSeparator: PropTypes.bool,\n    showDate: PropTypes.bool\n};\n\nAlbum.defaultProps = {\n    displaySize: PHOTO_DISPLAY_SIZE,\n    showTitle: false,\n    showTail: false,\n    showUnreadSeparator: false,\n    showData: false\n};\n\nexport default Album;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport FileStore from '../../Stores/FileStore';\nimport AppStore from '../../Stores/ApplicationStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './FilesDropTarget.css';\n\nclass FilesDropTarget extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { dragParams } = AppStore;\n\n        this.state = { dragParams };\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateDragging', this.onClientUpdateDragging);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateDragging', this.onClientUpdateDragging);\n    }\n\n    onClientUpdateDragging = update => {\n        const { dragParams } = AppStore;\n\n        this.setState({ dragParams });\n    };\n\n    handleDragEnter = event => {\n        event.preventDefault();\n        event.stopPropagation();\n    };\n\n    handleDrop = event => {\n        event.preventDefault();\n        event.stopPropagation();\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateDragging',\n            dragging: false\n        });\n\n        this.handleAttachDocumentComplete(event.dataTransfer.files);\n    };\n\n    handleDragLeave = event => {\n        event.preventDefault();\n        event.stopPropagation();\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateDragging',\n            dragging: false\n        });\n    };\n\n    handleAttachDocumentComplete = files => {\n        if (files.length === 0) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateSendFiles',\n            files\n        });\n    };\n\n    render() {\n        const { dragParams } = this.state;\n        if (!dragParams) return null;\n\n        return (\n            <div\n                className='files-drop-target'\n                onDragEnter={this.handleDragEnter}\n                onDragLeave={this.handleDragLeave}\n                onDrop={this.handleDrop}>\n                <div className='files-drop-target-wrapper'>\n                    <div className='files-drop-target-text'>\n                        <div className='files-drop-target-title'>Drop files here</div>\n                        <div className='files-drop-target-subtitle'>to send them</div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default FilesDropTarget;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport './StubMessage.css';\n\nclass StubMessage extends React.Component {\n\n    render() {\n\n        return (\n            <div className='stub-message'>\n                {this.props.children}\n            </div>\n        );\n    }\n\n}\n\nStubMessage.propTypes = {};\n\nexport default StubMessage;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport Animation from './Animation';\nimport Audio from './Audio';\nimport Document from './Document';\nimport Photo from './Photo';\nimport Sticker, { StickerSourceEnum } from './Sticker';\nimport Video from './Video';\nimport VideoNote from './VideoNote';\nimport VoiceNote from './VoiceNote';\nimport { getSize } from '../../../Utils/Common';\nimport { getSrc } from '../../../Utils/File';\nimport { openInstantView } from '../../../Actions/InstantView';\nimport { getFormattedText, getTwitterInstagramEntities } from '../../../Utils/Message';\nimport {\n    PHOTO_DISPLAY_EXTRA_SMALL_SIZE,\n    PHOTO_DISPLAY_SIZE,\n    PHOTO_DISPLAY_SMALL_SIZE,\n    PHOTO_SIZE\n} from '../../../Constants';\nimport MessageStore from '../../../Stores/MessageStore';\nimport './WebPage.css';\n\nclass WebPage extends React.Component {\n    getMedia = () => {\n        const { chatId, messageId, size, displaySize, displaySmallSize, displayExtraSmallSize, openMedia } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { content } = message;\n        if (!content) return null;\n\n        const { web_page } = content;\n        if (!web_page) return null;\n\n        const {\n            site_name,\n            title,\n            description,\n            url,\n            photo,\n            animation,\n            video,\n            audio,\n            document,\n            voice_note,\n            video_note,\n            sticker,\n            type\n        } = web_page;\n\n        if (sticker) {\n            return [\n                null,\n                <Sticker\n                    chatId={chatId}\n                    messageId={messageId}\n                    sticker={sticker}\n                    openMedia={openMedia}\n                    source={StickerSourceEnum.MESSAGE}\n                />\n            ];\n        }\n\n        if (voice_note) {\n            return [\n                null,\n                <VoiceNote chatId={chatId} messageId={messageId} voiceNote={voice_note} openMedia={openMedia} />\n            ];\n        }\n\n        if (video_note) {\n            return [\n                null,\n                <VideoNote chatId={chatId} messageId={messageId} videoNote={video_note} openMedia={openMedia} />\n            ];\n        }\n\n        if (audio) {\n            return [null, <Audio chatId={chatId} messageId={messageId} audio={audio} openMedia={openMedia} />];\n        }\n\n        if (document) {\n            return [null, <Document chatId={chatId} messageId={messageId} document={document} openMedia={openMedia} />];\n        }\n\n        if (animation) {\n            const animationSrc = getSrc(animation.animation);\n            if (animationSrc || animation.thumbnail) {\n                return [\n                    null,\n                    <Animation stretch={true} chatId={chatId} messageId={messageId} animation={animation} openMedia={openMedia} />\n                ];\n            }\n        }\n\n        if (video) {\n            if (video.thumbnail) {\n                return [null, <Video stretch={true} chatId={chatId} messageId={messageId} video={video} openMedia={openMedia} />];\n            }\n        }\n\n        if (photo) {\n            const photoSize = getSize(photo.sizes, size);\n            const smallPhoto =\n                (type === 'article' || type === 'photo' || type === 'telegram_megagroup' || type === 'telegram_channel') &&\n                (site_name || title || description && description.text.length > 0) &&\n                photoSize &&\n                (photoSize.width === photoSize.height || Math.max(photoSize.width, photoSize.height) < PHOTO_DISPLAY_SIZE );\n            const extraSmallPhoto = smallPhoto && (!description || description.text.length < 50);\n\n            const style =\n                smallPhoto || extraSmallPhoto\n                    ? {\n                          float: 'right',\n                          marginLeft: 6\n                      }\n                    : {};\n\n            return [\n                smallPhoto ? (\n                    <Photo\n                        displaySize={extraSmallPhoto ? displayExtraSmallSize : displaySmallSize}\n                        style={style}\n                        chatId={chatId}\n                        messageId={messageId}\n                        photo={photo}\n                        openMedia={openMedia}\n                    />\n                ) : null,\n                !smallPhoto ? <Photo stretch={true} chatId={chatId} messageId={messageId} photo={photo} openMedia={openMedia} /> : null\n            ];\n        }\n\n        return [null, null];\n    };\n\n    handleInstantViewClick = async event => {\n        event.preventDefault();\n        event.stopPropagation();\n\n        const { chatId, messageId } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { content } = message;\n        if (!content) return null;\n\n        const { web_page } = content;\n        if (!web_page) return null;\n\n        const { url } = web_page;\n\n        openInstantView(url);\n    };\n\n    getWebPage() {\n        const { chatId, messageId, t } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { content } = message;\n        if (!content) return null;\n\n        const { web_page } = content;\n        if (!web_page) return null;\n\n        const { instant_view_version, site_name } = web_page;\n        let { description, title } = web_page;\n\n        if (description['@type'] === 'formattedText') {\n            description = getFormattedText(description);\n        } else if (typeof description === 'string' && site_name && (site_name.toLowerCase() === 'twitter' || site_name.toLowerCase() === 'instagram')) {\n            // const { text: t2, entities: e2 } = getTwitterInstagramEntities(site_name.toLowerCase() === 'twitter' ? 1 : 2, title, []);\n            // title = getFormattedText({ '@type': 'formattedText', text: title, entities: e2 });\n\n            const { text: t1, entities: e1 } = getTwitterInstagramEntities(site_name.toLowerCase() === 'instagram' ? 1 : 2, description, []);\n            description = getFormattedText({ '@type': 'formattedText', text: description, entities: e1 });\n        }\n\n        const webPageContent = (\n            <>\n                {site_name && <div className='web-page-site-name'>{site_name}</div>}\n                {title && <div className='web-page-title'>{title}</div>}\n                {description && <div className='web-page-description'>{description}</div>}\n            </>\n        );\n        const [webPageMediaTop, webPageMediaBottom] = this.getMedia();\n        const webPageInstantView = instant_view_version > 0 && (\n            <Button\n                variant='outlined'\n                color='primary'\n                classes={{\n                    outlinedPrimary: 'message-control',\n                    disabled: 'message-control-disabled'\n                }}\n                fullWidth\n                onClick={this.handleInstantViewClick}\n                className='web-page-button'>\n                <SvgIcon>\n                    <path d='M10.5159727,16.7438514 C10.1741929,18.1203636 10.687342,18.4055299 11.6053255,17.4005852 L15.4613785,12.9698209 C16.3535455,11.8808642 16.1300862,11.0059438 14.8452805,10.7872179 L12.9861121,10.4429102 L12.9861121,10.4429102 C12.8775019,10.4227962 12.8057616,10.3184447 12.8258756,10.2098345 C12.8265392,10.2062511 12.8273007,10.2026864 12.8281591,10.1991446 L13.5436135,7.24719783 C13.8863521,5.8619451 13.3150978,5.61107807 12.4582164,6.59275159 C11.2270125,7.98097123 10.2913754,9.02966176 9.65130514,9.73882318 C9.42814828,9.98606827 9.06894462,10.3719875 8.57369417,10.8965808 C7.48829706,12.1010165 8.05955136,12.9745105 9.31498713,13.1932365 L11.0917769,13.5117472 L11.0917769,13.5117472 C11.2005008,13.5312372 11.2728391,13.6351751 11.253349,13.743899 C11.2525988,13.7480841 11.2517153,13.7522442 11.2506999,13.756373 L10.5159727,16.7438514 Z' />\n                </SvgIcon>\n                {t('InstantView')}\n            </Button>\n        );\n\n        return (\n            <>\n                {webPageMediaTop}\n                {webPageContent}\n                {webPageMediaBottom}\n                {webPageInstantView}\n            </>\n        );\n    }\n\n    render() {\n        const { meta } = this.props;\n\n        return (\n            <>\n                <div className='web-page'>\n                    <div className='border' />\n                    <div className='web-page-wrapper'>{this.getWebPage()}</div>\n                </div>\n                {meta}\n            </>\n        );\n    }\n}\n\nWebPage.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n\n    size: PropTypes.number,\n    displaySize: PropTypes.number,\n    displaySmallSize: PropTypes.number,\n    displayExtraSmallSize: PropTypes.number,\n    openMedia: PropTypes.func\n};\n\nWebPage.defaultProps = {\n    size: PHOTO_SIZE,\n    displaySize: PHOTO_DISPLAY_SIZE,\n    displaySmallSize: PHOTO_DISPLAY_SMALL_SIZE,\n    displayExtraSmallSize: PHOTO_DISPLAY_EXTRA_SMALL_SIZE\n};\n\nexport default withTranslation()(WebPage);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { compose } from '../../Utils/HOC';\nimport { withTranslation } from 'react-i18next';\nimport { withRestoreRef, withSaveRef } from '../../Utils/HOC';\nimport CheckMarkIcon from '@material-ui/icons/Check';\nimport DayMeta from './DayMeta';\nimport Reply from './Reply';\nimport Forward from './Forward';\nimport Meta from './Meta';\nimport MessageAuthor from './MessageAuthor';\nimport MessageMenu from './MessageMenu';\nimport UserTile from '../Tile/UserTile';\nimport ChatTile from '../Tile/ChatTile';\nimport EmptyTile from '../Tile/EmptyTile';\nimport UnreadSeparator from './UnreadSeparator';\nimport WebPage from './Media/WebPage';\nimport {\n    getEmojiMatches,\n    getText,\n    getWebPage,\n    openMedia,\n    showMessageForward,\n    isMetaBubble,\n    canMessageBeForwarded,\n    getMessageStyle\n} from '../../Utils/Message';\nimport { getMedia } from '../../Utils/Media';\nimport { canSendMessages, isChannelChat, isPrivateChat } from '../../Utils/Chat';\nimport {\n    openUser,\n    openChat,\n    selectMessage,\n    openReply,\n    replyMessage,\n    forwardMessages\n} from '../../Actions/Client';\nimport MessageStore from '../../Stores/MessageStore';\nimport './Message.css';\n\nclass Message extends Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId, messageId } = this.props;\n        this.state = {\n            message: MessageStore.get(chatId, messageId),\n            emojiMatches: getEmojiMatches(chatId, messageId),\n            selected: false,\n            highlighted: false,\n            shook: false,\n\n            contextMenu: false,\n            copyLink: null,\n            left: 0,\n            top: 0\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId, sendingState, showUnreadSeparator, showTail, showTitle } = this.props;\n        const { contextMenu, selected, highlighted, shook, emojiMatches } = this.state;\n\n        if (nextProps.chatId !== chatId) {\n            // console.log('Message.shouldComponentUpdate true chatId');\n            return true;\n        }\n\n        if (nextProps.messageId !== messageId) {\n            // console.log('Message.shouldComponentUpdate true messageId');\n            return true;\n        }\n\n        if (nextProps.sendingState !== sendingState) {\n            // console.log('Message.shouldComponentUpdate true sendingState');\n            return true;\n        }\n\n        if (nextProps.showUnreadSeparator !== showUnreadSeparator) {\n            // console.log('Message.shouldComponentUpdate true showUnreadSeparator');\n            return true;\n        }\n\n        if (nextProps.showTail !== showTail) {\n            // console.log('Message.shouldComponentUpdate true showTail');\n            return true;\n        }\n\n        if (nextProps.showTitle !== showTitle) {\n            // console.log('Message.shouldComponentUpdate true showTitle');\n            return true;\n        }\n\n        if (nextState.contextMenu !== contextMenu) {\n            // console.log('Message.shouldComponentUpdate true contextMenu');\n            return true;\n        }\n\n        if (nextState.selected !== selected) {\n            // console.log('Message.shouldComponentUpdate true selected');\n            return true;\n        }\n\n        if (nextState.highlighted !== highlighted) {\n            // console.log('Message.shouldComponentUpdate true highlighted');\n            return true;\n        }\n\n        if (nextState.shook !== shook) {\n            // console.log('Message.shouldComponentUpdate true shook');\n            return true;\n        }\n\n        if (nextState.emojiMatches !== emojiMatches) {\n            // console.log('Message.shouldComponentUpdate true emojiMatches');\n            return true;\n        }\n\n        // console.log('Message.shouldComponentUpdate false');\n        return false;\n    }\n\n    componentDidMount() {\n        MessageStore.on('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\n        MessageStore.on('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n        MessageStore.on('clientUpdateMessageShake', this.onClientUpdateMessageShake);\n        MessageStore.on('clientUpdateClearSelection', this.onClientUpdateClearSelection);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    componentWillUnmount() {\n        MessageStore.off('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\n        MessageStore.off('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n        MessageStore.off('clientUpdateMessageShake', this.onClientUpdateMessageShake);\n        MessageStore.off('clientUpdateClearSelection', this.onClientUpdateClearSelection);\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    onClientUpdateClearSelection = update => {\n        if (!this.state.selected) return;\n\n        this.setState({ selected: false });\n    };\n\n    onClientUpdateMessageShake = update => {\n        const { chatId, messageId } = this.props;\n        const { shook } = this.state;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            if (shook) {\n                this.setState({ shook: false }, () => {\n                    setTimeout(() => {\n                        this.setState({ shook: true });\n                    }, 0);\n                });\n            } else {\n                this.setState({ shook: true });\n            }\n        }\n    };\n\n    onClientUpdateMessageHighlighted = update => {\n        const { chatId, messageId } = this.props;\n        const { selected, highlighted } = this.state;\n\n        if (selected) return;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            if (highlighted) {\n                this.setState({ highlighted: false }, () => {\n                    setTimeout(() => {\n                        this.setState({ highlighted: true });\n                    }, 0);\n                });\n            } else {\n                this.setState({ highlighted: true });\n            }\n        } else if (highlighted) {\n            this.setState({ highlighted: false });\n        }\n    };\n\n    onClientUpdateMessageSelected = update => {\n        const { chatId, messageId } = this.props;\n        const { selected } = update;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            this.setState({ selected, highlighted: false });\n        }\n    };\n\n    onUpdateMessageContent = update => {\n        const { chat_id, message_id } = update;\n        const { chatId, messageId } = this.props;\n        const { emojiMatches } = this.state;\n\n        if (chatId !== chat_id) return;\n        if (messageId !== message_id) return;\n\n        const newEmojiMatches = getEmojiMatches(chatId, messageId);\n        if (newEmojiMatches !== emojiMatches) {\n            this.setState({ emojiMatches: getEmojiMatches(chatId, messageId) });\n        } else {\n            this.forceUpdate();\n        }\n    };\n\n    handleSelectUser = userId => {\n        openUser(userId, true);\n    };\n\n    handleSelectChat = chatId => {\n        openChat(chatId, null, true);\n    };\n\n    handleSelection = () => {\n        if (!this.mouseDown) return;\n\n        const selection = window.getSelection().toString();\n        if (selection) return;\n\n        const { chatId, messageId } = this.props;\n\n        const selected = !MessageStore.selectedItems.has(`chatId=${chatId}_messageId=${messageId}`);\n        selectMessage(chatId, messageId, selected);\n    };\n\n    handleDateClick = e => {\n        e.preventDefault();\n        e.stopPropagation();\n\n        const { chatId, messageId } = this.props;\n\n        const canBeReplied = canSendMessages(chatId);\n        if (canBeReplied) {\n            replyMessage(chatId, messageId);\n\n            return;\n        }\n\n        const canBeForwarded = canMessageBeForwarded(chatId, messageId);\n        if (canBeForwarded) {\n            forwardMessages(chatId, [messageId]);\n        }\n    };\n\n    openMedia = event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        const { chatId, messageId } = this.props;\n\n        openMedia(chatId, messageId);\n    };\n\n    handleAnimationEnd = () => {\n        this.setState({ highlighted: false });\n    };\n\n    handleMouseDown = () => {\n        this.mouseDown = true;\n    };\n\n    handleMouseOver = () => {\n        this.mouseDown = false;\n    };\n\n    handleMouseOut = () => {\n        this.mouseOut = false;\n    };\n\n    handleReplyClick = () => {\n        const { chatId, messageId } = this.props;\n        openReply(chatId, messageId);\n    };\n\n    handleOpenContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            if (MessageStore.selectedItems.size > 1) {\n                return;\n            }\n\n            const left = event.clientX;\n            const top = event.clientY;\n            const copyLink =\n                event.target && event.target.tagName === 'A' && event.target.href ? event.target.href : null;\n\n            this.setState({\n                contextMenu: true,\n                copyLink,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    render() {\n        let { showTail } = this.props;\n        const { t, chatId, messageId, showUnreadSeparator, showTitle, showDate } = this.props;\n        const {\n            emojiMatches,\n            selected,\n            highlighted,\n            shook,\n            copyLink,\n            contextMenu,\n            left,\n            top\n        } = this.state;\n\n        // console.log('Message.render', messageId);\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return <div>[empty message]</div>;\n\n        const { content, is_outgoing, views, date, edit_date, reply_to_message_id, forward_info, sender_user_id } = message;\n\n        const isOutgoing = is_outgoing && !isChannelChat(chatId);\n        const inlineMeta = (\n            <Meta\n                className='meta-hidden'\n                key={`${chatId}_${messageId}_meta`}\n                chatId={chatId}\n                messageId={messageId}\n                date={date}\n                editDate={edit_date}\n                views={views}\n            />\n        );\n        const meta = (\n            <Meta\n                className={classNames('meta-text', {\n                    'meta-bubble': isMetaBubble(chatId, messageId)\n                })}\n                chatId={chatId}\n                messageId={messageId}\n                date={date}\n                editDate={edit_date}\n                views={views}\n                onDateClick={this.handleDateClick}\n            />\n        );\n\n        const webPage = getWebPage(message);\n        const text = getText(message, !!webPage ? null : inlineMeta, t);\n        const hasCaption = text !== null && text.length > 0;\n        const showForward = showMessageForward(chatId, messageId);\n        const showReply = Boolean(reply_to_message_id);\n        const suppressTitle = isPrivateChat(chatId);\n        const hasTitle = (!suppressTitle && showTitle) || showForward || showReply;\n        const media = getMedia(message, this.openMedia, { hasTitle, hasCaption, inlineMeta, meta });\n        const isChannel = isChannelChat(chatId);\n        const isPrivate = isPrivateChat(chatId);\n\n        // if (showTail && isMediaContent() && !hasCaption) {\n        //     showTail = false;\n        // }\n\n        let tile = null;\n        if (showTail) {\n            if (isPrivate) {\n                tile = <EmptyTile small />\n            } else if (isChannel) {\n                tile = <EmptyTile small />\n            } else if (is_outgoing) {\n                tile = <EmptyTile small />\n            } else if (sender_user_id) {\n                tile = <UserTile small userId={sender_user_id} onSelect={this.handleSelectUser} />\n            } else {\n                tile = <ChatTile small chatId={chatId} onSelect={this.handleSelectChat} />\n            }\n        }\n\n        const style = getMessageStyle(chatId, messageId);\n        const withBubble = content['@type'] !== 'messageSticker' && content['@type'] !== 'messageVideoNote';\n        const tailRounded = !hasCaption && (content['@type'] === 'messageAnimation' || content['@type'] === 'messageVideo' || content['@type'] === 'messagePhoto');\n\n        // console.log('[p] m.render id=' + message.id);\n\n        // return (\n        //     <StubMessage>\n        //         {text}\n        //         {media}\n        //         <WebPage\n        //             chatId={chatId}\n        //             messageId={messageId}\n        //             openMedia={this.openMedia}\n        //             meta={inlineMeta}\n        //         />\n        //     </StubMessage>\n        // );\n\n        return (\n            <div>\n                {showDate && <DayMeta date={date} />}\n                <div\n                    className={classNames('message', {\n                        'message-rounded': showTitle && showTail && tailRounded,\n                        'message-short': !tile,\n                        'message-out': isOutgoing,\n                        'message-selected': selected,\n                        'message-highlighted': highlighted && !selected,\n                        'message-group-title': showTitle && !showTail,\n                        'message-group': !showTitle && !showTail,\n                        'message-group-tail': !showTitle && showTail && !tailRounded,\n                        'message-group-tail-rounded': !showTitle && showTail && tailRounded,\n                        'message-bubble-hidden': !withBubble\n                    })}\n                    onMouseOver={this.handleMouseOver}\n                    onMouseOut={this.handleMouseOut}\n                    onMouseDown={this.handleMouseDown}\n                    onClick={this.handleSelection}\n                    onAnimationEnd={this.handleAnimationEnd}\n                    onContextMenu={this.handleOpenContextMenu}>\n                    {showUnreadSeparator && <UnreadSeparator />}\n                    <div className='message-body'>\n                        <div className='message-padding'>\n                            <CheckMarkIcon className='message-select-tick' />\n                        </div>\n                        <div className={classNames('message-wrapper', { 'shook': shook })}>\n                            {tile}\n                            <div\n                                className={classNames('message-content', {\n                                    'message-bubble': withBubble,\n                                    'message-bubble-out': withBubble && isOutgoing\n                                })}\n                                style={style}>\n                                {withBubble && ((showTitle && !suppressTitle) || showForward) && (\n                                    <div className='message-title'>\n                                        {showTitle && !showForward && (\n                                            <MessageAuthor chatId={chatId} openChat userId={sender_user_id} openUser />\n                                        )}\n                                        {showForward && <Forward forwardInfo={forward_info} />}\n                                    </div>\n                                )}\n                                {showReply && (\n                                    <Reply\n                                        chatId={chatId}\n                                        messageId={reply_to_message_id}\n                                        onClick={this.handleReplyClick}\n                                    />\n                                )}\n                                {media}\n                                <div\n                                    className={classNames('message-text', {\n                                        'message-text-1emoji': emojiMatches === 1,\n                                        'message-text-2emoji': emojiMatches === 2,\n                                        'message-text-3emoji': emojiMatches === 3\n                                    })}>\n                                    {text}\n                                </div>\n                                {webPage && (\n                                    <WebPage\n                                        chatId={chatId}\n                                        messageId={messageId}\n                                        openMedia={this.openMedia}\n                                        meta={inlineMeta}\n                                    />\n                                )}\n                                {withBubble && meta}\n                            </div>\n                            <div className='message-tile-padding' />\n                        </div>\n                        <div className='message-padding' />\n                    </div>\n                </div>\n                <MessageMenu\n                    chatId={chatId}\n                    messageId={messageId}\n                    anchorPosition={{ top, left }}\n                    open={contextMenu}\n                    onClose={this.handleCloseContextMenu}\n                    copyLink={copyLink}\n                />\n            </div>\n        );\n    }\n}\n\nMessage.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    sendingState: PropTypes.object,\n    showTitle: PropTypes.bool,\n    showTail: PropTypes.bool,\n    showUnreadSeparator: PropTypes.bool,\n    showDate: PropTypes.bool\n}\n\nMessage.defaultProps = {\n    sendingState: null,\n    showTitle: false,\n    showTail: false,\n    showUnreadSeparator: false,\n    showDate: false\n}\n\n// const enhance = compose(\n//     withSaveRef(),\n//     withTranslation(),\n//     withRestoreRef()\n// );\n\nconst message = withTranslation(['translation', 'local'], { withRef: true })(Message);\n\nexport default message;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withRestoreRef, withSaveRef, compose } from '../../Utils/HOC';\nimport { withTranslation } from 'react-i18next';\nimport classNames from 'classnames';\nimport DayMeta from './DayMeta';\nimport UnreadSeparator from './UnreadSeparator';\nimport Photo from './Media/Photo';\nimport { openMedia } from '../../Utils/Message';\nimport { getServiceMessageContent } from '../../Utils/ServiceMessage';\nimport MessageStore from '../../Stores/MessageStore';\nimport './ServiceMessage.css';\n\nconst chatPhotoStyle = {\n    width: 64,\n    height: 64,\n    borderRadius: '50%',\n    margin: '0 auto 5px'\n};\n\nclass ServiceMessage extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId, messageId } = this.props;\n        this.state = {\n            message: MessageStore.get(chatId, messageId),\n            highlighted: false\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId, sendingState, showUnreadSeparator } = this.props;\n        const { highlighted } = this.state;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.messageId !== messageId) {\n            return true;\n        }\n\n        if (nextProps.sendingState !== sendingState) {\n            return true;\n        }\n\n        if (nextProps.showUnreadSeparator !== showUnreadSeparator) {\n            return true;\n        }\n\n        if (nextState.highlighted !== highlighted) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        MessageStore.on('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\n    }\n\n    componentWillUnmount() {\n        MessageStore.off('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\n    }\n\n    onClientUpdateMessageHighlighted = update => {\n        const { chatId, messageId } = this.props;\n        const { selected, highlighted } = this.state;\n\n        if (selected) return;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            if (highlighted) {\n                this.setState({ highlighted: false }, () => {\n                    setTimeout(() => {\n                        this.setState({ highlighted: true });\n                    }, 0);\n                });\n            } else {\n                this.setState({ highlighted: true });\n            }\n        } else if (highlighted) {\n            this.setState({ highlighted: false });\n        }\n    };\n\n    handleAnimationEnd = () => {\n        this.setState({ highlighted: false });\n    };\n\n    openMedia = event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        const { chatId, messageId } = this.props;\n\n        openMedia(chatId, messageId);\n    };\n\n    render() {\n        const { chatId, messageId, showUnreadSeparator, showDate } = this.props;\n        const { highlighted } = this.state;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { content, date } = message;\n        if (!content) return null;\n\n        const { photo } = content;\n\n        const text = getServiceMessageContent(message, true);\n\n        return (\n            <div>\n                {showDate && <DayMeta date={date} />}\n                <div\n                    className={classNames('service-message', { 'message-highlighted': highlighted })}\n                    onAnimationEnd={this.handleAnimationEnd}>\n                    {showUnreadSeparator && <UnreadSeparator />}\n                    <div className='service-message-wrapper'>\n                        <div className='service-message-content'>\n                            <div>{text}</div>\n                        </div>\n                    </div>\n                    {photo && (\n                        <Photo\n                            chatId={chatId}\n                            messageId={messageId}\n                            photo={photo}\n                            displaySize={64}\n                            style={chatPhotoStyle}\n                            openMedia={this.openMedia}\n                        />\n                    )}\n                </div>\n            </div>\n        );\n    }\n}\n\nServiceMessage.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    showUnreadSeparator: PropTypes.bool\n}\n\nServiceMessage.defaultProps = {\n    showTitle: false,\n    showTail: false,\n    showUnreadSeparator: false\n}\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(ServiceMessage);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\n// import { ReactComponent as BubblesLogo } from '../../Assets/Bubbles.svg';\nimport AppStore from '../../Stores/ApplicationStore';\nimport './Placeholder.css';\n\nclass Placeholder extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId, dialogsReady, cacheLoaded } = AppStore;\n        this.state = {\n            chatId,\n            dialogsReady,\n            cacheLoaded\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        if (nextState.chatId !== this.state.chatId) {\n            return true;\n        }\n\n        if (nextState.dialogsReady !== this.state.dialogsReady) {\n            return true;\n        }\n\n        if (nextState.cacheLoaded !== this.state.cacheLoaded) {\n            return true;\n        }\n\n        if (nextProps.t !== this.props.t) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n        AppStore.on('clientUpdateDialogsReady', this.onClientUpdateDialogsReady);\n        AppStore.on('clientUpdateCacheLoaded', this.onClientUpdateCacheLoaded);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateChatId', this.onClientUpdateChatId);\n        AppStore.off('clientUpdateDialogsReady', this.onClientUpdateDialogsReady);\n        AppStore.off('clientUpdateCacheLoaded', this.onClientUpdateCacheLoaded);\n    }\n\n    onClientUpdateCacheLoaded = update => {\n        const { cacheLoaded } = AppStore;\n\n        this.setState({ cacheLoaded });\n    };\n\n    onClientUpdateChatId = update => {\n        const { nextChatId: chatId } = update;\n\n        this.setState({ chatId });\n    };\n\n    onClientUpdateDialogsReady = update => {\n        const { dialogsReady } = AppStore;\n\n        this.setState({ dialogsReady });\n    };\n\n    render() {\n        const { t, force } = this.props;\n        const { chatId, dialogsReady, cacheLoaded } = this.state;\n        if (chatId) return null;\n        // if (!dialogsReady && !cacheLoaded) return null;\n\n        return (\n            <div className='placeholder'>\n                <div className='placeholder-wrapper'>\n                    {/*<BubblesLogo className='placeholder-logo' />*/}\n                    <div className='placeholder-meta'>{t('SelectChatToStartMessaging')}</div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default withTranslation()(Placeholder);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\nimport IconButton from '@material-ui/core/IconButton';\nimport './ScrollDownButton.css';\n\nclass ScrollDownButton extends React.Component {\n    render() {\n        const { onClick } = this.props;\n\n        return (\n            <div className='scroll-down-button'>\n                <IconButton disableRipple={true} onMouseDown={onClick}>\n                    <ArrowDownwardIcon />\n                </IconButton>\n            </div>\n        );\n    }\n}\n\nScrollDownButton.propTypes = {\n    onClick: PropTypes.func.isRequired\n};\n\nexport default ScrollDownButton;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport Sticker, { StickerSourceEnum } from '../Message/Media/Sticker';\nimport StickerPreview from './StickerPreview';\nimport { loadStickerContent, loadStickersContent } from '../../Utils/File';\nimport { STICKER_HINT_DISPLAY_SIZE, STICKER_SMALL_DISPLAY_SIZE } from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport StickerStore from '../../Stores/StickerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './StickersHint.css';\n\nclass StickersHint extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.hintsRef = React.createRef();\n\n        this.state = {\n            hint: null,\n            items: [],\n            previewStickerId: 0,\n            showPreview: false,\n            cancelSend: false\n        };\n    }\n\n    componentDidMount() {\n        StickerStore.on('clientUpdateLocalStickersHint', this.onClientUpdateLocalStickersHint);\n        StickerStore.on('clientUpdateRemoteStickersHint', this.onClientUpdateRemoteStickersHint);\n    }\n\n    componentWillUnmount() {\n        StickerStore.off('clientUpdateLocalStickersHint', this.onClientUpdateLocalStickersHint);\n        StickerStore.off('clientUpdateRemoteStickersHint', this.onClientUpdateRemoteStickersHint);\n    }\n\n    onClientUpdateRemoteStickersHint = update => {\n        const { hint } = update;\n        const { hint: currentHint } = this.state;\n\n        if (currentHint && hint.timestamp !== currentHint.timestamp) return;\n\n        this.setState({\n            hint: StickerStore.hint,\n            items: this.getItems(StickerStore.hint)\n        });\n\n        const store = FileStore.getStore();\n        const { stickers } = hint;\n        loadStickersContent(store, stickers.stickers);\n    };\n\n    onClientUpdateLocalStickersHint = update => {\n        const { hint } = update;\n\n        this.setState({\n            hint,\n            items: this.getItems(hint),\n            previewStickerId: 0,\n            showPreview: false,\n            cancelSend: false\n        });\n\n        if (!hint) return;\n\n        const store = FileStore.getStore();\n        const { stickers } = hint;\n        loadStickersContent(store, stickers.stickers);\n    };\n\n    handleSend = sticker => {\n        const { cancelSend } = this.state;\n        if (cancelSend) return;\n        if (!sticker) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerSend',\n            sticker\n        });\n    };\n\n    loadPreviewContent = stickerId => {\n        const { items } = this.state;\n\n        const sticker = items.find(x => x.sticker.id === stickerId);\n        if (!sticker) return;\n\n        const store = FileStore.getStore();\n        loadStickerContent(store, sticker, null);\n\n        let stickersPerRow = 8;\n        if (this.hintsRef && this.hintsRef.current) {\n            stickersPerRow = Math.floor(this.hintsRef.current.clientWidth / STICKER_HINT_DISPLAY_SIZE);\n        }\n\n        const preloadStickers = this.getNeighborStickers(stickerId, items, stickersPerRow);\n        preloadStickers.forEach(x => {\n            loadStickerContent(store, x, null);\n        });\n    };\n\n    getNeighborStickers = (stickerId, stickers, stickersPerRow) => {\n        if (!stickers) return [];\n\n        const indexes = [];\n        const index = stickers.findIndex(x => x.sticker.id === stickerId);\n        if (index === -1) return [];\n\n        const row = Math.floor(index / stickersPerRow);\n        const column = index % stickersPerRow;\n\n        const prevRow = row - 1;\n        const nextRow = row + 1;\n        const prevColumn = column - 1;\n        const nextColumn = column + 1;\n\n        if (prevRow >= 0) {\n            if (prevColumn >= 0) {\n                indexes.push(stickersPerRow * prevRow + prevColumn);\n            }\n            indexes.push(stickersPerRow * prevRow + column);\n            if (nextColumn < stickersPerRow) {\n                indexes.push(stickersPerRow * prevRow + nextColumn);\n            }\n        }\n\n        if (prevColumn >= 0) {\n            indexes.push(stickersPerRow * row + prevColumn);\n        }\n        if (nextColumn < stickersPerRow) {\n            indexes.push(stickersPerRow * row + nextColumn);\n        }\n\n        if (nextRow < Math.ceil(stickers.length / stickersPerRow)) {\n            if (prevColumn >= 0) {\n                indexes.push(stickersPerRow * nextRow + prevColumn);\n            }\n            indexes.push(stickersPerRow * nextRow + column);\n            if (nextColumn < stickersPerRow) {\n                indexes.push(stickersPerRow * nextRow + nextColumn);\n            }\n        }\n\n        return indexes.map(i => stickers[i]);\n    };\n\n    handleMouseEnter = event => {\n        const stickerId = Number(event.currentTarget.dataset.stickerId);\n        const sticker = this.getSticker(stickerId);\n        if (!sticker) return;\n\n        if (!this.mouseDown) return;\n\n        if (this.mouseDownStickerId !== stickerId) {\n            this.mouseDownStickerId = null;\n        }\n        this.setState({ sticker });\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerPreview',\n            sticker\n        });\n        this.loadPreviewContent(stickerId);\n    };\n\n    handleMouseDown = event => {\n        const stickerId = Number(event.currentTarget.dataset.stickerId);\n        const sticker = this.getSticker(stickerId);\n        if (!sticker) return;\n\n        this.mouseDownStickerId = stickerId;\n        const now = Date.now();\n\n        this.setState({ sticker, timestamp: now, showPreview: false, cancelSend: false });\n        setTimeout(() => {\n            const { timestamp } = this.state;\n            if (timestamp === now) {\n                this.setState({ showPreview: true, cancelSend: true });\n                TdLibController.clientUpdate({\n                    '@type': 'clientUpdateStickerPreview',\n                    sticker\n                });\n            }\n        }, 500);\n\n        this.loadPreviewContent(stickerId);\n\n        this.mouseDown = true;\n        document.addEventListener('mouseup', this.handleMouseUp);\n\n        event.preventDefault();\n        event.stopPropagation();\n        return false;\n    };\n\n    handleMouseUp = () => {\n        const sticker = null;\n        this.setState({ sticker, timestamp: 0, showPreview: false });\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerPreview',\n            sticker\n        });\n        this.mouseDown = false;\n        document.removeEventListener('mouseup', this.handleMouseUp);\n    };\n\n    getItems = hint => {\n        const items = [];\n        if (!hint) return items;\n\n        const dict = new Map();\n        const { stickers, foundStickers } = hint;\n        if (stickers) {\n            stickers.stickers.forEach(x => {\n                items.push(x);\n                dict.set(x.sticker.id, x.sticker.id);\n            });\n        }\n        if (foundStickers) {\n            foundStickers.stickers.forEach(x => {\n                if (!dict.has(x.sticker.id)) {\n                    items.push(x);\n                    dict.set(x.sticker.id, x.sticker.id);\n                }\n            });\n        }\n\n        return items;\n    };\n\n    getSticker(stickerId) {\n        const { items } = this.state;\n\n        const stickerIndex = items.findIndex(x => x.sticker.id === stickerId);\n        return stickerIndex !== -1 ? items[stickerIndex] : null;\n    }\n\n    render() {\n        const { hint, items, sticker, showPreview } = this.state;\n        if (!hint) return null;\n        if (!items) return null;\n        if (!items.length) return null;\n\n        const controls = items.map(x => (\n            <div\n                className='sticker-set-dialog-item'\n                key={x.sticker.id}\n                data-sticker-id={x.sticker.id}\n                style={{ width: STICKER_HINT_DISPLAY_SIZE, height: STICKER_HINT_DISPLAY_SIZE }}\n                onClick={() => this.handleSend(x)}\n                onMouseEnter={this.handleMouseEnter}\n                onMouseDown={this.handleMouseDown}>\n                <Sticker\n                    key={x.sticker.id}\n                    className='sticker-set-dialog-item-sticker'\n                    sticker={x}\n                    autoplay={false}\n                    blur={false}\n                    displaySize={STICKER_SMALL_DISPLAY_SIZE}\n                    preview\n                    source={StickerSourceEnum.HINTS}\n                />\n            </div>\n        ));\n\n        return (\n            <div ref={this.hintsRef} className='stickers-hint scrollbars-hidden'>\n                {controls}\n                {Boolean(sticker) && showPreview && <StickerPreview sticker={sticker} />}\n            </div>\n        );\n    }\n}\n\nexport default StickersHint;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport CheckMarkIcon from '@material-ui/icons/Check';\nimport AlbumItem from './AlbumItem';\nimport DayMeta from '../DayMeta';\nimport Forward from '../Forward';\nimport GroupedMessages from './GroupedMessages';\nimport UnreadSeparator from '../UnreadSeparator';\nimport MessageAuthor from '../MessageAuthor';\nimport Reply from '../Reply';\nimport Meta from '../Meta';\nimport ChatTile from '../../Tile/ChatTile';\nimport EmptyTile from '../../Tile/EmptyTile';\nimport UserTile from '../../Tile/UserTile';\nimport { getMedia } from '../../../Utils/Media';\nimport { albumHistoryEquals } from '../../../Utils/Common';\nimport { selectMessage } from '../../../Actions/Client';\nimport { getText, getWebPage, showMessageForward } from '../../../Utils/Message';\nimport { isChannelChat, isPrivateChat } from '../../../Utils/Chat';\nimport { PHOTO_DISPLAY_SIZE } from '../../../Constants';\nimport MessageStore from '../../../Stores/MessageStore';\nimport './DocumentAlbum.css';\n\nclass DocumentAlbum extends React.Component {\n    state = { };\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { messageIds, emojiMatches, selected } = this.props;\n\n        if (!albumHistoryEquals(nextProps.messageIds, messageIds)) {\n            return true;\n        }\n\n        if (nextState.emojiMatches !== emojiMatches) {\n            return true;\n        }\n\n        if (nextState.selected !== selected) {\n            return true;\n        }\n\n        return false;\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { displaySize, chatId, messageIds } = props;\n\n        if (messageIds !== state.prevMessageIds) {\n\n            return {\n                prevMessageIds: messageIds\n            }\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        MessageStore.on('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\n        MessageStore.on('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n        // MessageStore.on('clientUpdateMessageShake', this.onClientUpdateMessageShake);\n        MessageStore.on('clientUpdateClearSelection', this.onClientUpdateClearSelection);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    componentWillUnmount() {\n        MessageStore.off('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\n        MessageStore.off('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n        // MessageStore.off('clientUpdateMessageShake', this.onClientUpdateMessageShake);\n        MessageStore.off('clientUpdateClearSelection', this.onClientUpdateClearSelection);\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    onClientUpdateMessageHighlighted = update => {\n        const { chatId, messageIds } = this.props;\n        const { selected, highlighted } = this.state;\n\n        if (selected) return;\n\n        if (chatId === update.chatId && messageIds.some(x => x === update.messageId)) {\n            if (highlighted) {\n                this.setState({ highlighted: false }, () => {\n                    setTimeout(() => {\n                        this.setState({ highlighted: true });\n                    }, 0);\n                });\n            } else {\n                this.setState({ highlighted: true });\n            }\n        } else if (highlighted) {\n            this.setState({ highlighted: false });\n        }\n    };\n\n    onClientUpdateMessageSelected = update => {\n        const { chatId, messageIds } = this.props;\n        const { selected } = update;\n\n        if (chatId === update.chatId && messageIds.some(x => x === update.messageId)) {\n            this.setState({\n                selected: messageIds.every(x => MessageStore.hasSelectedMessage(chatId, x)),\n                lastSelected: messageIds.length > 0 && MessageStore.hasSelectedMessage(chatId, messageIds[messageIds.length - 1])\n            });\n        }\n    };\n\n    onClientUpdateClearSelection = update => {\n        if (!this.state.selected) return;\n\n        this.setState({ selected: false });\n    };\n\n    onUpdateMessageContent = update => {\n        const { chat_id, message_id } = update;\n        const { chatId, messageIds, displaySize } = this.props;\n        const { emojiMatches: oldEmojiMatches } = this.state;\n\n        if (chatId !== chat_id) return;\n        if (!messageIds.some(x => x === message_id)) return;\n\n        const emojiMatches = null; //getEmojiMatches(chatId, messageId);\n        if (emojiMatches !== oldEmojiMatches) {\n            this.setState({ emojiMatches });\n        } else {\n            this.forceUpdate();\n        }\n    };\n\n    handleSelection = () => {\n        // if (!this.mouseDown) return;\n\n        const selection = window.getSelection().toString();\n        if (selection) return;\n\n        const { chatId, messageIds } = this.props;\n        const { selected } = this.state;\n\n        if (selected) {\n            for (let i = 0; i < messageIds.length; i++) {\n                selectMessage(chatId, messageIds[i], false);\n            }\n        } else {\n            for (let i = 0; i < messageIds.length; i++) {\n                selectMessage(chatId, messageIds[i], true);\n            }\n        }\n    };\n\n    render() {\n        let { showTail } = this.props;\n        const { chatId, messageIds, displaySize, showUnreadSeparator, showTitle, showDate, t = x => x } = this.props;\n        const {\n            emojiMatches,\n            selected,\n            lastSelected,\n            highlighted,\n            shook,\n            copyLink,\n            contextMenu,\n            left,\n            top\n        } = this.state;\n\n        if (!messageIds.length) {\n            return null;\n        }\n\n        let messageId = messageIds[messageIds.length - 1];\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return <div>[empty message]</div>;\n\n        const { content, is_outgoing, views, date, edit_date, reply_to_message_id, forward_info, sender_user_id } = message;\n\n        const isOutgoing = is_outgoing && !isChannelChat(chatId);\n\n        const inlineMeta = (\n            <Meta\n                className='meta-hidden'\n                key={`${chatId}_${messageId}_meta`}\n                chatId={chatId}\n                messageId={messageId}\n                date={date}\n                editDate={edit_date}\n                views={views}\n            />\n        );\n        const webPage = getWebPage(message);\n        let text = null;\n        for (let i = 0; i < messageIds.length; i++) {\n            const m = MessageStore.get(chatId, messageIds[i]);\n            const t = getText(m, !!webPage ? null : inlineMeta, t);\n            if (t && t.length) {\n                if (text !== null) {\n                    text = null;\n                    break;\n                } else {\n                    text = t;\n                    messageId = messageIds[i];\n                }\n            }\n        }\n        const hasCaption = text !== null && text.length > 0;\n        const meta = (\n            <Meta\n                className={classNames('meta-text', {\n                    'meta-bubble': false\n                })}\n                chatId={chatId}\n                messageId={messageId}\n                date={date}\n                editDate={edit_date}\n                views={views}\n                onDateClick={this.handleDateClick}\n            />\n        );\n\n        const showForward = showMessageForward(chatId, messageId);\n        const showReply = Boolean(reply_to_message_id);\n        const suppressTitle = isPrivateChat(chatId);\n        const hasTitle = (!suppressTitle && showTitle) || showForward || showReply;\n        // const media = getMedia(message, this.openMedia, { hasTitle, hasCaption, inlineMeta, meta });\n        const isChannel = isChannelChat(chatId);\n        const isPrivate = isPrivateChat(chatId);\n\n        // if (showTail && isMediaContent() && !hasCaption) {\n        //     showTail = false;\n        // }\n\n        let tile = null;\n        if (showTail) {\n            if (isPrivate) {\n                tile = <EmptyTile small />\n            } else if (isChannel) {\n                tile = <EmptyTile small />\n            } else if (is_outgoing) {\n                tile = <EmptyTile small />\n            } else if (sender_user_id) {\n                tile = <UserTile small userId={sender_user_id} onSelect={this.handleSelectUser} />\n            } else {\n                tile = <ChatTile small chatId={chatId} onSelect={this.handleSelectChat} />\n            }\n        }\n\n        const style = {  };\n        const withBubble = content['@type'] !== 'messageSticker' && content['@type'] !== 'messageVideoNote';\n        const tailRounded = !hasCaption && (content['@type'] === 'messageAnimation' || content['@type'] === 'messageVideo' || content['@type'] === 'messagePhoto');\n\n        const items = messageIds.map(x => MessageStore.get(chatId, x)).map(m => (\n            <AlbumItem\n                key={m.id}\n                message={m}\n                position={null}\n                displaySize={displaySize}\n            />));\n\n        return (\n            <div>\n                {showDate && <DayMeta date={date} />}\n                <div\n                    className={classNames('message', 'message-album', {\n                        'message-rounded': showTitle && showTail && tailRounded,\n                        'message-short': !tile,\n                        'message-out': isOutgoing,\n                        'message-selected': selected,\n                        'message-album-last-selected': lastSelected,\n                        'message-highlighted': highlighted && !selected,\n                        'message-group-title': showTitle && !showTail,\n                        'message-group': !showTitle && !showTail,\n                        'message-group-tail': !showTitle && showTail && !tailRounded,\n                        'message-group-tail-rounded': !showTitle && showTail && tailRounded,\n                        'message-bubble-hidden': !withBubble\n                    })}\n                    onMouseOver={this.handleMouseOver}\n                    onMouseOut={this.handleMouseOut}\n                    onMouseDown={this.handleMouseDown}\n                    onClick={this.handleSelection}\n                    onAnimationEnd={this.handleAnimationEnd}\n                    onContextMenu={this.handleOpenContextMenu}>\n                    {showUnreadSeparator && <UnreadSeparator />}\n                    <div className='message-body'>\n                        <div className='message-padding'>\n                            <CheckMarkIcon className='message-select-tick' />\n                        </div>\n                        <div className={classNames('message-wrapper', { 'shook': shook })}>\n                            {tile}\n                            <div\n                                className={classNames(\n                                    'message-content', {\n                                        'message-bubble': withBubble,\n                                        'message-bubble-out': withBubble && isOutgoing\n                                    })}\n                                style={style}>\n                                {withBubble && ((showTitle && !suppressTitle) || showForward) && (\n                                    <div className='message-title'>\n                                        {showTitle && !showForward && (\n                                            <MessageAuthor chatId={chatId} openChat userId={sender_user_id} openUser />\n                                        )}\n                                        {showForward && <Forward forwardInfo={forward_info} />}\n                                    </div>\n                                )}\n                                {showReply && (\n                                    <Reply\n                                        chatId={chatId}\n                                        messageId={reply_to_message_id}\n                                        onClick={this.handleReplyClick}\n                                    />\n                                )}\n                                <div className={classNames(\n                                    'album',\n                                    'document-album',\n                                    { 'album-caption': false },\n                                    { 'album-title': hasTitle }\n                                )}>\n                                    <div className='album-wrapper'>\n                                        {items}\n                                    </div>\n                                </div>\n                                {/*<div*/}\n                                {/*    className={classNames('message-text', {*/}\n                                {/*        'message-text-1emoji': emojiMatches === 1,*/}\n                                {/*        'message-text-2emoji': emojiMatches === 2,*/}\n                                {/*        'message-text-3emoji': emojiMatches === 3*/}\n                                {/*    })}>*/}\n                                {/*    {text}*/}\n                                {/*</div>*/}\n                                {withBubble && meta}\n                            </div>\n                            <div className='message-tile-padding' />\n                        </div>\n                        <div className='message-padding' />\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nDocumentAlbum.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageIds: PropTypes.arrayOf(PropTypes.number).isRequired,\n    displaySize: PropTypes.number,\n    showTitle: PropTypes.bool,\n    showTail: PropTypes.bool,\n    showUnreadSeparator: PropTypes.bool,\n    showDate: PropTypes.bool\n};\n\nDocumentAlbum.defaultProps = {\n    displaySize: PHOTO_DISPLAY_SIZE,\n    showTitle: false,\n    showTail: false,\n    showUnreadSeparator: false,\n    showData: false\n};\n\nexport default DocumentAlbum;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport classNames from 'classnames';\nimport ActionBar from './ActionBar';\nimport Album from '../Message/Album/Album';\nimport FilesDropTarget from './FilesDropTarget';\nimport StubMessage from '../Message/StubMessage';\nimport Message from '../Message/Message';\nimport ServiceMessage from '../Message/ServiceMessage';\nimport Placeholder from './Placeholder';\nimport ScrollDownButton from './ScrollDownButton';\nimport StickersHint from './StickersHint';\nimport { throttle, getPhotoSize, itemsInView, historyEquals, getScrollMessage } from '../../Utils/Common';\nimport { loadChatsContent, loadDraftContent, loadMessageContents } from '../../Utils/File';\nimport { canMessageBeEdited, filterDuplicateMessages, filterMessages } from '../../Utils/Message';\nimport { isServiceMessage } from '../../Utils/ServiceMessage';\nimport { canSendMediaMessages, getChatFullInfo, getChatMedia, getSupergroupId, isChannelChat } from '../../Utils/Chat';\nimport { editMessage, highlightMessage, openChat } from '../../Actions/Client';\nimport { ALBUM_MESSAGES_LIMIT, MESSAGE_SLICE_LIMIT, MESSAGE_SPLIT_MAX_TIME_S, SCROLL_PRECISION } from '../../Constants';\nimport AppStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport UserStore from '../../Stores/UserStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MessagesList.css';\nimport DocumentAlbum from '../Message/Album/DocumentAlbum';\n\nconst ScrollBehaviorEnum = Object.freeze({\n    SCROLL_TO_BOTTOM: 'SCROLL_TO_BOTTOM',\n    SCROLL_TO_UNREAD: 'SCROLL_TO_UNREAD',\n    SCROLL_TO_MESSAGE: 'SCROLL_TO_MESSAGE',\n    SCROLL_TO_POSITION: 'SCROLL_TO_POSITION',\n    KEEP_SCROLL_POSITION: 'KEEP_SCROLL_POSITION',\n    NONE: 'NONE'\n});\n\nclass MessagesList extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.sessionId = Date.now();\n        this.state = {\n            prevChatId: 0,\n            prevMessageId: null,\n            playerOpened: false,\n            history: [],\n            clearHistory: false,\n            selectionActive: false,\n            separatorMessageId: 0,\n            scrollDownVisible: false,\n            replyHistory: []\n        };\n\n        this.listRef = React.createRef();\n        this.itemsRef = React.createRef();\n        this.scrollDownButtonRef = React.createRef();\n\n        this.defferedActions = [];\n        this.itemsMap = new Map();\n\n        this.updateItemsInView = throttle(this.updateItemsInView, 500);\n    }\n\n    hasLastMessage() {\n        const { chatId } = this.props;\n        const { history } = this.state;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return false;\n\n        const { last_message } = chat;\n        if (!last_message) return true;\n\n        return history.length > 0 && history[history.length - 1].id === last_message.id;\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.chatId !== state.prevChatId || props.messageId !== state.prevMessageId) {\n            return {\n                prevChatId: props.chatId,\n                prevMessageId: props.messageId,\n                clearHistory: false,\n                selectionActive: false,\n                separatorMessageId: props.chatId !== state.prevChatId ? 0 : state.separatorMessageId,\n                scrollDownVisible:\n                    props.chatId === state.prevChatId && (state.scrollDownVisible || state.replyHistory.length > 0),\n                replyHistory: props.chatId !== state.prevChatId ? [] : state.replyHistory\n            };\n        }\n\n        return null;\n    }\n\n    getSnapshotBeforeUpdate(prevProps, prevState) {\n        const list = this.listRef.current;\n        const { scrollTop, scrollHeight, offsetHeight } = list;\n\n        const snapshot = {\n            scrollTop,\n            scrollHeight,\n            offsetHeight\n        };\n\n        this.snapshot = snapshot;\n        return snapshot;\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { chatId, messageId } = this.props;\n        const { scrollDownVisible } = this.state;\n\n        const list = this.listRef.current;\n\n        // console.log(\n        //     `[ml] componentDidUpdate\n        //     scrollBehaviorNone=${this.scrollBehaviorNone}\n        //     scrollDownVisible=${scrollDownVisible}\n        //     list.scrollTop=${list.scrollTop}\n        //     list.scrollHeight=${list.scrollHeight}\n        //     list.offsetHeight=${list.offsetHeight}`\n        // );\n\n        if (prevProps.chatId !== chatId || prevProps.messageId !== messageId) {\n            this.handleSelectChat(chatId, prevProps.chatId, messageId, prevProps.messageId);\n        }\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId, theme } = this.props;\n        const { playerOpened, history, dragging, clearHistory, selectionActive, scrollDownVisible } = this.state;\n\n        if (nextProps.theme !== theme) {\n            // console.log('[ml] shouldComponentUpdate theme');\n            return true;\n        }\n\n        if (nextProps.chatId !== chatId) {\n            // console.log('[ml] shouldComponentUpdate chatId');\n            return true;\n        }\n\n        if (nextProps.messageId !== messageId) {\n            // console.log('[ml] shouldComponentUpdate messageId');\n            return true;\n        }\n\n        if (nextState.scrollDownVisible !== scrollDownVisible) {\n            // console.log('[ml] shouldComponentUpdate scrollDownVisible');\n            return true;\n        }\n\n        if (nextState.playerOpened !== playerOpened) {\n            // console.log('[ml] shouldComponentUpdate playerOpened');\n            return true;\n        }\n\n        if (!historyEquals(nextState.history, history)) {\n            // console.trace('[ml] shouldComponentUpdate history', nextState.history, history);\n            return true;\n        }\n\n        if (nextState.dragging !== dragging) {\n            // console.log('[ml] shouldComponentUpdate dragging');\n            return true;\n        }\n\n        if (nextState.clearHistory !== clearHistory) {\n            // console.log('[ml] shouldComponentUpdate clearHistory');\n            return true;\n        }\n\n        if (nextState.selectionActive !== selectionActive) {\n            // console.log('[ml] shouldComponentUpdate selectionActive');\n            return true;\n        }\n\n        // console.log('[ml] shouldComponentUpdate false');\n        return false;\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateFocusWindow', this.onClientUpdateFocusWindow);\n        AppStore.on('clientUpdateDialogsReady', this.onClientUpdateDialogsReady);\n        ChatStore.on('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        MessageStore.on('clientUpdateClearSelection', this.onClientUpdateSelection);\n        MessageStore.on('clientUpdateMessageSelected', this.onClientUpdateSelection);\n        MessageStore.on('clientUpdateOpenReply', this.onClientUpdateOpenReply);\n        MessageStore.on('clientUpdateTryEditMessage', this.onClientUpdateTryEditMessage);\n        MessageStore.on('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.on('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.on('updateMessageSendSucceeded', this.onUpdateMessageSendSucceeded);\n        PlayerStore.on('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.on('clientUpdateMediaEnding', this.onClientUpdateMediaEnding);\n        PlayerStore.on('clientUpdateMediaEnd', this.onClientUpdateMediaEnd);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateFocusWindow', this.onClientUpdateFocusWindow);\n        AppStore.off('clientUpdateDialogsReady', this.onClientUpdateDialogsReady);\n        ChatStore.off('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        MessageStore.off('clientUpdateClearSelection', this.onClientUpdateSelection);\n        MessageStore.off('clientUpdateMessageSelected', this.onClientUpdateSelection);\n        MessageStore.off('clientUpdateOpenReply', this.onClientUpdateOpenReply);\n        MessageStore.off('clientUpdateTryEditMessage', this.onClientUpdateTryEditMessage);\n        MessageStore.off('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.off('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.off('updateMessageSendSucceeded', this.onUpdateMessageSendSucceeded);\n        PlayerStore.off('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.off('clientUpdateMediaEnding', this.onClientUpdateMediaEnding);\n        PlayerStore.off('clientUpdateMediaEnd', this.onClientUpdateMediaEnd);\n    }\n\n    onKeyDown = event => {\n        // if (event.keyCode === 27) {\n        //     if (MessageStore.selectedItems.size > 0) {\n        //         console.log('[k] messagesList onKeyDown');\n        //         clearSelection();\n        //         event.stopPropagation();\n        //         event.preventDefault();\n        //     }\n        // }\n    };\n\n    onClientUpdateTryEditMessage = async update => {\n        if (this.hasLastMessage()) {\n            const { history } = this.state;\n\n            for (let i = history.length - 1; i >= 0; i--) {\n                const message = history[i];\n                if (canMessageBeEdited(message.chat_id, message.id)) {\n                    editMessage(message.chat_id, message.id);\n\n                    return;\n                }\n            }\n        }\n\n        const result = await TdLibController.send({\n            '@type': 'searchChatMessages',\n            chat_id: this.props.chatId,\n            query: '',\n            sender_user_id: UserStore.getMyId(),\n            from_message_id: 0,\n            offset: 0,\n            limit: 100,\n            filter: { '@type': 'searchMessagesFilterEmpty' }\n        });\n\n        for (let i = 0; i < result.messages.length; i++) {\n            const message = result.messages[i];\n            if (canMessageBeEdited(message.chat_id, message.id)) {\n                editMessage(message.chat_id, message.id);\n\n                return;\n            }\n        }\n    };\n\n    onClientUpdateDialogsReady = async update => {\n        const { list } = update;\n        if (!list) return;\n        if (list['@type'] !== 'chatListMain') return;\n\n        const { history } = this.state;\n        if (history && history.length > 0) return;\n\n        await FileStore.initDB(async () => {\n            const { chatId, messageId } = this.props;\n            if (chatId) {\n                const chat = ChatStore.get(chatId);\n                if (chat) {\n                    const { type } = chat;\n                    switch (type['@type']) {\n                        case 'chatTypePrivate':\n                        case 'chatTypeSecret': {\n                            await TdLibController.send({\n                                '@type': 'createPrivateChat',\n                                user_id: type.user_id,\n                                force: false\n                            });\n                            break;\n                        }\n                        case 'chatTypeBasicGroup': {\n                            await TdLibController.send({\n                                '@type': 'createBasicGroupChat',\n                                basic_group_id: type.basic_group_id,\n                                force: false\n                            });\n                            break;\n                        }\n                        case 'chatTypeSupergroup': {\n                            await TdLibController.send({\n                                '@type': 'createSupergroupChat',\n                                supergroup_id: type.supergroup_id,\n                                force: false\n                            });\n                            break;\n                        }\n                    }\n                    this.handleSelectChat(chatId, 0, messageId, 0);\n                }\n            }\n        });\n    };\n\n    onClientUpdateFocusWindow = update => {\n        const { focused } = update;\n        if (focused) {\n            this.defferedActions.forEach(x => x());\n            this.defferedActions = [];\n        }\n    };\n\n    onClientUpdateOpenReply = update => {\n        const { chatId, messageId } = update;\n        const { replyHistory } = this.state;\n\n        if (this.props.chatId !== chatId) {\n            return;\n        }\n\n        const lastItem = replyHistory.length > 0 ? replyHistory[replyHistory.length - 1] : null;\n        if (lastItem && lastItem.chatId === chatId && lastItem.messageId === messageId) {\n            return;\n        }\n\n        replyHistory.push({ chatId, messageId });\n    };\n\n    onClientUpdateMediaActive = update => {\n        const list = this.listRef.current;\n\n        const prevOffsetHeight = list.offsetHeight;\n        const prevScrollTop = list.scrollTop;\n        this.setState({ playerOpened: true }, () => {\n            if (list.scrollTop === prevScrollTop) {\n                list.scrollTop += Math.abs(prevOffsetHeight - list.offsetHeight);\n            }\n        });\n    };\n\n    onClientUpdateMediaEnding = udpate => {\n        const list = this.listRef.current;\n\n        this.prevOffsetHeight = list.offsetHeight;\n        this.prevScrollTop = list.scrollTop;\n    };\n\n    onClientUpdateMediaEnd = udpate => {\n        const list = this.listRef.current;\n\n        //const prevOffsetHeight = list.offsetHeight;\n        //const prevScrollTop = list.scrollTop;\n\n        this.setState({ playerOpened: false }, () => {\n            if (list.scrollTop === this.prevScrollTop) {\n                list.scrollTop -= Math.abs(this.prevOffsetHeight - list.offsetHeight);\n            }\n        });\n    };\n\n    onClientUpdateSelection = update => {\n        this.setState({\n            selectionActive: MessageStore.selectedItems.size > 0\n        });\n    };\n\n    onClientUpdateClearHistory = update => {\n        const { chatId } = this.props;\n\n        if (chatId === update.chatId) {\n            this.setState({ clearHistory: update.inProgress });\n        }\n    };\n\n    onUpdateMessageContent = update => {\n        const { chatId } = this.props;\n        const { history } = this.state;\n        const { chat_id, message_id } = update;\n\n        if (chatId !== chat_id) return;\n\n        if (history.findIndex(x => x.id === message_id) !== -1) {\n            const message = MessageStore.get(chat_id, message_id);\n            if (!message) return;\n\n            const store = FileStore.getStore();\n            loadMessageContents(store, [message]);\n        }\n    };\n\n    onUpdateMessageSendSucceeded = update => {\n        if (!this.hasLastMessage()) return;\n\n        const { message, old_message_id } = update;\n        const { chatId } = this.props;\n        if (chatId !== message.chat_id) return;\n\n        // let handleSendSucceeded = false;\n        // const { content } = message;\n        // switch (content['@type']) {\n        //     case 'messagePoll': {\n        //         handleSendSucceeded = true;\n        //         break;\n        //     }\n        // }\n        //\n        // if (!handleSendSucceeded) return;\n\n        const scrollBehavior = message.is_outgoing\n            ? ScrollBehaviorEnum.SCROLL_TO_BOTTOM\n            : ScrollBehaviorEnum.KEEP_SCROLL_POSITION;\n\n        this.replaceMessage(old_message_id, message, () => {\n            if (scrollBehavior !== ScrollBehaviorEnum.KEEP_SCROLL_POSITION) {\n                this.handleScrollBehavior(scrollBehavior, this.snapshot);\n            }\n\n            this.updateItemsInView();\n        });\n\n        const store = FileStore.getStore();\n        loadMessageContents(store, [message]);\n        this.viewMessages([message]);\n    };\n\n    onUpdateNewMessage = update => {\n        if (!this.hasLastMessage()) return;\n\n        const { message } = update;\n        const { chatId } = this.props;\n        if (chatId !== message.chat_id) return;\n\n        const { date } = message;\n        if (date === 0) return;\n\n        const list = this.listRef.current;\n\n        let scrollBehavior = message.is_outgoing ? ScrollBehaviorEnum.SCROLL_TO_BOTTOM : ScrollBehaviorEnum.NONE;\n        if (list.scrollTop + list.offsetHeight >= list.scrollHeight) {\n            scrollBehavior = ScrollBehaviorEnum.SCROLL_TO_BOTTOM;\n        }\n\n        const newState = message.is_outgoing ? { scrollDownVisible: false } : {};\n\n        const history = [message];\n        this.scrollBehaviorNone = true;\n        this.insertPrevious(filterMessages(history), newState, () => {\n            this.scrollBehaviorNone = false;\n            this.handleScrollBehavior(scrollBehavior, this.snapshot);\n        });\n\n        const store = FileStore.getStore();\n        loadMessageContents(store, history);\n        this.viewMessages(history);\n    };\n\n    onUpdateDeleteMessages = update => {\n        const { chatId } = this.props;\n        const { chat_id, is_permanent, message_ids } = update;\n        if (chatId !== chat_id) return;\n\n        if (!is_permanent) return;\n\n        this.deleteHistory(message_ids);\n    };\n\n    updateItemsInView = () => {\n        if (!this.messages) return;\n\n        const messages = new Map();\n        const items = itemsInView(this.listRef, this.itemsRef);\n        for (let i = 0; i < items.length; i++) {\n            const messageWrapper = this.messages[items[i]];\n            if (messageWrapper) {\n                const message = messageWrapper;\n                const { chatId, messageId } = message.props;\n                const key = `${chatId}_${messageId}`;\n                messages.set(key, key);\n            }\n        }\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMessagesInView',\n            messages\n        });\n        return;\n\n        if (!messages.length) return;\n\n        /*let ids = messages.map(x => x.id);\n        console.log('[perf] load_messages_contents ids=[' + ids + ']');\n\n                let messagesMap = new Map(messages.map((i) => [i.id, i]));\n\n                if (this.previousMessages){\n                    let cancelMessages = [];\n                    for (let i = 0; i < this.previousMessages.length; i++){\n                        if (!messagesMap.has(this.previousMessages[i].id)){\n                            cancelMessages.push(this.previousMessages[i]);\n                        }\n                    }\n                    if (cancelMessages.length > 0) {\n                        this.cancelLoadMessageContents(cancelMessages);\n                    }\n                }\n                this.previousMessages = messages;*/\n\n        const store = FileStore.getStore();\n        loadMessageContents(store, messages);\n    };\n\n    async handleSelectChat(chatId, previousChatId, messageId, previousMessageId) {\n        const chat = ChatStore.get(chatId);\n        const previousChat = ChatStore.get(previousChatId);\n\n        //console.log('MessagesList.newSessionId handleSelectChat');\n        this.sessionId = Date.now();\n        this.loading = false;\n        this.loadMigratedHistory = false;\n        this.defferedActions = [];\n\n        const scrollPosition = null; //ChatStore.getScrollPosition(chatId);\n\n        if (chat) {\n            TdLibController.send({\n                '@type': 'openChat',\n                chat_id: chat.id\n            });\n\n            const unread = !messageId && chat.unread_count > 1;\n            let fromMessageId = 0;\n            if (unread && chat.last_read_inbox_message_id) {\n                fromMessageId = chat.last_read_inbox_message_id;\n            } else if (messageId) {\n                fromMessageId = messageId;\n            } else if (scrollPosition) {\n                fromMessageId = scrollPosition.messageId;\n            }\n            const offset = unread || messageId || scrollPosition ? -1 - MESSAGE_SLICE_LIMIT : 0;\n            const limit = unread || messageId || scrollPosition ? 2 * MESSAGE_SLICE_LIMIT : MESSAGE_SLICE_LIMIT;\n\n            this.loading = true;\n            const sessionId = this.sessionId;\n            const result = await TdLibController.send({\n                '@type': 'getChatHistory',\n                chat_id: chat.id,\n                from_message_id: fromMessageId,\n                offset,\n                limit\n            }).catch(error => {\n                return {\n                    '@type': 'messages',\n                    messages: [],\n                    total_count: 0\n                };\n            }).finally(() => {\n                this.loading = false;\n            });\n\n            if (sessionId !== this.sessionId) {\n                return;\n            }\n\n            MessageStore.setItems(result.messages);\n            result.messages.reverse();\n\n            let separatorMessageId = this.state.separatorMessageId;\n            if (chatId !== previousChatId) {\n                separatorMessageId = Number.MAX_VALUE;\n                if (chat && chat.unread_count > 1) {\n                    for (let i = result.messages.length - 1; i >= 0; i--) {\n                        const { id } = result.messages[i];\n                        if (\n                            !result.messages[i].is_outgoing &&\n                            id > chat.last_read_inbox_message_id &&\n                            id < separatorMessageId\n                        ) {\n                            separatorMessageId = id;\n                        } else {\n                            break;\n                        }\n                    }\n                }\n                separatorMessageId = separatorMessageId === Number.MAX_VALUE ? 0 : separatorMessageId;\n            }\n\n            let scrollBehavior = ScrollBehaviorEnum.SCROLL_TO_BOTTOM;\n            if (messageId) {\n                scrollBehavior = ScrollBehaviorEnum.SCROLL_TO_MESSAGE;\n            } else if (unread && separatorMessageId) {\n                scrollBehavior = ScrollBehaviorEnum.SCROLL_TO_UNREAD;\n            } else if (scrollPosition) {\n                scrollBehavior = ScrollBehaviorEnum.SCROLL_TO_POSITION;\n            }\n\n            this.replace(separatorMessageId, result.messages, () => {\n                this.handleScrollBehavior(scrollBehavior, this.snapshot, scrollPosition);\n                if (messageId) {\n                    highlightMessage(chatId, messageId);\n                }\n            });\n\n            // load files\n            const store = FileStore.getStore();\n            loadMessageContents(store, result.messages);\n            this.viewMessages(result.messages);\n\n            loadChatsContent(store, [chatId]);\n            loadDraftContent(store, chatId);\n\n            this.loadIncompleteHistory(result);\n\n            if (previousChatId !== chatId) {\n                getChatFullInfo(chatId);\n                getChatMedia(chatId);\n            }\n        } else {\n            this.loading = true;\n            this.replace(0, [], () => {\n                this.loading = false;\n            });\n        }\n\n        if (previousChatId !== chatId) {\n            if (previousChat) {\n                TdLibController.send({\n                    '@type': 'closeChat',\n                    chat_id: previousChatId\n                });\n\n                const scrollMessage = getScrollMessage(this.snapshot, this.itemsRef);\n                console.log('[scroll] start setScrollPosition', [previousChatId, previousChat, this.snapshot, scrollMessage]);\n                const message = this.messages[scrollMessage.index];\n                if (message) {\n                    const { chatId, messageId } = message.props;\n                    console.log('[scroll] stop setScrollPosition', [previousChatId, previousChat], { chatId, messageId, offset: scrollMessage.offset });\n                    ChatStore.setScrollPosition(previousChatId, { chatId, messageId, offset: scrollMessage.offset });\n                }\n            }\n        }\n    }\n\n    viewMessages(messages) {\n        if (!messages) return;\n        if (messages.length === 0) return;\n        if (!messages[0].chat_id) return;\n\n        const viewAction = () => {\n            TdLibController.send({\n                '@type': 'viewMessages',\n                chat_id: messages[0].chat_id,\n                message_ids: messages.map(x => x.id)\n            });\n        };\n\n        if (window.hasFocus) {\n            viewAction();\n        } else {\n            this.defferedActions.push(viewAction);\n        }\n    }\n\n    cancelLoadMessageContents(messages) {\n        //return;\n        for (let i = messages.length - 1; i >= 0; i--) {\n            let message = messages[i];\n            if (message && message.content) {\n                switch (message.content['@type']) {\n                    case 'messagePhoto': {\n                        let [id, pid] = this.getMessagePhoto(message);\n                        if (pid) {\n                            let obj = getPhotoSize(message.content.photo.sizes);\n                            if (!obj.blob) {\n                                FileStore.cancelGetRemoteFile(id, message);\n                            }\n                        }\n                        break;\n                    }\n                    case 'messageSticker': {\n                        let [id, pid] = this.getMessageSticker(message);\n                        if (pid) {\n                            let obj = message.content.sticker.sticker;\n                            if (!obj.blob) {\n                                FileStore.cancelGetRemoteFile(id, message);\n                            }\n                        }\n                        break;\n                    }\n                    default:\n                        break;\n                }\n            }\n        }\n    }\n\n    loadIncompleteHistory = async result => {\n        const MAX_ITERATIONS = 5;\n        let incomplete = result && result.messages.length > 0 && result.messages.length < MESSAGE_SLICE_LIMIT;\n\n        for (let i = 0; i < MAX_ITERATIONS && incomplete; i++) {\n            result = await this.onLoadNext();\n            incomplete = result && result.messages.length > 0 && result.messages.length < MESSAGE_SLICE_LIMIT;\n        }\n    };\n\n    onLoadNext = async () => {\n        const { chatId } = this.props;\n        const { history } = this.state;\n\n        if (!chatId) return;\n        if (this.loading) return;\n\n        if (this.loadMigratedHistory) {\n            this.onLoadMigratedHistory();\n            return;\n        }\n\n        const fromMessageId = history && history.length > 0 ? history[0].id : 0;\n        const limit = history.length < MESSAGE_SLICE_LIMIT? MESSAGE_SLICE_LIMIT * 2 : MESSAGE_SLICE_LIMIT;\n\n        // console.log('[p] getChatHistory', [fromMessageId]);\n        this.loading = true;\n        const sessionId = this.sessionId;\n        let result = await TdLibController.send({\n            '@type': 'getChatHistory',\n            chat_id: chatId,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit\n        }).finally(() => {\n            this.loading = false;\n        });\n        // console.log('[p] getChatHistory result', fromMessageId, limit, result);\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        if (this.props.chatId !== chatId) {\n            return;\n        }\n\n        MessageStore.setItems(result.messages);\n        result.messages.reverse();\n        this.loading = true;\n        requestAnimationFrame(() => {\n            this.loading = false;\n            this.insertNext(filterMessages(result.messages), state => {\n                if (filterMessages(result.messages).length > 0) {\n                    this.handleScrollBehavior(ScrollBehaviorEnum.KEEP_SCROLL_POSITION, this.snapshot);\n                    setTimeout(() => {\n                        const { history: currentHistory } = this.state;\n                        // console.log('[h] check', currentHistory.length);\n                        if (currentHistory.length >= MESSAGE_SLICE_LIMIT * 3) {\n                            // console.log('[h] trunk', currentHistory.slice(0, MESSAGE_SLICE_LIMIT * 3).length);\n                            this.setState({\n                                history: currentHistory.slice(0, MESSAGE_SLICE_LIMIT * 3)\n                            });\n                        }\n                    }, 100);\n                }\n                if (!result.messages.length) {\n                    this.onLoadMigratedHistory();\n                }\n            });\n\n            const store = FileStore.getStore();\n            loadMessageContents(store, result.messages);\n            this.viewMessages(result.messages);\n\n            return result;\n        });\n    };\n\n    onLoadMigratedHistory = async () => {\n        const { chatId } = this.props;\n        const { history } = this.state;\n\n        if (!chatId) return;\n        if (this.loading) return;\n\n        const supergroupId = getSupergroupId(chatId);\n        if (!supergroupId) return;\n\n        const fullInfo = SupergroupStore.getFullInfo(supergroupId);\n        if (!fullInfo) return;\n        if (!fullInfo.upgraded_from_basic_group_id) return;\n\n        this.loadMigratedHistory = true;\n\n        const basicGroupChat = await TdLibController.send({\n            '@type': 'createBasicGroupChat',\n            basic_group_id: fullInfo.upgraded_from_basic_group_id\n        });\n\n        if (!basicGroupChat) return;\n\n        const fromMessageId = history.length > 0 && history[0].chat_id === basicGroupChat.id ? history[0].id : 0;\n\n        this.loading = true;\n        const sessionId = this.sessionId;\n        const result = await TdLibController.send({\n            '@type': 'getChatHistory',\n            chat_id: basicGroupChat.id,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: fromMessageId === 0? MESSAGE_SLICE_LIMIT * 2 : MESSAGE_SLICE_LIMIT\n        }).finally(() => {\n            this.loading = false;\n        });\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        if (this.props.chatId !== chatId) {\n            return;\n        }\n\n        MessageStore.setItems(result.messages);\n        result.messages.reverse();\n        this.insertNext(filterMessages(result.messages), state => {\n            if (filterMessages(result.messages).length > 0) {\n                this.handleScrollBehavior(ScrollBehaviorEnum.KEEP_SCROLL_POSITION, this.snapshot);\n            }\n        });\n\n        const store = FileStore.getStore();\n        loadMessageContents(store, result.messages);\n        this.viewMessages(result.messages);\n    };\n\n    onLoadPrevious = async () => {\n        const { chatId } = this.props;\n        const { history } = this.state;\n\n        const chat = ChatStore.get(chatId);\n\n        // console.log('[p] onLoadPrevious', [this.loading]);\n\n        if (!chat) return;\n        if (this.loading) return;\n        if (this.hasLastMessage()) return;\n\n        const fromMessageId = history && history.length > 0 ? history[history.length - 1].id : 0;\n        const limit = history.length < MESSAGE_SLICE_LIMIT? MESSAGE_SLICE_LIMIT * 2 : MESSAGE_SLICE_LIMIT;\n\n        this.loading = true;\n        const sessionId = this.sessionId;\n        let result = await TdLibController.send({\n            '@type': 'getChatHistory',\n            chat_id: chatId,\n            from_message_id: fromMessageId,\n            offset: -limit - 1,\n            limit: limit + 1\n        }).finally(() => {\n            this.loading = false;\n        });\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        if (this.props.chatId !== chatId) {\n            return;\n        }\n\n        filterDuplicateMessages(result, this.state.history);\n\n        MessageStore.setItems(result.messages);\n        result.messages.reverse();\n        this.scrollBehaviorNone = true;\n        this.insertPrevious(filterMessages(result.messages), {}, () => {\n            this.scrollBehaviorNone = false;\n            if (filterMessages(result.messages).length > 0) {\n                setTimeout(() => {\n                    const { history: currentHistory } = this.state;\n                    if (currentHistory.length > MESSAGE_SLICE_LIMIT * 3) {\n                        this.setState({\n                            history: currentHistory.slice(currentHistory.length - MESSAGE_SLICE_LIMIT * 3)\n                        }, () => {\n                            this.handleScrollBehavior(ScrollBehaviorEnum.KEEP_SCROLL_POSITION, this.snapshot);\n                        });\n                    }\n                }, 0);\n            }\n        });\n\n        const store = FileStore.getStore();\n        loadMessageContents(store, result.messages);\n        this.viewMessages(result.messages);\n\n        return result;\n    };\n\n    replace(separatorMessageId, history, callback) {\n        this.setState({ separatorMessageId, history }, callback);\n    }\n\n    replaceMessage(oldMessageId, message, callback) {\n        if (!message) {\n            if (callback) callback();\n            return;\n        }\n\n        this.setState(\n            {\n                history: this.state.history.filter(x => x.id !== oldMessageId).concat([message])\n            },\n            callback\n        );\n    }\n\n    insertNext(history, callback) {\n        if (history.length === 0) {\n            callback && callback();\n            return;\n        }\n\n        this.setState({\n            history: history.concat(this.state.history)//.slice(0, 100)\n        }, callback);\n    }\n\n    insertPrevious(history, newState, callback) {\n        if (history.length === 0) {\n            if (callback) callback();\n            return;\n        }\n\n        this.setState({\n            history: this.state.history.concat(history),\n            ...newState\n        }, callback);\n    }\n\n    deleteHistory(message_ids, callback) {\n        const { history } = this.state;\n        if (history.length === 0) {\n            if (callback) callback();\n            return;\n        }\n\n        const map = new Map(message_ids.map(x => [x, x]));\n        this.setState({ history: history.filter(x => !map.has(x.id)) }, callback);\n    }\n\n    handleScroll = () => {\n        const { scrollDownVisible, replyHistory, history } = this.state;\n        const list = this.listRef.current;\n\n        // console.log(\n        //     `[ml] handleScroll\n        //     list.scrollTop=${list.scrollTop}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     list.scrollHeight=${list.scrollHeight}`\n        // );\n\n        this.updateItemsInView();\n\n        if (list.scrollTop <= SCROLL_PRECISION) {\n            this.onLoadNext();\n        }\n\n        if (list.scrollTop + list.offsetHeight >= list.scrollHeight - SCROLL_PRECISION) {\n            this.onLoadPrevious();\n        }\n\n        if (list.scrollTop + list.offsetHeight >= list.scrollHeight - SCROLL_PRECISION) {\n            if (this.hasLastMessage() && scrollDownVisible) {\n                if (this.prevScrollTop !== list.scrollTop && this.prevScrollTop && this.prevHistory === history) {\n                    this.setState({\n                        scrollDownVisible: false,\n                        replyHistory: []\n                    });\n                } else if (!replyHistory.length) {\n                    this.setState({\n                        scrollDownVisible: false\n                    });\n                }\n            }\n        } else {\n            if (!scrollDownVisible) {\n                this.setState({ scrollDownVisible: true });\n            }\n        }\n\n        this.prevScrollTop = list.scrollTop;\n        this.prevHistory = history;\n    };\n\n    handleScrollBehavior = (scrollBehavior, snapshot, position) => {\n        const { chatId, messageId } = this.props;\n        const { scrollTop, scrollHeight, offsetHeight } = snapshot || {\n            scrollTop: 0,\n            scrollHeight: 0,\n            offsetHeight: 0\n        };\n\n        // console.log(\n        //     `[ml] handleScrollBehavior\n        //     scrollBehavior=${scrollBehavior}\n        //     snapshot.scrollTop=${scrollTop}\n        //     snapshot.offsetHeight=${offsetHeight}\n        //     snapshot.scrollHeight=${scrollHeight}`\n        // );\n\n        switch (scrollBehavior) {\n            case ScrollBehaviorEnum.SCROLL_TO_BOTTOM: {\n                this.scrollToBottom();\n                break;\n            }\n            case ScrollBehaviorEnum.SCROLL_TO_MESSAGE: {\n                this.scrollToMessage();\n                break;\n            }\n            case ScrollBehaviorEnum.SCROLL_TO_UNREAD: {\n                this.scrollToUnread();\n                break;\n            }\n            case ScrollBehaviorEnum.SCROLL_TO_POSITION: {\n                this.scrollToPosition(position);\n                break;\n            }\n            case ScrollBehaviorEnum.KEEP_SCROLL_POSITION: {\n                this.keepScrollPosition(snapshot);\n                break;\n            }\n            case ScrollBehaviorEnum.NONE: {\n                break;\n            }\n        }\n    };\n\n    keepScrollPosition = snapshot => {\n        const { scrollTop, scrollHeight, offsetHeight } = snapshot;\n        const list = this.listRef.current;\n\n        // console.log(\n        //     `[ml] keepScrollPosition before\n        //     list.scrollTop=${list.scrollTop}\n        //     list.scrollHeight=${list.scrollHeight}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     snapshot.scrollTop=${snapshot.scrollTop}\n        //     snapshot.scrollHeight=${snapshot.scrollHeight}\n        //     snapshot.offsetHeight=${snapshot.offsetHeight}`\n        // );\n\n        list.scrollTop = scrollTop + (list.scrollHeight - scrollHeight);\n\n        // console.log(\n        //     `[ml] keepScrollPosition after\n        //     list.scrollTop=${list.scrollTop}\n        //     list.scrollHeight=${list.scrollHeight}\n        //     list.offsetHeight=${list.offsetHeight}`\n        // );\n    };\n\n    scrollToUnread = () => {\n        const { chatId, messageId } = this.props;\n        const { history } = this.state;\n        const list = this.listRef.current;\n\n        const chat = ChatStore.get(chatId);\n        const pinnedMessageMargin = 0; //chat && chat.pinned_message_id ? 55 : 0;\n\n        // console.log(\n        //     `MessagesList.scrollToUnread before\n        //     chatId=${chatId} messageId=${messageId}\n        //     list.scrollTop=${list.scrollTop}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     list.scrollHeight=${list.scrollHeight}`\n        // );\n\n        let scrolled = false;\n        for (let i = 0; i < history.length; i++) {\n            let itemComponent = this.itemsMap.get(i);\n            let item = ReactDOM.findDOMNode(itemComponent);\n            if (item) {\n                if (itemComponent.props.showUnreadSeparator) {\n                    list.scrollTop = item.offsetTop - pinnedMessageMargin; // + unread messages margin-top\n                    scrolled = true;\n                    break;\n                }\n            }\n        }\n\n        // console.log(\n        //     `MessagesList.scrollToUnread after\n        //     chatId=${chatId} messageId=${messageId} scrolled=${scrolled}\n        //     list.scrollTop=${list.scrollTop}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     list.scrollHeight=${list.scrollHeight}`\n        // );\n\n        if (!scrolled) {\n            this.scrollToBottom();\n        }\n    };\n\n    scrollToPosition = position => {\n        console.log('[scroll] scrollToPosition', this.props.chatId, position);\n        const { messageId, offset } = position;\n        const { history } = this.state;\n        const list = this.listRef.current;\n\n        let scrolled = false;\n        for (let i = 0; i < history.length; i++) {\n            const itemComponent = this.itemsMap.get(i);\n            const node = ReactDOM.findDOMNode(itemComponent);\n            if (node) {\n                if (itemComponent.props.messageId === messageId) {\n                    list.scrollTop = node.offsetTop - offset;\n                    scrolled = true;\n                    break;\n                }\n            }\n        }\n    };\n\n    scrollToMessage = () => {\n        const { chatId, messageId } = this.props;\n        const { history } = this.state;\n        const list = this.listRef.current;\n\n        // console.log(\n        //     `MessagesList.scrollToMessage before\n        //     chatId=${chatId} messageId=${messageId}\n        //     list.scrollTop=${list.scrollTop}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     list.scrollHeight=${list.scrollHeight}`,\n        //     this.itemsMap\n        // );\n\n        let scrolled = false;\n        for (let i = 0; i < history.length; i++) {\n            const itemComponent = this.itemsMap.get(i);\n            const node = ReactDOM.findDOMNode(itemComponent);\n            if (node) {\n                if (itemComponent.props.messageId === messageId) {\n                    if (list.offsetHeight < node.offsetHeight) {\n                        // scroll to the message top\n                        list.scrollTop = node.offsetTop;\n                    } else {\n                        // scroll message to the center of screen\n                        list.scrollTop = node.offsetTop - list.offsetHeight / 2.0 + node.offsetHeight / 2.0;\n                    }\n                    scrolled = true;\n                    break;\n                }\n            }\n        }\n\n        // console.log(\n        //     `MessagesList.scrollToMessage after\n        //     chatId=${chatId} messageId=${messageId} scrolled=${scrolled}\n        //     list.scrollTop=${list.scrollTop}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     list.scrollHeight=${list.scrollHeight}`\n        // );\n\n        // if (!scrolled) {\n        //     this.scrollToBottom();\n        // }\n    };\n\n    scrollToBottom = () => {\n        const { chatId, messageId } = this.props;\n        const list = this.listRef.current;\n\n        // console.log(\n        //     `MessagesList.scrollToBottom before\n        //     chatId=${chatId} messageId=${messageId}\n        //     list.scrollTop=${list.scrollTop}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     list.scrollHeight=${list.scrollHeight}`\n        // );\n\n        const nextScrollTop = list.scrollHeight - list.offsetHeight;\n        if (nextScrollTop !== list.scrollTop) {\n            list.scrollTop = list.scrollHeight - list.offsetHeight;\n\n            // console.log(\n            //     `MessagesList.scrollToBottom after\n            // chatId=${chatId} messageId=${messageId}\n            // list.scrollTop=${list.scrollTop}\n            // list.offsetHeight=${list.offsetHeight}\n            // list.scrollHeight=${list.scrollHeight}`\n            // );\n        } else {\n            // console.log(\n            //     `MessagesList.scrollToBottom after (no changes)\n            // chatId=${chatId} messageId=${messageId}\n            // list.scrollTop=${list.scrollTop}\n            // list.offsetHeight=${list.offsetHeight}\n            // list.scrollHeight=${list.scrollHeight}`\n            // );\n        }\n    };\n\n    scrollToStart = async () => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        // console.log('MessagesList.newSessionId scrollToStart');\n        this.sessionId = Date.now();\n        this.loading = false;\n\n        const fromMessageId = 0;\n        const offset = 0;\n        const limit = MESSAGE_SLICE_LIMIT;\n\n        this.loading = true;\n        const sessionId = this.sessionId;\n        const result = await TdLibController.send({\n            '@type': 'getChatHistory',\n            chat_id: chat.id,\n            from_message_id: fromMessageId,\n            offset: offset,\n            limit: limit\n        }).finally(() => {\n            this.loading = false;\n        });\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        if (this.props.chatId !== chatId) {\n            return;\n        }\n\n        // console.log('MessagesList.scrollToStart scrollDown', false);\n        this.setState({ scrollDownVisible: false, replyHistory: [] });\n\n        MessageStore.setItems(result.messages);\n        result.messages.reverse();\n\n        this.replace(this.state.separatorMessageId, result.messages, () => {\n            this.handleScrollBehavior(ScrollBehaviorEnum.SCROLL_TO_BOTTOM, this.snapshot);\n        });\n\n        // load files\n        const store = FileStore.getStore();\n        loadMessageContents(store, result.messages);\n        this.viewMessages(result.messages);\n\n        this.loadIncompleteHistory(result);\n    };\n\n    handleListDragEnter = event => {\n        event.preventDefault();\n        event.stopPropagation();\n\n        const { chatId } = this.props;\n        if (!canSendMediaMessages(chatId)) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateDragging',\n            dragging: true,\n            files: event.dataTransfer.files\n        });\n    };\n\n    handleScrollDownClick = event => {\n        const { replyHistory } = this.state;\n\n        if (replyHistory.length > 0) {\n            const lastReply = replyHistory.pop();\n            if (lastReply) {\n                const { chatId, messageId } = lastReply;\n                if (chatId === this.props.chatId) {\n                    openChat(chatId, messageId);\n                }\n            }\n        } else {\n            this.scrollToStart();\n        }\n    };\n\n    showMessageTitle(message, prevMessage, isFirst, isFirstUnread) {\n        if (!message) return false;\n\n        const { chat_id, date, is_outgoing, sender_user_id, content } = message;\n\n        if (isFirst) {\n            return true;\n        }\n\n        if (isFirstUnread) {\n            return true;\n        }\n\n        if (isChannelChat(chat_id)) {\n            return true;\n        }\n\n        return (\n            prevMessage &&\n            (isServiceMessage(prevMessage) ||\n                prevMessage.content['@type'] === 'messageSticker' ||\n                prevMessage.content['@type'] === 'messageVideoNote' ||\n                sender_user_id !== prevMessage.sender_user_id ||\n                is_outgoing !== prevMessage.is_outgoing ||\n                date - prevMessage.date > MESSAGE_SPLIT_MAX_TIME_S)\n        );\n    }\n\n    showMessageDate(message, prevMessage, isFirst) {\n        if (isFirst) {\n            return true;\n        }\n\n        const date = new Date(message.date * 1000);\n        const prevDate = prevMessage ? new Date(prevMessage.date * 1000) : date;\n\n        if (\n            date.getFullYear() !== prevDate.getFullYear() ||\n            date.getMonth() !== prevDate.getMonth() ||\n            date.getDate() !== prevDate.getDate()\n        ) {\n            return true;\n        }\n\n        return false;\n    }\n\n    render() {\n        const { chatId } = this.props;\n        const { history, separatorMessageId, clearHistory, selectionActive, scrollDownVisible } = this.state;\n\n        // console.log('[ml] render ', history);\n\n        this.itemsMap.clear();\n        // this.messages = clearHistory\n        //     ? null\n        //     : history.map((x, i) => {\n        //         /// history[4] id=5 prev\n        //         /// history[5] id=6 current\n        //         /// history[6] id=7 next\n        //         /// ...\n        //         /// history[9] id=10\n        //\n        //         const prevMessage = i > 0 ? history[i - 1] : null;\n        //         const nextMessage = i < history.length - 1 ? history[i + 1] : null;\n        //\n        //         const showDate = this.showMessageDate(x, prevMessage, i === 0);\n        //\n        //         let m = null;\n        //         if (isServiceMessage(x)) {\n        //             m = (\n        //                 <ServiceMessage\n        //                     key={`chat_id=${x.chat_id} message_id=${x.id} show_date=${showDate}`}\n        //                     ref={el => this.itemsMap.set(i, el)}\n        //                     chatId={x.chat_id}\n        //                     messageId={x.id}\n        //                     showUnreadSeparator={separatorMessageId === x.id}\n        //                 />\n        //             );\n        //         } else {\n        //             const isFirstUnread = separatorMessageId === x.id;\n        //             const isNextFirstUnread = nextMessage && separatorMessageId === nextMessage.id;\n        //             const showTitle = this.showMessageTitle(x, prevMessage, i === 0, isFirstUnread);\n        //             const nextShowTitle = this.showMessageTitle(nextMessage, x, false, isNextFirstUnread);\n        //\n        //             const showTail = !nextMessage\n        //                 || isServiceMessage(nextMessage)\n        //                 || nextMessage.content['@type'] === 'messageSticker'\n        //                 || nextMessage.content['@type'] === 'messageVideoNote'\n        //                 || x.sender_user_id !== nextMessage.sender_user_id\n        //                 || x.is_outgoing !== nextMessage.is_outgoing\n        //                 || nextShowTitle;\n        //\n        //             m = (\n        //                 <Message\n        //                     key={`chat_id=${x.chat_id} message_id=${x.id} show_date=${showDate}`}\n        //                     ref={el => this.itemsMap.set(i, el)}\n        //                     chatId={x.chat_id}\n        //                     messageId={x.id}\n        //                     sendingState={x.sending_state}\n        //                     showTitle={showTitle}\n        //                     showTail={showTail}\n        //                     showUnreadSeparator={separatorMessageId === x.id}\n        //                     showDate={showDate}\n        //                 />\n        //             );\n        //         }\n        //\n        //         return m;\n        //       });\n\n        if (clearHistory) {\n            this.messages = null;\n        } else {\n            this.messages = [];\n            for (let i = 0; i < history.length; i++) {\n                const message = history[i];\n                const { chat_id, media_album_id, ttl, content, is_outgoing } = message;\n                let albumAdded = false;\n                if (media_album_id !== '0' && !ttl) {\n                    const album = [message];\n                    for (let j = i + 1; j < i + ALBUM_MESSAGES_LIMIT && j < history.length; j++) {\n                        if (history[j].media_album_id === media_album_id) {\n                            album.push(history[j]);\n                        } else {\n                            break;\n                        }\n                    }\n\n                    if (album.length > 1) {\n                        const x = message;\n                        const prevMessage = i > 0 ? history[i - 1] : null;\n                        const nextMessage = i + album.length < history.length ? history[i + album.length] : null;\n\n                        const showDate = this.showMessageDate(x, prevMessage, i === 0);\n\n                        const isFirstUnread = separatorMessageId === x.id;\n                        const isNextFirstUnread = nextMessage ? separatorMessageId === nextMessage.id : false;\n                        const showTitle = this.showMessageTitle(x, prevMessage, i === 0, isFirstUnread);\n                        const nextShowTitle = this.showMessageTitle(nextMessage, x, false, isNextFirstUnread);\n\n                        const showTail = !nextMessage\n                            || isServiceMessage(nextMessage)\n                            || nextMessage.content['@type'] === 'messageSticker'\n                            || nextMessage.content['@type'] === 'messageVideoNote'\n                            || x.sender_user_id !== nextMessage.sender_user_id\n                            || x.is_outgoing !== nextMessage.is_outgoing\n                            || nextShowTitle;\n\n                        this.messages.push((\n                            <Album\n                                key={`chat_id=${chat_id} media_album_id=${media_album_id} date=${showDate} title=${showTitle} tail=${showTail}`}\n                                chatId={chat_id}\n                                messageIds={album.map(x => x.id)}\n                                showTitle={showTitle}\n                                showTail={showTail}\n                                showUnreadSeparator={album.map(x => x.id).some(x => x.id === separatorMessageId)}\n                                showDate={showDate}\n                            />));\n                        i += (album.length - 1);\n                        albumAdded = true;\n                    }\n                }\n                // else if (content['@type'] === 'messageDocument' && !ttl) {\n                //     const album = [message];\n                //     for (let j = i + 1; j < i + ALBUM_MESSAGES_LIMIT && j < history.length; j++) {\n                //         if (history[j].content['@type'] === content['@type'] && history[j].is_outgoing === is_outgoing) {\n                //             album.push(history[j]);\n                //         } else {\n                //             break;\n                //         }\n                //     }\n                //\n                //     if (album.length > 1) {\n                //         const x = message;\n                //         const prevMessage = i > 0 ? history[i - 1] : null;\n                //         const nextMessage = i + album.length < history.length ? history[i + album.length] : null;\n                //\n                //         const showDate = this.showMessageDate(x, prevMessage, i === 0);\n                //\n                //         const isFirstUnread = separatorMessageId === x.id;\n                //         const isNextFirstUnread = nextMessage ? separatorMessageId === nextMessage.id : false;\n                //         const showTitle = this.showMessageTitle(x, prevMessage, i === 0, isFirstUnread);\n                //         const nextShowTitle = this.showMessageTitle(nextMessage, x, false, isNextFirstUnread);\n                //\n                //         const showTail = !nextMessage\n                //             || isServiceMessage(nextMessage)\n                //             || nextMessage.content['@type'] === 'messageSticker'\n                //             || nextMessage.content['@type'] === 'messageVideoNote'\n                //             || x.sender_user_id !== nextMessage.sender_user_id\n                //             || x.is_outgoing !== nextMessage.is_outgoing\n                //             || nextShowTitle;\n                //\n                //         this.messages.push((\n                //             <DocumentAlbum\n                //                 key={`chat_id=${chat_id} media_album_id=${album.map(x => x.id).join('_')} date=${showDate} title=${showTitle} tail=${showTail}`}\n                //                 chatId={chat_id}\n                //                 messageIds={album.map(x => x.id)}\n                //                 showTitle={showTitle}\n                //                 showTail={showTail}\n                //                 showUnreadSeparator={album.map(x => x.id).some(x => x.id === separatorMessageId)}\n                //                 showDate={showDate}\n                //             />));\n                //         i += (album.length - 1);\n                //         albumAdded = true;\n                //     }\n                // }\n\n                if (!albumAdded) {\n                    /// history[4] id=5 prev\n                    /// history[5] id=6 current\n                    /// history[6] id=7 next\n                    /// ...\n                    /// history[9] id=10\n\n                    const x = message;\n                    const prevMessage = i > 0 ? history[i - 1] : null;\n                    const nextMessage = i < history.length - 1 ? history[i + 1] : null;\n\n                    const showDate = this.showMessageDate(x, prevMessage, i === 0);\n\n                    let m = null;\n                    if (isServiceMessage(x)) {\n                        m = (\n                            <ServiceMessage\n                                key={`chat_id=${x.chat_id} id=${x.id} date=${showDate}`}\n                                ref={el => this.itemsMap.set(i, el)}\n                                chatId={x.chat_id}\n                                messageId={x.id}\n                                showUnreadSeparator={separatorMessageId === x.id}\n                            />\n                        );\n                    } else {\n                        const isFirstUnread = separatorMessageId === x.id;\n                        const isNextFirstUnread = nextMessage && separatorMessageId === nextMessage.id;\n                        const showTitle = this.showMessageTitle(x, prevMessage, i === 0, isFirstUnread);\n                        const nextShowTitle = this.showMessageTitle(nextMessage, x, false, isNextFirstUnread);\n\n                        const showTail = !nextMessage\n                            || isServiceMessage(nextMessage)\n                            || nextMessage.content['@type'] === 'messageSticker'\n                            || nextMessage.content['@type'] === 'messageVideoNote'\n                            || x.sender_user_id !== nextMessage.sender_user_id\n                            || x.is_outgoing !== nextMessage.is_outgoing\n                            || nextShowTitle;\n\n                        m = (\n                            <Message\n                                key={`chat_id=${x.chat_id} id=${x.id} date=${showDate} title=${showTitle} tail=${showTail}`}\n                                ref={el => this.itemsMap.set(i, el)}\n                                chatId={x.chat_id}\n                                messageId={x.id}\n                                sendingState={x.sending_state}\n                                showTitle={showTitle}\n                                showTail={showTail}\n                                showUnreadSeparator={separatorMessageId === x.id}\n                                showDate={showDate}\n                            />\n                        );\n                    }\n\n                    this.messages.push(m);\n                }\n            }\n        }\n\n        return (\n            <div\n                className={classNames('messages-list', {\n                    'messages-list-selection-active': selectionActive\n                })}\n                onDragEnter={this.handleListDragEnter}>\n                <div ref={this.listRef} className='messages-list-wrapper' onScroll={this.handleScroll}>\n                    <div className='messages-list-top' />\n                    <div ref={this.itemsRef} className='messages-list-items'>\n                        {this.messages}\n                    </div>\n                </div>\n                <ActionBar chatId={chatId} />\n                <Placeholder />\n                {scrollDownVisible && (\n                    <ScrollDownButton ref={this.scrollDownButtonRef} onClick={this.handleScrollDownClick} />\n                )}\n                <FilesDropTarget />\n                <StickersHint />\n            </div>\n        );\n    }\n}\n\nexport default MessagesList;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { copy } from '../../Utils/Text';\nimport { compose } from '../../Utils/HOC';\nimport { withTranslation } from 'react-i18next';\nimport { withSnackbar } from 'notistack';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport LinkIcon from '@material-ui/icons/Link';\nimport MoreIcon from '../../Assets/Icons/More';\nimport IconButton from '@material-ui/core/IconButton';\nimport ShareIcon from '@material-ui/icons/Share';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { forward } from '../../Actions/Client';\nimport { NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../../Constants';\nimport OptionStore from '../../Stores/OptionStore';\nimport StickerStore from '../../Stores/StickerStore';\nimport TdLibController from '../../Controllers/TdLibController';\n\nclass ShareStickerSetButton extends React.Component {\n    state = {\n        anchorEl: null\n    };\n\n    handleMenuClick = event => {\n        this.handleOpen(event.currentTarget);\n    };\n\n    handleOpen = anchorEl => {\n        this.setState({ anchorEl });\n    };\n\n    handleClose = () => {\n        this.setState({ anchorEl: null });\n    };\n\n    handleCopyLink = () => {\n        this.handleClose();\n\n        const { t } = this.props;\n\n        const link = this.getStickersLink(StickerStore.stickerSet);\n        if (!link) return;\n\n        copy(link);\n\n        this.handleScheduledAction(t('LinkCopied'));\n    };\n\n    getStickersLink = stickerSet => {\n        if (!stickerSet) return '';\n\n        const { name } = stickerSet;\n        if (!name) return '';\n\n        const telegramUrlOption = OptionStore.get('t_me_url');\n\n        return (telegramUrlOption ? telegramUrlOption.value : 'https://telegram.org/') + 'addstickers/' + name;\n    };\n\n    handleScheduledAction = message => {\n        const { enqueueSnackbar, closeSnackbar } = this.props;\n\n        const snackKey = enqueueSnackbar(message, {\n            autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\n            preventDuplicate: true,\n            action: [\n                <IconButton\n                    key='close'\n                    aria-label='Close'\n                    color='inherit'\n                    className='notification-close-button'\n                    onClick={() => closeSnackbar(snackKey)}>\n                    <CloseIcon />\n                </IconButton>\n            ]\n        });\n    };\n\n    handleShare = () => {\n        this.handleClose();\n\n        const link = this.getStickersLink(StickerStore.stickerSet);\n        if (!link) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerSet',\n            stickerSet: null\n        });\n\n        const inputMessageContent = {\n            '@type': 'inputMessageText',\n            text: {\n                '@type': 'formattedText',\n                text: link,\n                entities: null\n            },\n            disable_web_page_preview: false,\n            clear_draft: false\n        };\n\n        forward(inputMessageContent);\n    };\n\n    render() {\n        const { t, className } = this.props;\n        const { anchorEl } = this.state;\n\n        return (\n            <>\n                <IconButton\n                    className={className}\n                    aria-label='Share'\n                    open={Boolean(anchorEl)}\n                    onClick={this.handleMenuClick}>\n                    <MoreIcon />\n                </IconButton>\n                <Menu\n                    id='sticker-set-menu'\n                    anchorEl={anchorEl}\n                    open={Boolean(anchorEl)}\n                    getContentAnchorEl={null}\n                    disableAutoFocusItem\n                    disableEnforceFocus={true}\n                    disableRestoreFocus={true}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'right'\n                    }}\n                    onClose={this.handleClose}>\n                    <MenuItem onClick={this.handleCopyLink}>\n                        <ListItemIcon>\n                            <LinkIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('CopyLink')} />\n                    </MenuItem>\n                    <MenuItem onClick={this.handleShare}>\n                        <ListItemIcon>\n                            <ShareIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('StickersShare')} />\n                    </MenuItem>\n                </Menu>\n            </>\n        );\n    }\n}\n\nShareStickerSetButton.propTypes = {};\n\nconst enhance = compose(\n    withTranslation(),\n    withSnackbar\n);\n\nexport default enhance(ShareStickerSetButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport ShareStickerSetButton from './ShareStickerSetButton';\nimport Sticker, { StickerSourceEnum } from '../Message/Media/Sticker';\nimport StickerPreview from '../ColumnMiddle/StickerPreview';\nimport { loadStickerContent, loadStickerSetContent } from '../../Utils/File';\nimport { modalManager } from '../../Utils/Modal';\nimport { STICKER_SMALL_DISPLAY_SIZE } from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport StickerStore from '../../Stores/StickerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './StickerSetDialog.css';\n\nclass StickerSetDialog extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.contentRef = React.createRef();\n\n        this.state = {\n            stickerSet: StickerStore.stickerSet,\n            stickerId: 0,\n            scroll: false,\n            scrollTop: false,\n            scrollBottom: false\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { stickerSet, sticker, scroll, scrollTop, scrollBottom } = this.state;\n\n        if (stickerSet !== nextState.stickerSet) {\n            return true;\n        }\n\n        if (sticker !== nextState.sticker) {\n            return true;\n        }\n\n        if (scroll !== nextState.scroll) {\n            return true;\n        }\n\n        if (scrollTop !== nextState.scrollTop) {\n            return true;\n        }\n\n        if (scrollBottom !== nextState.scrollBottom) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        StickerStore.on('clientUpdateStickerSet', this.handleClientUpdateStickerSet);\n        StickerStore.on('updateInstalledStickerSets', this.handleUpdateInstalledStickerSets);\n    }\n\n    componentWillUnmount() {\n        StickerStore.off('clientUpdateStickerSet', this.handleClientUpdateStickerSet);\n        StickerStore.off('updateInstalledStickerSets', this.handleUpdateInstalledStickerSets);\n    }\n\n    handleUpdateInstalledStickerSets = update => {\n        const { stickerSet } = StickerStore;\n\n        this.setState({ stickerSet });\n    };\n\n    handleClientUpdateStickerSet = update => {\n        const { stickerSet } = update;\n\n        this.setState({ stickerSet }, () => {\n            setTimeout(() => {\n                this.handleScroll();\n            }, 0);\n        });\n\n        if (stickerSet) {\n            const store = FileStore.getStore();\n            loadStickerSetContent(store, stickerSet);\n        }\n    };\n\n    handleClose = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerSet',\n            stickerSet: null\n        });\n    };\n\n    handleDone = () => {\n        const { stickerSet } = this.state;\n        if (!stickerSet) return;\n\n        const { is_installed } = stickerSet;\n\n        TdLibController.send({\n            '@type': 'changeStickerSet',\n            set_id: stickerSet.id,\n            is_installed: !is_installed\n        });\n\n        this.handleClose();\n    };\n\n    loadPreviewContent = stickerId => {\n        const { stickerSet } = this.state;\n        const { stickers } = stickerSet;\n        const sticker = stickers.find(x => x.sticker.id === stickerId);\n        if (!sticker) return;\n\n        const store = FileStore.getStore();\n        loadStickerContent(store, sticker, null);\n\n        const preloadStickers = this.getNeighborStickers(stickerId);\n        preloadStickers.forEach(x => {\n            loadStickerContent(store, x, null);\n        });\n    };\n\n    getNeighborStickers = stickerId => {\n        const { stickerSet } = this.state;\n        if (!stickerSet) return [];\n\n        const { stickers } = stickerSet;\n        if (!stickers) return [];\n\n        const indexes = [];\n        const index = stickers.findIndex(x => x.sticker.id === stickerId);\n        if (index === -1) return [];\n\n        const STICKERS_PER_ROW = 5;\n        const row = Math.floor(index / STICKERS_PER_ROW);\n        const column = index % STICKERS_PER_ROW;\n\n        const prevRow = row - 1;\n        const nextRow = row + 1;\n        const prevColumn = column - 1;\n        const nextColumn = column + 1;\n\n        if (prevRow >= 0) {\n            if (prevColumn >= 0) {\n                indexes.push(STICKERS_PER_ROW * prevRow + prevColumn);\n            }\n            indexes.push(STICKERS_PER_ROW * prevRow + column);\n            if (nextColumn < STICKERS_PER_ROW) {\n                indexes.push(STICKERS_PER_ROW * prevRow + nextColumn);\n            }\n        }\n\n        if (prevColumn >= 0) {\n            indexes.push(STICKERS_PER_ROW * row + prevColumn);\n        }\n        if (nextColumn < STICKERS_PER_ROW) {\n            indexes.push(STICKERS_PER_ROW * row + nextColumn);\n        }\n\n        if (nextRow < Math.ceil(stickers.length / STICKERS_PER_ROW)) {\n            if (prevColumn >= 0) {\n                indexes.push(STICKERS_PER_ROW * nextRow + prevColumn);\n            }\n            indexes.push(STICKERS_PER_ROW * nextRow + column);\n            if (nextColumn < STICKERS_PER_ROW) {\n                indexes.push(STICKERS_PER_ROW * nextRow + nextColumn);\n            }\n        }\n\n        return indexes.map(i => stickers[i]);\n    };\n\n    // handleMouseOver = event => {\n    //     const stickerId = Number(event.target.dataset.stickerId);\n    //     if (!stickerId) return;\n    //\n    //     if (!this.mouseDown) return;\n    //\n    //     this.setState({ stickerId });\n    //     this.loadPreviewContent(stickerId);\n    // };\n\n    // handleMouseDown = event => {\n    //     const stickerId = Number(event.target.dataset.stickerId);\n    //     if (!stickerId) return;\n    //\n    //     this.setState({ stickerId });\n    //     this.loadPreviewContent(stickerId);\n    //\n    //     this.mouseDown = true;\n    //     document.addEventListener('mouseup', this.handleMouseUp);\n    //\n    //     event.preventDefault();\n    //     event.stopPropagation();\n    //     return false;\n    // };\n\n    getSticker(stickerId) {\n        const { stickerSet } = this.state;\n        if (!stickerSet) return null;\n\n        const { stickers } = stickerSet;\n\n        const stickerIndex = stickers.findIndex(x => x.sticker.id === stickerId);\n        return stickerIndex !== -1 ? stickers[stickerIndex] : null;\n    }\n\n    handleMouseUp = () => {\n        const sticker = null;\n        this.setState({ sticker });\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerPreview',\n            sticker\n        });\n        this.mouseDown = false;\n        document.removeEventListener('mouseup', this.handleMouseUp);\n    };\n\n    handleMouseEnter = event => {\n        const stickerId = Number(event.currentTarget.dataset.stickerId);\n        const sticker = this.getSticker(stickerId);\n        if (!sticker) return;\n\n        if (!this.mouseDown) return;\n\n        this.setState({ sticker });\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerPreview',\n            sticker\n        });\n        this.loadPreviewContent(stickerId);\n    };\n\n    handleMouseDown = event => {\n        const stickerId = Number(event.currentTarget.dataset.stickerId);\n        const sticker = this.getSticker(stickerId);\n        if (!sticker) return;\n\n        this.setState({ sticker });\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerPreview',\n            sticker\n        });\n        this.loadPreviewContent(stickerId);\n\n        this.mouseDown = true;\n        document.addEventListener('mouseup', this.handleMouseUp);\n\n        event.preventDefault();\n        event.stopPropagation();\n        return false;\n    };\n\n    handleScroll = () => {\n        const content = this.contentRef.current;\n        if (!content) {\n            return;\n        }\n\n        const hasScroll = content.scrollHeight > content.offsetHeight;\n        const scrollTop = hasScroll && content.scrollTop === 0;\n        const scrollBottom = hasScroll && (content.scrollTop + content.offsetHeight) === content.scrollHeight;\n        const scroll = hasScroll && content.scrollTop > 0 && (content.scrollTop + content.offsetHeight) < content.scrollHeight;\n\n        this.setState({\n            scrollTop,\n            scrollBottom,\n            scroll\n        });\n    }\n\n    handleInViewport = (fileId, elementRect) => {\n        const { current } = this.contentRef;\n        if (!current) return false;\n\n        const contentRect = current.getBoundingClientRect();\n        const top = elementRect.top - contentRect.top;\n        const bottom = elementRect.bottom - contentRect.bottom;\n        // below bottom edge\n        if (top > contentRect.height) {\n            // console.log('[rlottie] handleInViewport', [fileId, false]);\n            return false;\n        }\n        // upper top edge\n        if (bottom < - contentRect.height) {\n            // console.log('[rlottie] handleInViewport', [fileId, false]);\n            return false;\n        }\n\n        // console.log('[rlottie] handleInViewport', [fileId, true]);\n        return true;\n    };\n\n    render() {\n        const { t } = this.props;\n        const { stickerSet, sticker, scroll, scrollTop, scrollBottom } = this.state;\n        if (!stickerSet) return null;\n\n        const { title, stickers, is_installed } = stickerSet;\n\n        const items = stickers.map(x => (\n            <div\n                className='sticker-set-dialog-item'\n                key={x.sticker.id}\n                data-sticker-id={x.sticker.id}\n                onMouseEnter={this.handleMouseEnter}\n                onMouseDown={this.handleMouseDown}>\n                <Sticker\n                    key={x.sticker.id}\n                    className='sticker-set-dialog-item-sticker'\n                    sticker={x}\n                    autoplay={true}\n                    blur={false}\n                    displaySize={STICKER_SMALL_DISPLAY_SIZE}\n                    preview\n                    source={StickerSourceEnum.STICKER_SET}\n                    inViewportFunc={this.handleInViewport}\n                />\n                <div className='sticker-set-dialog-item-emoji'>{x.emoji}</div>\n            </div>\n        ));\n\n        return (\n            <Dialog\n                className={classNames(\n                    'sticker-set-dialog',\n                    { 'sticker-set-dialog-scroll': scroll },\n                    { 'sticker-set-dialog-scroll-top': scrollTop },\n                    { 'sticker-set-dialog-scroll-bottom': scrollBottom },\n                )}\n                open\n                manager={modalManager}\n                transitionDuration={0}\n                onClose={this.handleClose}\n                aria-labelledby='sticker-set-dialog-title-text'\n                classes={{ paper: 'sticker-set-dialog-paper' }}>\n                <DialogTitle\n                    className={classNames('sticker-set-dialog-title', { 'sticker-set-dialog-disabled': Boolean(sticker) })}\n                    disableTypography>\n                    <IconButton\n                        aria-label='Close'\n                        onClick={this.handleClose}>\n                        <CloseIcon />\n                    </IconButton>\n                    <Typography variant='h6' id='sticker-set-dialog-title-text' className='sticker-set-dialog-title-typography' noWrap>\n                        {title}\n                    </Typography>\n                    <ShareStickerSetButton />\n                </DialogTitle>\n                <DialogContent\n                    ref={this.contentRef}\n                    classes={{ root: classNames('sticker-set-dialog-content-root', 'scrollbars-hidden') }}\n                    onMouseOver={this.handleMouseOver}\n                    onMouseOut={this.handleMouseOut}\n                    onScroll={this.handleScroll}>\n                    {items}\n                </DialogContent>\n                <DialogActions className={classNames('sticker-set-dialog-actions', { 'sticker-set-dialog-disabled': Boolean(sticker) })}>\n                    <Button className='sticker-set-dialog-action-button' disableElevation variant='contained' color={is_installed ? 'secondary' : 'primary'} onClick={this.handleDone}>\n                        {is_installed ? t('StickersRemove') : t('AddStickers')}\n                    </Button>\n                </DialogActions>\n                {<StickerPreview sticker={sticker} />}\n            </Dialog>\n        );\n    }\n}\n\nStickerSetDialog.propTypes = {};\n\nexport default withTranslation()(StickerSetDialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport classNames from 'classnames';\nimport ChatInfoDialog from '../Popup/ChatInfoDialog';\nimport Footer from './Footer';\nimport Header from './Header';\nimport HeaderPlayer from '../Player/HeaderPlayer';\nimport MessagesList from './MessagesList';\nimport StickerSetDialog from '../Popup/StickerSetDialog';\nimport { getSrc } from '../../Utils/File';\nimport AppStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport './DialogDetails.css';\n\nclass DialogDetails extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            chatId: AppStore.getChatId(),\n            messageId: AppStore.getMessageId(),\n            selectedCount: 0,\n            wallpaper: null,\n            wallpaperSrc: null\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId, selectedCount, wallpaper } = this.state;\n        if (nextState.chatId !== chatId) {\n            return true;\n        }\n        if (nextState.messageId !== messageId) {\n            return true;\n        }\n        if (nextState.selectedCount !== selectedCount) {\n            return true;\n        }\n        if (nextState.wallpaper !== wallpaper) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateChatDetailsVisibility', this.onClientUpdateChatDetailsVisibility);\n        AppStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n        ChatStore.on('clientUpdateChatBackground', this.onClientUpdateChatBackground);\n        FileStore.on('clientUpdateDocumentBlob', this.onClientUpdateDocumentBlob);\n        FileStore.on('clientUpdateDocumentThumbnailBlob', this.onClientUpdateDocumentThumbnailBlob);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateChatDetailsVisibility', this.onClientUpdateChatDetailsVisibility);\n        AppStore.off('clientUpdateChatId', this.onClientUpdateChatId);\n        ChatStore.off('clientUpdateChatBackground', this.onClientUpdateChatBackground);\n        FileStore.off('clientUpdateDocumentBlob', this.onClientUpdateDocumentBlob);\n        FileStore.off('clientUpdateDocumentThumbnailBlob', this.onClientUpdateDocumentThumbnailBlob);\n    }\n\n    onClientUpdateDocumentBlob = update => {\n        const { wallpaper } = this.state;\n        if (!wallpaper) return;\n\n        const { document } = wallpaper;\n        if (!document) return;\n\n        const { document: file } = document;\n        if (!file) return;\n\n        const { fileId } = update;\n\n        if (file.id !== fileId) {\n            return;\n        }\n\n        if (this.thumbnailTime) {\n            if (this.thumbnailTime.wallpaper === wallpaper) {\n                const diff = new Date() - this.thumbnailTime.time;\n                if (diff < 250) {\n                    setTimeout(() => {\n                        this.forceUpdate();\n                    }, 250);\n                    return;\n                }\n            }\n        }\n\n        this.forceUpdate();\n    };\n\n    onClientUpdateDocumentThumbnailBlob = update => {\n        const { wallpaper } = this.state;\n        if (!wallpaper) return;\n\n        const { document } = wallpaper;\n        if (!document) return;\n\n        const { thumbnail } = document;\n        if (!thumbnail) return;\n\n        const { file } = thumbnail;\n        if (!file) return;\n\n        const { fileId } = update;\n\n        if (file.id !== fileId) {\n            return;\n        }\n\n        this.thumbnailTime = {\n            wallpaper,\n            time: new Date()\n        };\n        this.forceUpdate();\n    };\n\n    onClientUpdateChatBackground = update => {\n        const { wallpaper } = update;\n\n        this.thumbnailTime = {\n            wallpaper,\n            time: new Date()\n        };\n        this.setState({\n            wallpaper\n        });\n    };\n\n    onClientUpdateChatDetailsVisibility = update => {\n        this.forceUpdate();\n    };\n\n    onClientUpdateChatId = update => {\n        this.setState({\n            chatId: update.nextChatId,\n            messageId: update.nextMessageId\n        });\n    };\n\n    scrollToBottom = () => {\n        this.messagesList.scrollToBottom();\n    };\n\n    scrollToStart = () => {\n        this.messagesList.scrollToStart();\n    };\n\n    scrollToMessage = () => {\n        this.messagesList.scrollToMessage();\n    };\n\n    render() {\n        /*let groups = [];\n        if (this.props.history.length > 0){\n            let currentGroup = {\n                key: this.props.history[0].id,\n                date: this.props.history[0].date,\n                senderUserId: this.props.history[0].sender_user_id,\n                messages: [this.props.history[0]]\n            };\n\n            for (let i = 1; i < this.props.history.length; i++){\n                if (this.props.history[i].sender_user_id === currentGroup.senderUserId\n                    && Math.abs(this.props.history[i].date - currentGroup.date) <= 10 * 60\n                    && i % 20 !== 0){\n                    currentGroup.key += '_' + this.props.history[i].id;\n                    currentGroup.messages.push(this.props.history[i]);\n                }\n                else {\n                    groups.push(currentGroup);\n                    currentGroup = {\n                        key: this.props.history[i].id,\n                        date: this.props.history[i].date,\n                        senderUserId: this.props.history[i].sender_user_id,\n                        messages: [this.props.history[i]]\n                    };\n                }\n            }\n            groups.push(currentGroup);\n        }\n\n        this.groups = groups.map(x => {\n            return (<MessageGroup key={x.key} senderUserId={x.senderUserId} messages={x.messages} onSelectChat={this.props.onSelectChat}/>);\n        });*/\n        const { chatId, messageId, wallpaper } = this.state;\n\n        let style = null;\n        let src = null;\n        if (wallpaper) {\n            const { document } = wallpaper;\n            if (document) {\n                const { thumbnail, document: file } = document;\n                if (file) {\n                    src = getSrc(file);\n                }\n\n                if (!src && thumbnail) {\n                    src = getSrc(thumbnail.file);\n                }\n            }\n\n            style = {\n                backgroundImage: src ? `url(${src})` : null\n            }\n        }\n\n        // console.log('[p] dialogDetails.render');\n\n        return (\n            <div className='dialog-details' style={style}>\n                <div className='dialog-background'/>\n                <HeaderPlayer />\n                <Header chatId={chatId} />\n                <MessagesList ref={ref => (this.messagesList = ref)} chatId={chatId} messageId={messageId} />\n                {/*<div className='dialog-background2'/>*/}\n                <Footer chatId={chatId} />\n                <StickerSetDialog />\n                <ChatInfoDialog />\n                {/*<Footer />*/}\n            </div>\n        );\n    }\n}\n\nexport default DialogDetails;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from '../../Utils/HOC';\nimport { withSaveRef } from '../../Utils/HOC';\nimport { withIV } from './IVContext';\nimport { getPageBlock } from '../../Utils/InstantView';\nimport './Article.css';\n\nconst articleRefs = new Map();\n\nclass Article extends React.PureComponent {\n    render() {\n        const { forwardedRef, iv } = this.props;\n        if (!iv) return null;\n\n        const { page_blocks, is_rtl } = iv;\n        if (!page_blocks) return;\n\n        articleRefs.clear();\n        const blocks = page_blocks.map((x, index) => getPageBlock(x, iv, index, ref => { articleRefs.set(x, ref) }));\n\n        return (\n            <article ref={forwardedRef} dir={is_rtl ? 'rtl' : 'ltr'}>\n                {blocks}\n            </article>\n        );\n    }\n}\n\nArticle.propTypes = {\n    chatId: PropTypes.number,\n    messageId: PropTypes.number\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withIV\n);\n\nexport { articleRefs };\n\nexport default enhance(Article);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M9.91421356,11.5 L16.2071068,5.20710678 C16.5976311,4.81658249 16.5976311,4.18341751 16.2071068,3.79289322 C15.8165825,3.40236893 15.1834175,3.40236893 14.7928932,3.79289322 L7.79289322,10.7928932 C7.40236893,11.1834175 7.40236893,11.8165825 7.79289322,12.2071068 L14.7928932,19.2071068 C15.1834175,19.5976311 15.8165825,19.5976311 16.2071068,19.2071068 C16.5976311,18.8165825 16.5976311,18.1834175 16.2071068,17.7928932 L9.91421356,11.5 Z' />,\n    'Left'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport './MediaCaption.css';\n\nclass MediaCaption extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            top: false,\n            bottom: false\n        };\n\n        this.scrollRef = React.createRef();\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { text } = this.props;\n        const { top, bottom } = this.state;\n\n        if (nextProps.text !== text) return true;\n        if (nextState.top !== top) return true;\n        if (nextState.bottom !== bottom) return true;\n\n        return false;\n    }\n\n    componentDidMount() {\n        this.handleScroll();\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { text } = this.props;\n\n        if (prevProps.text !== text) {\n            this.handleScroll();\n        }\n    }\n\n    handleClick = event => {\n        event.stopPropagation();\n    };\n\n    handleScroll = () => {\n        const scroll = this.scrollRef.current;\n        if (!scroll) return;\n\n        const top = scroll.scrollTop === 0 && scroll.scrollHeight > scroll.offsetHeight;\n        const bottom = scroll.scrollTop + scroll.offsetHeight === scroll.scrollHeight && scroll.scrollHeight > scroll.offsetHeight;\n\n        this.setState({\n            top,\n            bottom\n        })\n    };\n\n    render() {\n        const { text } = this.props;\n        const { top, bottom } = this.state;\n\n        return (\n            <div className='media-caption' onClick={this.handleClick}>\n                <div\n                    ref={this.scrollRef}\n                    className={classNames(\n                        'scrollbars-hidden',\n                        'media-caption-wrapper', {\n                            'media-caption-wrapper-top': top,\n                            'media-caption-wrapper-bottom': bottom,\n                            'media-caption-wrapper-both': !top && !bottom\n                        })}\n                    onScroll={this.handleScroll}>\n                    <div className='media-caption-text'>{text}</div>\n                </div>\n            </div>\n        );\n    }\n}\n\nMediaCaption.propTypes = {\n    text: PropTypes.array\n};\n\nMediaCaption.defaultProps = {};\n\nexport default MediaCaption;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport FileProgress from './FileProgress';\nimport MediaCaption from './MediaCaption';\nimport Caption from '../InstantView/Blocks/Caption';\nimport SafeLink from '../Additional/SafeLink';\nimport Player from '../Player/Player';\nimport { getSrc, getViewerFile, getViewerMinithumbnail, getViewerThumbnail } from '../../Utils/File';\nimport { getThumb } from '../../Utils/Media';\nimport { isEmptyText } from '../../Utils/InstantView';\nimport { MEDIA_VIEWER_VIDEO_MAX_SIZE } from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\n\nclass InstantViewMediaViewerContent extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.videoRef = React.createRef();\n\n        this.state = {};\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { media, size, caption, url } = props;\n\n        if (media !== state.prevMedia) {\n            const thumbnail = getViewerThumbnail(media);\n            const minithumbnail = getViewerMinithumbnail(media);\n\n            let [width, height, file, mimeType, supportsStreaming] = getViewerFile(media, size);\n            file = FileStore.get(file.id) || file;\n            let src = getSrc(file);\n            let source = null;\n            if (!src && supportsStreaming) {\n                const { video } = media;\n                if (video) {\n                    src = `/streaming/file?id=${file.id}&size=${file.size}&mime_type=${video.mime_type}`;\n                }\n            }\n\n            return {\n                prevMedia: media,\n\n                speed: 1,\n                isPlaying: false,\n                width,\n                height,\n                file,\n                src,\n                source,\n                supportsStreaming,\n                mimeType,\n                thumbnail,\n                minithumbnail\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        FileStore.on('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateVideoThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        FileStore.on('clientUpdateAnimationThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        PlayerStore.on('clientUpdatePictureInPicture', this.onClientUpdatePictureInPicture);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateVideoThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        FileStore.off('clientUpdateAnimationThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        PlayerStore.off('clientUpdatePictureInPicture', this.onClientUpdatePictureInPicture);\n    }\n\n    onClientUpdatePictureInPicture = update => {\n        const { videoInfo } = update;\n        if (!videoInfo) return;\n\n        const { file } = this.state;\n        if (file.id !== videoInfo.fileId) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateInstantViewViewerContent',\n            content: null\n        });\n    };\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { src } = this.state;\n\n        if (prevState.src !== src) {\n            const player = this.videoRef.current;\n            if (!player) return;\n\n            player.load();\n        }\n    }\n\n    onClientUpdateMediaBlob = update => {\n        const { fileId } = update;\n        const { media, size } = this.props;\n        const { file } = this.state;\n\n        if (file && file.id === fileId) {\n            const [width, height, file, mimeType, supportsStreaming] = getViewerFile(media, size);\n\n            this.setState({\n                width,\n                height,\n                file,\n                src: getSrc(file),\n                supportsStreaming,\n                mimeType\n            });\n        }\n    };\n\n    onClientUpdateMediaThumbnailBlob = update => {\n        const { fileId } = update;\n        const { thumbnail } = this.state;\n\n        if (thumbnail && thumbnail.file.id === fileId) {\n            this.forceUpdate();\n        }\n    };\n\n    render() {\n        const { media, caption, url } = this.props;\n        if (!media) return null;\n\n        const {\n            width,\n            height,\n            file,\n            src,\n            mimeType,\n            thumbnail,\n            minithumbnail,\n            isPlaying,\n            supportsStreaming\n        } = this.state;\n        if (!file) return null;\n\n        const miniSrc = minithumbnail ? 'data:image/jpeg;base64, ' + minithumbnail.data : null;\n        const thumbnailSrc = getSrc(thumbnail);\n\n        let videoWidth = width;\n        let videoHeight = height;\n        const scale = MEDIA_VIEWER_VIDEO_MAX_SIZE / Math.max(videoWidth, videoHeight);\n        const w = videoWidth > videoHeight ? MEDIA_VIEWER_VIDEO_MAX_SIZE : Math.floor(videoWidth * scale);\n        const h = videoHeight > videoWidth ? MEDIA_VIEWER_VIDEO_MAX_SIZE : Math.floor(videoHeight * scale);\n        videoWidth = w;\n        videoHeight = h;\n\n        let content = null;\n        const source = src ? <source src={src} type={mimeType}/> : null;\n        const thumb = getThumb(thumbnail, minithumbnail, videoWidth, videoHeight);\n\n        switch (media['@type']) {\n            case 'video': {\n                content = (\n                    <div className='media-viewer-content-wrapper'>\n                        <Player\n                            ref={this.videoRef}\n                            className='media-viewer-content-video-player'\n                            fileId={file.id}\n                            width={videoWidth}\n                            height={videoHeight}\n                            poster={supportsStreaming ? (thumbnailSrc || miniSrc) : null}\n                            onPlay={() => {\n                                this.setState({ isPlaying: true });\n                            }}\n                        >\n                            {source}\n                        </Player>\n                        {!isPlaying && !supportsStreaming && thumb}\n                    </div>\n                );\n                break;\n            }\n            case 'animation': {\n                // content = (\n                //     <Animation\n                //         type='preview'\n                //         stretch={true}\n                //         displaySize={ANIMATION_PREVIEW_DISPLAY_SIZE}\n                //         animation={media}\n                //         onClick={this.handleContentClick}\n                //         showProgress={false}\n                //         style={{ borderRadius: 0 }}\n                //     />\n                // );\n\n                content = (\n                    <div className='media-viewer-content-wrapper'>\n                        <video\n                            ref={this.videoRef}\n                            className='media-viewer-content-video-player'\n                            onClick={this.handleContentClick}\n                            loop\n                            autoPlay\n                            width={videoWidth}\n                            height={videoHeight}\n                            onPlay={() => {\n                                this.setState({ isPlaying: true });\n                            }}\n                        >\n                            {source}\n                        </video>\n                        {!isPlaying && thumb}\n                    </div>\n                );\n                break;\n            }\n            default: {\n                content = (\n                    <img className='media-viewer-content-image' src={src} alt='' onClick={this.handleContentClick} />\n                );\n            }\n        }\n\n        return (\n            <div className='media-viewer-content'>\n                {content}\n                {!supportsStreaming && <FileProgress file={file} zIndex={2} />}\n                {caption && (!isEmptyText(caption.text) || !isEmptyText(caption.credit) || url) && (\n                    <MediaCaption\n                        text={\n                            <>\n                                <Caption text={caption.text} credit={caption.credit} />\n                                <SafeLink url={url} />\n                            </>\n                        }\n                    />\n                )}\n            </div>\n        );\n    }\n}\n\nInstantViewMediaViewerContent.propTypes = {\n    media: PropTypes.object.isRequired,\n    size: PropTypes.number.isRequired,\n    caption: PropTypes.object,\n    url: PropTypes.string\n};\n\nexport default InstantViewMediaViewerContent;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport './MediaViewerButton.css';\n\nclass MediaViewerButton extends React.Component {\n    handleClick = event => {\n        event.stopPropagation();\n\n        const { disabled, onClick } = this.props;\n\n        if (disabled) return;\n\n        onClick(event);\n    };\n\n    render() {\n        const { disabled, grow, children, className, style } = this.props;\n\n        const cx = classNames(\n            disabled ? 'media-viewer-button-disabled' : 'media-viewer-button',\n            { grow: grow },\n            className\n        );\n\n        return (\n            <div className={cx} style={style} onClick={this.handleClick}>\n                {children}\n            </div>\n        );\n    }\n}\n\nMediaViewerButton.propTypes = {\n    disabled: PropTypes.bool,\n    onClick: PropTypes.func\n};\n\nexport default MediaViewerButton;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport './MediaViewerFooterText.css';\n\nclass MediaViewerFooterText extends React.Component {\n    render() {\n        const { title, subtitle, style } = this.props;\n\n        return (\n            <div className='media-viewer-footer-text' style={style}>\n                <div className='media-viewer-footer-text-wrapper'>\n                    <span>{title}</span>\n                    {Boolean(subtitle) && (\n                        <span>\n                            &nbsp;\n                            {subtitle}\n                        </span>\n                    )}\n                </div>\n            </div>\n        );\n    }\n}\n\nMediaViewerFooterText.propTypes = {\n    title: PropTypes.string,\n    subtitle: PropTypes.string\n};\n\nexport default MediaViewerFooterText;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport './MediaViewerFooterButton.css';\n\nclass MediaViewerFooterButton extends React.Component {\n    handleClick = event => {\n        event.stopPropagation();\n\n        const { onClick, disabled } = this.props;\n\n        if (disabled) return;\n\n        onClick(event);\n    };\n\n    render() {\n        const { checked, children, disabled, title } = this.props;\n\n        return (\n            <div\n                className={classNames('media-viewer-footer-button', {\n                    'media-viewer-footer-button-checked': checked,\n                    'media-viewer-footer-button-disabled': disabled\n                })}\n                title={title}\n                onClick={this.handleClick}>\n                {children}\n            </div>\n        );\n    }\n}\n\nMediaViewerFooterButton.propTypes = {\n    title: PropTypes.string,\n    disabled: PropTypes.bool,\n    checked: PropTypes.bool,\n    onClick: PropTypes.func\n};\n\nexport default MediaViewerFooterButton;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport SaveIcon from '../../Assets/Icons/Download';\nimport MediaViewerFooterButton from './MediaViewerFooterButton';\nimport FileStore from '../../Stores/FileStore';\nimport './MediaViewerFooterButton.css';\n\nclass MediaViewerDownloadButton extends React.Component {\n    state = {  };\n\n    static getDerivedStateFromProps(props, state) {\n        const { fileId } = props;\n        const { prevPropsFileId } = state;\n\n        if (fileId !== prevPropsFileId) {\n            return {\n                prevPropsFileId: fileId,\n                fileId,\n                disabled: MediaViewerDownloadButton.saveDisabled(fileId)\n            };\n        }\n\n        return null;\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (prevProps.fileId !== this.props.chatId) {\n            this.checkFileLoaded();\n        }\n    }\n\n    checkFileLoaded() {\n        // console.log('[down] checkLoaded');\n        const { fileId } = this.props;\n        const blob = FileStore.getBlob(fileId);\n        if (blob) {\n            // console.log('[down] checkLoaded blob');\n            return;\n        }\n\n        const file = FileStore.get(fileId);\n        if (!file) {\n            // console.log('[down] checkLoaded file');\n            return;\n        }\n\n        const { local } = file;\n        if (!local) return;\n        if (!local.is_downloading_completed) return;\n\n        // console.log('[down] checkLoaded getLocal');\n        const store = FileStore.getStore();\n        FileStore.getLocalFile(store, file, null, () => {\n            // console.log('[down] checkLoaded getLocal complete');\n            this.setState({\n                disabled: MediaViewerDownloadButton.saveDisabled(fileId)\n            });\n        });\n    }\n\n    componentDidMount() {\n        this.checkFileLoaded();\n\n        FileStore.on('updateFile', this.onUpdateFile);\n\n        FileStore.on('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateChatBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateDocumentBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateUserBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('updateFile', this.onUpdateFile);\n\n        FileStore.off('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateChatBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateDocumentBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateUserBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\n    }\n\n    onUpdateFile = update => {\n        const { fileId } = this.props;\n        const { file } = update;\n\n        if (file.id !== fileId) return;\n\n        if (file.local.is_downloading_completed) {\n            this.checkFileLoaded();\n        }\n    };\n\n    onClientUpdateMediaBlob = update => {\n        const { fileId } = this.state;\n\n        if (fileId === update.fileId) {\n            this.setState({\n                disabled: MediaViewerDownloadButton.saveDisabled(fileId)\n            });\n        }\n    };\n\n    static saveDisabled = fileId => {\n        return !Boolean(FileStore.getBlob(fileId));\n    };\n\n    handleClick = event => {\n        event.stopPropagation();\n\n        const { onClick } = this.props;\n        const { disabled } = this.state;\n        if (disabled) return;\n\n        onClick(event);\n    };\n\n    render() {\n        const { title, children, disabled: propsDisabled } = this.props;\n        const { disabled } = this.state;\n\n        return (\n            <MediaViewerFooterButton disabled={disabled || propsDisabled} title={title} onClick={this.handleClick}>\n                {children || <SaveIcon />}\n            </MediaViewerFooterButton>\n        );\n    }\n}\n\nMediaViewerDownloadButton.propTypes = {\n    fileId: PropTypes.number.isRequired,\n    onClick: PropTypes.func.isRequired,\n    title: PropTypes.string,\n    disabled: PropTypes.bool\n};\n\nexport default MediaViewerDownloadButton;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { compose } from '../../Utils/HOC';\nimport { withIV } from '../InstantView/IVContext';\nimport { withTranslation } from 'react-i18next';\nimport KeyboardManager, { KeyboardHandler } from '../Additional/KeyboardManager';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport NavigateBeforeIcon from '../../Assets/Icons/Left';\nimport ReplyIcon from '../../Assets/Icons/Share';\nimport InstantViewMediaViewerContent from './InstantViewMediaViewerContent';\nimport MediaViewerButton from './MediaViewerButton';\nimport MediaViewerFooterText from './MediaViewerFooterText';\nimport MediaViewerFooterButton from './MediaViewerFooterButton';\nimport MediaViewerDownloadButton from './MediaViewerDownloadButton';\nimport { getBlockCaption, getBlockMedia, getBlockUrl, getValidBlocks, isValidMediaBlock } from '../../Utils/InstantView';\nimport { cancelPreloadIVMediaViewerContent, getViewerFile, preloadIVMediaViewerContent, saveMedia } from '../../Utils/File';\nimport { getInputMediaContent } from '../../Utils/Media';\nimport { forward, setInstantViewViewerContent } from '../../Actions/Client';\nimport { modalManager } from '../../Utils/Modal';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './InstantViewMediaViewer.css';\n\nclass InstantViewMediaViewer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            index: -1,\n            hasPreviousMedia: false,\n            hasNextMedia: false,\n            blocks: []\n        };\n\n        this.keyboardHandler = new KeyboardHandler(this.onKeyDown);\n    }\n\n    componentDidMount() {\n        this.loadContent();\n\n        KeyboardManager.add(this.keyboardHandler);\n    }\n\n    componentWillUnmount() {\n        KeyboardManager.remove(this.keyboardHandler);\n    }\n\n    onKeyDown = event => {\n        if (modalManager.modals.length > 0) {\n            return;\n        }\n\n        if (event.isComposing) {\n            return;\n        }\n\n        const { index, blocks } = this.state;\n        if (!blocks) return null;\n        if (index === -1) return null;\n\n        const block = blocks[index];\n        const media = getBlockMedia(block);\n        if (!media) return;\n\n        const { key } = event;\n        switch (key) {\n            case 'Escape': {\n                this.handleClose();\n                event.stopPropagation();\n                event.preventDefault();\n                return;\n            }\n            case 'ArrowLeft': {\n                this.handleNext();\n                event.stopPropagation();\n                event.preventDefault();\n                return;\n            }\n            case 'ArrowRight': {\n                this.handlePrevious();\n                event.stopPropagation();\n                event.preventDefault();\n                return;\n            }\n        }\n\n        const isVideo = media['@type'] === 'video';\n        if (isVideo) {\n            TdLibController.clientUpdate({ '@type': 'clientUpdateMediaShortcut', event });\n        }\n    };\n\n    loadContent() {\n        const { iv, media } = this.props;\n\n        const blocks = getValidBlocks(iv, isValidMediaBlock);\n        const index = blocks.findIndex(x => getBlockMedia(x) === media);\n\n        this.setState({\n            blocks,\n            index,\n            hasPreviousMedia: this.hasPreviousMedia(index, blocks),\n            hasNextMedia: this.hasNextMedia(index, blocks)\n        });\n\n        preloadIVMediaViewerContent(index, blocks);\n    }\n\n    hasPreviousMedia(index, blocks) {\n        if (index === -1) return false;\n\n        const nextIndex = index + 1;\n        return nextIndex < blocks.length;\n    }\n\n    handlePrevious = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { index, blocks } = this.state;\n        const nextIndex = index + 1;\n\n        if (!this.hasPreviousMedia(index, blocks)) return;\n\n        return this.loadMedia(nextIndex);\n    };\n\n    hasNextMedia(index, blocks) {\n        if (index === -1) return false;\n\n        const nextIndex = index - 1;\n        return nextIndex >= 0;\n    }\n\n    handleNext = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { index, blocks } = this.state;\n        const nextIndex = index - 1;\n\n        if (!this.hasNextMedia(index, blocks)) return;\n\n        return this.loadMedia(nextIndex);\n    };\n\n    loadMedia = index => {\n        const { blocks } = this.state;\n\n        if (index < 0) return false;\n        if (index >= blocks.length) return false;\n\n        this.setState(\n            {\n                index,\n                hasPreviousMedia: this.hasPreviousMedia(index, blocks),\n                hasNextMedia: this.hasNextMedia(index, blocks)\n            }\n        );\n\n        preloadIVMediaViewerContent(index, blocks);\n        return true;\n    };\n\n    handleClose = () => {\n        setInstantViewViewerContent(null);\n\n        const { index, blocks } = this.state;\n        if (index !== -1) {\n            cancelPreloadIVMediaViewerContent(index, blocks);\n        }\n    };\n\n    handleForward = () => {\n        const { media } = this.props;\n\n        const inputMessageContent = getInputMediaContent(media, null);\n        if (!inputMessageContent) return;\n\n        forward(inputMessageContent);\n    };\n\n    handleSave = () => {\n        const { media } = this.props;\n\n        saveMedia(media, null);\n    };\n\n    handleWrapperMouseDown = event => {\n        this.mouseDownTarget = event.currentTarget;\n    }\n\n    handleWrapperClick = event => {\n        const { mouseDownTarget } = this;\n        this.mouseDownTarget = null;\n\n        if (event.currentTarget !== mouseDownTarget) return;\n\n        this.handleClose();\n    };\n\n    render() {\n        const { size, t } = this.props;\n        const { index, blocks, hasNextMedia, hasPreviousMedia } = this.state;\n        if (!blocks) return null;\n        if (index === -1) return null;\n\n        const block = blocks[index];\n        const media = getBlockMedia(block);\n        const caption = getBlockCaption(block);\n        const url = getBlockUrl(block);\n\n        const [width, height, file] = getViewerFile(media, size);\n\n        let title = '';\n        if (media['@type'] === 'photo') {\n            title = t('AttachPhoto');\n        }\n        if (media['@type'] === 'video') {\n            title = t('AttachVideo');\n        } else if (media['@type'] === 'animation') {\n            title = t('AttachGif');\n        }\n        const maxCount = blocks.length;\n\n        return (\n            <div className={classNames('instant-view-media-viewer', 'media-viewer-default')}>\n                <div className='media-viewer-footer'>\n                    <MediaViewerFooterText\n                        title={title}\n                        subtitle={maxCount && index >= 0 ? `${index + 1} of ${maxCount}` : null}\n                        style={{ marginLeft: 128 }}\n                    />\n                    <MediaViewerDownloadButton title={t('Save')} fileId={file.id} onClick={this.handleSave} />\n                    <MediaViewerFooterButton title={t('Forward')} onClick={this.handleForward}>\n                        <ReplyIcon />\n                    </MediaViewerFooterButton>\n                    <MediaViewerFooterButton title={t('Close')} onClick={this.handleClose}>\n                        <CloseIcon />\n                    </MediaViewerFooterButton>\n                </div>\n                <div className='media-viewer-wrapper' onMouseDown={this.handleWrapperMouseDown} onClick={this.handleWrapperClick}>\n                    <div className='media-viewer-left-column'>\n                        <MediaViewerButton disabled={!hasNextMedia} grow onClick={this.handleNext}>\n                            <NavigateBeforeIcon />\n                        </MediaViewerButton>\n                    </div>\n                    <div className='media-viewer-content-column'>\n                        <InstantViewMediaViewerContent media={media} size={size} caption={caption} url={url} />\n                    </div>\n                    <div className='media-viewer-right-column'>\n                        <MediaViewerButton disabled={!hasPreviousMedia} grow onClick={this.handlePrevious}>\n                            <NavigateBeforeIcon style={{ transform: 'rotate(180deg)' }} />\n                        </MediaViewerButton>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nInstantViewMediaViewer.propTypes = {\n    media: PropTypes.object.isRequired,\n    size: PropTypes.number.isRequired,\n    caption: PropTypes.object.isRequired\n};\n\nconst enhance = compose(\n    withTranslation(),\n    withIV\n);\n\nexport default enhance(InstantViewMediaViewer);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ReactDOM from 'react-dom';\nimport { withTranslation } from 'react-i18next';\nimport KeyboardManager, { KeyboardHandler } from '../Additional/KeyboardManager';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport Article from './Article';\nimport { articleRefs } from './Article';\nimport InstantViewMediaViewer from '../Viewer/InstantViewMediaViewer';\nimport IVContext from './IVContext';\nimport MediaViewerButton from '../Viewer/MediaViewerButton';\nimport NavigateBeforeIcon from '../../Assets/Icons/Left';\nimport { itemsInView, throttle } from '../../Utils/Common';\nimport { getInnerBlocks } from '../../Utils/InstantView';\nimport { openInstantView } from '../../Actions/InstantView';\nimport { setInstantViewContent, setInstantViewViewerContent } from '../../Actions/Client';\nimport { scrollTop } from '../../Utils/DOM';\nimport { modalManager } from '../../Utils/Modal';\nimport { IV_PHOTO_SIZE } from '../../Constants';\nimport InstantViewStore from '../../Stores/InstantViewStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './InstantViewer.css';\n\nclass InstantViewer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.keyboardHandler = new KeyboardHandler(this.onKeyDown);\n        this.articleRef = React.createRef();\n        this.instantViewerRef = React.createRef();\n\n        this.state = {};\n\n        this.updateItemsInView = throttle(this.updateItemsInView, 500);\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.instantView !== state.prevInstantView) {\n            return {\n                prevInstantView: props.instantView,\n                hasPrev: InstantViewStore.hasPrev(),\n                hasScroll: false,\n                media: null,\n                caption: null,\n                url: null\n            };\n        }\n\n        return null;\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { instantView } = this.props;\n        const { hasScroll, hasPrev, media, caption, url } = this.state;\n\n        if (instantView !== nextProps.instantView) {\n            return true;\n        }\n\n        if (hasScroll !== nextState.hasScroll) {\n            return true;\n        }\n\n        if (hasPrev !== nextState.hasPrev) {\n            return true;\n        }\n\n        if (media !== nextState.media) {\n            return true;\n        }\n\n        if (caption !== nextState.caption) {\n            return true;\n        }\n\n        if (url !== nextState.url) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        this.mounted = true;\n        this.handleScroll();\n        this.scrollToBlock(this.props.block, 'smooth');\n\n        KeyboardManager.add(this.keyboardHandler);\n        InstantViewStore.on('clientUpdateInstantViewUrl', this.onClientUpdateInstantViewUrl);\n        InstantViewStore.on('clientUpdateInstantViewViewerContent', this.onClientUpdateInstantViewViewerContent);\n    }\n\n    componentWillUnmount() {\n        this.mounted = false;\n        KeyboardManager.remove(this.keyboardHandler);\n        InstantViewStore.off('clientUpdateInstantViewUrl', this.onClientUpdateInstantViewUrl);\n        InstantViewStore.off('clientUpdateInstantViewViewerContent', this.onClientUpdateInstantViewViewerContent);\n    }\n\n    onClientUpdateInstantViewViewerContent = update => {\n        const { content } = update;\n        if (!content) {\n            this.setState({ media: null, caption: null, url: null });\n            return;\n        }\n\n        const { media, caption, url, instantView } = content;\n\n        if (this.props.instantView !== instantView) return;\n\n        this.setState({ media, caption, url });\n    };\n\n    onClientUpdateInstantViewUrl = async update => {\n        const { url } = update;\n        const active = InstantViewStore.getCurrent();\n        const { instantView, url: oldUrl } = this.props;\n\n        if (active !== instantView) return;\n\n        if (instantView && url.startsWith(oldUrl)) {\n            const hash = new URL(url).hash;\n            if (url.indexOf('#') === url.length - 1) {\n                this.scrollTop('smooth');\n\n                return;\n            } else if (hash && this.scrollToHash(hash, 'smooth')) {\n\n                return;\n            }\n        }\n\n        openInstantView(url);\n    };\n\n    scrollToBlock(block, behavior) {\n        if (!block) return false;\n\n        if (!articleRefs) return false;\n\n        const ref = articleRefs.get(block);\n        if (!ref) return false;\n\n        const element = ReactDOM.findDOMNode(ref);\n        return this.scrollToElement(element, behavior);\n    }\n\n    scrollToElement(element, behavior) {\n        if (!element) return false;\n\n        const details = [];\n        let finished = false;\n        let currentElement = element;\n        do {\n            currentElement = currentElement.parentNode;\n            if (currentElement) {\n                if (currentElement.nodeName === 'DETAILS') {\n                    details.push(currentElement);\n                } else if (currentElement.nodeName === 'ARTICLE') {\n                    finished = true;\n                }\n            } else {\n                finished = true;\n            }\n        } while (!finished);\n\n        details.forEach(x => (x.open = true));\n\n        element.scrollIntoView({\n            block: 'center',\n            behavior\n        });\n\n        return true;\n    }\n\n    scrollToHash(hash, behavior) {\n        if (!hash) return false;\n\n        const element = document.getElementById(hash.substr(1));\n\n        return this.scrollToElement(element, behavior);\n    }\n\n    scrollTop(behavior) {\n        const element = this.instantViewerRef.current;\n\n        switch (behavior) {\n            case 'smooth': {\n                scrollTop(element);\n                break;\n            }\n            default: {\n                element.scrollTo({\n                    top: 0,\n                    behavior\n                });\n            }\n        }\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { instantView, block, url } = this.props;\n\n        const hash = new URL(url).hash;\n        if (prevProps.instantView !== instantView) {\n            if (prevProps.url !== url) {\n                if (url.indexOf('#') === url.length - 1) {\n                    this.scrollTop('auto');\n                } else if (hash) {\n                    this.scrollToHash(hash, 'auto');\n                } else {\n                    this.scrollTop('auto');\n                }\n            } else {\n                if (hash) {\n                    this.scrollToHash(hash, 'auto');\n                } else {\n                    this.scrollTop('smooth');\n                }\n            }\n\n            this.handleScroll();\n        }\n    }\n\n    onKeyDown = event => {\n        if (modalManager.modals.length > 0) {\n            return;\n        }\n\n        if (event.isComposing) {\n            return;\n        }\n\n        switch (event.key) {\n            case 'Escape': {\n                event.stopPropagation();\n                event.preventDefault();\n\n                const { media } = this.state;\n\n                if (media) {\n                    setInstantViewViewerContent(null);\n                    return;\n                }\n\n                this.handleClose();\n                break;\n            }\n        }\n    };\n\n    handleClose() {\n        setInstantViewContent(null);\n    }\n\n    handleBack = () => {\n        const { hasPrev, hasScroll } = this.state;\n        if (hasScroll) {\n            this.scrollTop('smooth');\n            return;\n        }\n\n        if (hasPrev) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdatePrevInstantView'\n            });\n            return;\n        }\n\n        this.handleClose();\n    };\n\n    handleScroll = () => {\n        const element = this.instantViewerRef.current;\n        this.setState({\n            hasScroll: element.scrollTop > 50\n        });\n\n        this.updateItemsInView();\n    };\n\n    updateItemsInView() {\n        if (!this.mounted) return;\n\n        const { instantView } = this.props;\n        if (!instantView) return;\n\n        const { page_blocks } = instantView;\n\n        const blocks = new Map();\n        const items = itemsInView(this.instantViewerRef, this.articleRef);\n\n        for (let i = 0; i < items.length; i++) {\n            const block = page_blocks[items[i]];\n            blocks.set(block, block);\n\n            const innerBlocks = getInnerBlocks(block);\n            innerBlocks.forEach(x => blocks.set(x, x));\n        }\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateBlocksInView',\n            blocks\n        });\n    }\n\n    render() {\n        const { instantView } = this.props;\n        const { hasPrev, hasScroll, media, caption, url } = this.state;\n        if (!instantView) return null;\n\n        return (\n            <IVContext.Provider value={instantView}>\n                <div ref={this.instantViewerRef} className='instant-viewer' onScroll={this.handleScroll}>\n                    <div className='instant-viewer-left-column' onClick={this.handleBack}>\n                        <MediaViewerButton\n                            className='instant-viewer-left-button'\n                            style={{ alignItems: 'flex-start' }}\n                            onClick={this.handleBack}>\n                            <NavigateBeforeIcon\n                                style={{\n                                    transition: 'transform 0.25s ease-out',\n                                    transform: hasScroll ? 'rotate(90deg)' : 'rotate(0deg)'\n                                }}\n                            />\n                        </MediaViewerButton>\n                    </div>\n                    <div className='instant-viewer-content-column'>\n                        <div>\n                            <Article ref={this.articleRef} />\n                        </div>\n                    </div>\n                    <div className='instant-viewer-right-column'>\n                        <MediaViewerButton className='instant-viewer-right-button' onClick={this.handleClose}>\n                            <CloseIcon />\n                        </MediaViewerButton>\n                    </div>\n                </div>\n                {media && <InstantViewMediaViewer media={media} size={IV_PHOTO_SIZE} caption={caption} url={url} />}\n            </IVContext.Provider>\n        );\n    }\n}\n\nInstantViewer.propTypes = {\n    instantView: PropTypes.object.isRequired\n};\n\nexport default withTranslation()(InstantViewer);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { getDateHint, getSenderUserId } from '../../Utils/Message';\nimport UserTile from './UserTile';\nimport ChatTile from './ChatTile';\nimport MessageAuthor from '../Message/MessageAuthor';\nimport MessageStore from '../../Stores/MessageStore';\nimport './MediaInfo.css';\n\nclass MediaInfo extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        const { chatId, messageId } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { date } = message;\n\n        const userId = getSenderUserId(message);\n        const dateHint = getDateHint(date);\n\n        const tileControl = userId ? <UserTile userId={userId} /> : <ChatTile chatId={chatId} />;\n\n        return (\n            <div className='media-info'>\n                <div className='media-info-wrapper'>\n                    {tileControl}\n                    <div className='media-info-content'>\n                        <div className='media-info-row'>\n                            <MessageAuthor chatId={chatId} userId={userId} />\n                        </div>\n                        <div className='media-info-row meta'>\n                            <span>{dateHint}</span>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nMediaInfo.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired\n};\n\nexport default MediaInfo;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport FileProgress from './FileProgress';\nimport MediaCaption from './MediaCaption';\nimport Player from '../Player/Player';\nimport { getMediaFile, getMediaMinithumbnail, getMediaThumbnail, getSrc } from '../../Utils/File';\nimport { getText, isAnimationMessage, isEmbedMessage, isVideoMessage } from '../../Utils/Message';\nimport { getThumb } from '../../Utils/Media';\nimport { MEDIA_VIEWER_VIDEO_MAX_SIZE } from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MediaViewerContent.css';\n\nclass MediaViewerContent extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {};\n\n        this.videoRef = React.createRef();\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { chatId, messageId, size, t } = props;\n\n        if (chatId !== state.prevChatId || messageId !== state.prevMessageId) {\n            const thumbnail = getMediaThumbnail(chatId, messageId);\n            const minithumbnail = getMediaMinithumbnail(chatId, messageId);\n\n            const message = MessageStore.get(chatId, messageId);\n            const text = getText(message, null, t);\n\n            let [width, height, file, mimeType, supportsStreaming] = getMediaFile(chatId, messageId, size);\n            file = FileStore.get(file.id) || file;\n            let src = getSrc(file);\n            let source = null;\n            if (!src && supportsStreaming) {\n                if (isVideoMessage(chatId, messageId)) {\n                    src = `/streaming/file?id=${file.id}&size=${file.size}&mime_type=${mimeType}`;\n                }\n            }\n\n            const { content } = message;\n            const { web_page: webPage } = content;\n\n            return {\n                prevChatId: chatId,\n                prevMessageId: messageId,\n\n                speed: 1,\n                isPlaying: false,\n                width,\n                height,\n                file,\n                src,\n                source,\n                supportsStreaming,\n                mimeType,\n                text,\n                thumbnail,\n                minithumbnail,\n                webPage\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        FileStore.on('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateVideoThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        FileStore.on('clientUpdateAnimationThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n        PlayerStore.on('clientUpdatePictureInPicture', this.onClientUpdatePictureInPicture);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateVideoThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        FileStore.off('clientUpdateAnimationThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\n        PlayerStore.off('clientUpdatePictureInPicture', this.onClientUpdatePictureInPicture);\n    }\n\n    onClientUpdatePictureInPicture = update => {\n        const { videoInfo } = update;\n        if (!videoInfo) return;\n\n        const { file } = this.state;\n        if (file.id !== videoInfo.fileId) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaViewerContent',\n            content: null\n        });\n    };\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { src } = this.state;\n\n        if (prevState.src !== src) {\n            const player = this.videoRef.current;\n            if (!player) return;\n\n            player.load();\n        }\n    }\n\n    onClientUpdateMediaBlob = update => {\n        const { chatId, messageId, size } = this.props;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            let [width, height, file, mimeType, supportsStreaming] = getMediaFile(chatId, messageId, size);\n\n            file = FileStore.get(file.id) || file;\n            let src = getSrc(file);\n            let source = null;\n            if (!src && supportsStreaming) {\n                if (isVideoMessage(chatId, messageId)) {\n                    src = `/streaming/file?id=${file.id}&size=${file.size}&mime_type=${mimeType}`;\n                }\n            }\n\n            this.setState({\n                width,\n                height,\n                file,\n                src,\n                source,\n                supportsStreaming,\n                mimeType\n            });\n        }\n    };\n\n    onClientUpdateMediaThumbnailBlob = update => {\n        const { chatId, messageId } = this.props;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            const thumbnail = getMediaThumbnail(chatId, messageId);\n            this.setState({\n                thumbnail\n            });\n        }\n    };\n\n    onUpdateMessageContent = update => {\n        const { chatId, messageId, size, t } = this.props;\n        const { chat_id, message_id } = update;\n\n        if (chatId === chat_id && messageId === message_id) {\n            const message = MessageStore.get(chatId, messageId);\n            const text = getText(message, null, t);\n\n            const [width, height, file, mimeType, supportsStreaming] = getMediaFile(chatId, messageId, size);\n            let src = getSrc(file);\n            let source = null;\n            if (!src && supportsStreaming) {\n                if (isVideoMessage(chatId, messageId)) {\n                    src = `/streaming/file?id=${file.id}&size=${file.size}&mime_type=${mimeType}`;\n                }\n            }\n\n            this.setState({\n                width,\n                height,\n                file,\n                src,\n                source,\n                supportsStreaming,\n                mimeType,\n                text\n            });\n        }\n    };\n\n    handleContentClick = event => {\n        if (event) event.stopPropagation();\n    };\n\n    handleClick = event => {\n        event.preventDefault();\n        event.stopPropagation();\n\n\n        const { source } = this.state;\n        if (!source) return;\n\n        source.loadNextBuffer();\n    };\n\n\n\n    render() {\n        const { chatId, messageId } = this.props;\n        const {\n            width,\n            height,\n            file,\n            src,\n            supportsStreaming,\n            mimeType,\n            text,\n            minithumbnail,\n            thumbnail,\n            webPage,\n            isPlaying\n        } = this.state;\n\n        if (!file) return null;\n\n        const miniSrc = minithumbnail ? 'data:image/jpeg;base64, ' + minithumbnail.data : null;\n        const thumbnailSrc = getSrc(thumbnail ? thumbnail.file : null);\n\n        const isEmbed = isEmbedMessage(chatId, messageId);\n        const isVideo = isVideoMessage(chatId, messageId);\n        const isAnimation = isAnimationMessage(chatId, messageId);\n\n        let videoWidth = width;\n        let videoHeight = height;\n        const scale = MEDIA_VIEWER_VIDEO_MAX_SIZE / Math.max(videoWidth, videoHeight);\n        const w = videoWidth > videoHeight ? MEDIA_VIEWER_VIDEO_MAX_SIZE : Math.floor(videoWidth * scale);\n        const h = videoHeight > videoWidth ? MEDIA_VIEWER_VIDEO_MAX_SIZE : Math.floor(videoHeight * scale);\n        videoWidth = w;\n        videoHeight = h;\n\n        let content = null;\n        const source = src ? <source src={src} type={mimeType}/> : null;\n        const thumb = getThumb(thumbnail, minithumbnail, videoWidth, videoHeight);\n\n        if (isVideo) {\n            content = (\n                <div className='media-viewer-content-wrapper'>\n                    <Player\n                        ref={this.videoRef}\n                        className='media-viewer-content-video-player'\n                        fileId={file.id}\n                        width={videoWidth}\n                        height={videoHeight}\n                        poster={supportsStreaming ? (thumbnailSrc || miniSrc) : null}\n                        onPlay={() => {\n                            this.setState({ isPlaying: true });\n                        }}\n                    >\n                        {source}\n                    </Player>\n                    {!isPlaying && !supportsStreaming && thumb}\n                </div>\n            );\n        } else if (isAnimation) {\n            // const message = MessageStore.get(chatId, messageId);\n            //\n            // content = (\n            //     <Animation\n            //         type='preview'\n            //         stretch={true}\n            //         displaySize={ANIMATION_PREVIEW_DISPLAY_SIZE}\n            //         animation={message.content.animation || message.content.web_page.animation}\n            //         onClick={this.handleContentClick}\n            //         showProgress={false}\n            //         style={{ borderRadius: 0 }}\n            //         />\n            // );\n\n            content = (\n                <div className='media-viewer-content-wrapper'>\n                    <video\n                        ref={this.videoRef}\n                        className='media-viewer-content-video-player'\n                        onClick={this.handleContentClick}\n                        loop\n                        autoPlay\n                        width={videoWidth}\n                        height={videoHeight}\n                        onPlay={() => {\n                            this.setState({ isPlaying: true });\n                        }}\n                    >\n                        {source}\n                    </video>\n                    {!isPlaying && thumb}\n                </div>\n            );\n        } else if (webPage && webPage.embed_url) {\n            let { embed_url: url } = webPage;\n\n            switch (webPage.site_name) {\n                case 'Coub': {\n                    break;\n                }\n                case 'SoundCloud': {\n                    break;\n                }\n                case 'Spotify': {\n                    break;\n                }\n                case 'Twitch': {\n                    url += `&parent=${window.location.hostname}`;\n                    break;\n                }\n                case 'YouTube': {\n                    url += '?iv_load_policy=3&controls=2&playsinline=1&rel=0&modestbranding=0&autoplay=1&enablejsapi=0&widgetid=1&showinfo=0';\n                    break;\n                }\n                case 'Vimeo': {\n                    url += '?playsinline=true&autoplay=true&dnt=true&title=false';\n                    break;\n                }\n                case 'КиноПоиск': {\n                    break;\n                }\n                case 'Яндекс.Музыка': {\n                    break;\n                }\n            }\n\n            content = (\n                <div className='media-viewer-content-wrapper'>\n                    <iframe src={url} width={videoWidth} height={videoHeight} frameBorder={0} allowFullScreen={true} scrolling='no' style={{ background: 'black' }}/>\n                </div>\n            );\n        } else {\n            content = (\n                <img className='media-viewer-content-image' src={src} alt='' onClick={this.handleContentClick} />\n            );\n        }\n\n        return (\n            <>\n                <div className='media-viewer-content'>\n                    {content}\n                    {!supportsStreaming && <FileProgress file={file} zIndex={2} />}\n                </div>\n                {text && text.length > 0 && !isVideo && !isEmbed && <MediaCaption text={text} />}\n            </>\n        );\n    }\n}\n\nMediaViewerContent.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    size: PropTypes.number.isRequired\n};\n\nexport default withTranslation()(MediaViewerContent);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport KeyboardManager, { KeyboardHandler } from '../Additional/KeyboardManager';\nimport Button from '@material-ui/core/Button';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport NavigateBeforeIcon from '../../Assets/Icons/Left';\nimport ReplyIcon from '../../Assets/Icons/Share';\nimport MediaInfo from '../Tile/MediaInfo';\nimport MediaViewerContent from './MediaViewerContent';\nimport MediaViewerButton from './MediaViewerButton';\nimport MediaViewerFooterText from './MediaViewerFooterText';\nimport MediaViewerFooterButton from './MediaViewerFooterButton';\nimport MediaViewerDownloadButton from './MediaViewerDownloadButton';\nimport { forwardMessages, setMediaViewerContent } from '../../Actions/Client';\nimport {\n    cancelPreloadMediaViewerContent,\n    getMediaFile,\n    loadMediaViewerContent,\n    preloadMediaViewerContent,\n    saveMedia\n} from '../../Utils/File';\nimport {\n    canMessageBeDeleted,\n    filterDuplicateMessages,\n    isAnimationMessage,\n    isEmbedMessage,\n    isMediaContent,\n    isVideoMessage\n} from '../../Utils/Message';\nimport { between } from '../../Utils/Common';\nimport { modalManager } from '../../Utils/Modal';\nimport { PHOTO_BIG_SIZE, MEDIA_SLICE_LIMIT } from '../../Constants';\nimport MessageStore from '../../Stores/MessageStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MediaViewer.css';\n\nclass MediaViewer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.keyboardHandler = new KeyboardHandler(this.onKeyDown);\n        this.history = [];\n\n        const { chatId, messageId } = this.props;\n\n        this.state = {\n            background: 'media-viewer-default',\n            prevChatId: chatId,\n            prevMessageId: messageId,\n            currentMessageId: messageId,\n            hasNextMedia: false,\n            hasPreviousMedia: false,\n            deleteConfirmationOpened: false,\n            deleteForAll: true\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId } = this.props;\n        const {\n            background,\n            currentMessageId,\n            deleteConfirmationOpened,\n            firstSliceLoaded,\n            hasNextMedia,\n            hasPreviousMedia,\n            totalCount\n        } = this.state;\n\n        if (nextState.background !== background) {\n            return true;\n        }\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.messageId !== messageId) {\n            return true;\n        }\n\n        if (nextState.currentMessageId !== currentMessageId) {\n            return true;\n        }\n\n        if (nextState.hasPrevousMedia !== hasPreviousMedia) {\n            return true;\n        }\n\n        if (nextState.hasNextMedia !== hasNextMedia) {\n            return true;\n        }\n\n        if (nextState.firstSliceLoaded !== firstSliceLoaded) {\n            return true;\n        }\n\n        if (nextState.totalCount !== totalCount) {\n            return true;\n        }\n\n        if (nextState.deleteConfirmationOpened !== deleteConfirmationOpened) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        this.loadHistory();\n\n        KeyboardManager.add(this.keyboardHandler);\n        MessageStore.on('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.on('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    componentWillUnmount() {\n        KeyboardManager.remove(this.keyboardHandler);\n        MessageStore.off('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.off('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    onKeyDown = event => {\n        const { chatId } = this.props;\n        const { currentMessageId } = this.state;\n\n        if (modalManager.modals.length > 0) {\n            return;\n        }\n\n        if (event.isComposing) {\n            return;\n        }\n\n        const fullscreenElement = document.fullscreenElement || document.mozFullScreenElement || document.webkitFullscreenElement;\n\n        const { key } = event;\n        switch (key) {\n            case 'Escape': {\n\n                this.handleClose();\n                event.stopPropagation();\n                event.preventDefault();\n                return;\n            }\n            case 'ArrowLeft': {\n                if (!fullscreenElement) {\n                    this.handlePrevious();\n                    event.stopPropagation();\n                    event.preventDefault();\n                    return;\n                }\n                break;\n            }\n            case 'ArrowRight': {\n                if (!fullscreenElement) {\n                    this.handleNext();\n                    event.stopPropagation();\n                    event.preventDefault();\n                    return;\n                }\n                break;\n            }\n        }\n\n        const isVideo = isVideoMessage(chatId, currentMessageId);\n        if (isVideo) {\n            TdLibController.clientUpdate({ '@type': 'clientUpdateMediaShortcut', event });\n        }\n    };\n\n    onUpdateMessageContent = update => {\n        const { chat_id, message_id, new_content, old_content } = update;\n        const { chatId } = this.props;\n        const { currentMessageId, totalCount } = this.state;\n\n        if (chatId !== chat_id) return;\n\n        const message = MessageStore.get(chat_id, message_id);\n        if (!message) return;\n\n        loadMediaViewerContent([message]);\n\n        const addMessage = isMediaContent(new_content) && !isMediaContent(old_content);\n        if (addMessage) {\n            if (\n                this.history.length >= 2 &&\n                (this.firstSliceLoaded ||\n                    between(message_id, this.history[0].id, this.history[this.history.length - 1].id))\n            ) {\n                let inserted = false;\n                let history = [];\n                for (let i = 0; i < this.history.length; i++) {\n                    if (this.history[i].id > message_id) {\n                        history.push(this.history[i]);\n                    } else {\n                        if (!inserted) {\n                            inserted = true;\n                            history.push(message);\n                        }\n                        history.push(this.history[i]);\n                    }\n                }\n                this.history = history;\n            }\n\n            const index = this.history.findIndex(x => x.id === currentMessageId);\n            this.setState({\n                hasNextMedia: this.hasNextMedia(index),\n                hasPreviousMedia: this.hasPreviousMedia(index),\n                totalCount: totalCount + 1\n            });\n        }\n\n        const removeMessage = !isMediaContent(new_content) && isMediaContent(old_content);\n        if (removeMessage) {\n            let oldHistory = this.history;\n            this.history = this.history.filter(x => x.id !== message_id);\n\n            if (currentMessageId === message_id) {\n                const filterMap = new Map();\n                filterMap.set(message_id, message_id);\n\n                this.moveToNextMedia(oldHistory, filterMap);\n                this.setState({\n                    totalCount: Math.max(totalCount - 1, 0)\n                });\n            } else {\n                const index = this.history.findIndex(x => x.id === currentMessageId);\n                this.setState({\n                    hasNextMedia: this.hasNextMedia(index),\n                    hasPreviousMedia: this.hasPreviousMedia(index),\n                    totalCount: Math.max(totalCount - 1, 0)\n                });\n            }\n        }\n    };\n\n    onUpdateDeleteMessages = update => {\n        const { chat_id, message_ids, is_permanent } = update;\n        const { chatId } = this.props;\n        const { currentMessageId, totalCount } = this.state;\n\n        if (!is_permanent) return;\n        if (chatId !== chat_id) return;\n\n        const filterMap = message_ids.reduce((accumulator, currentId) => {\n            accumulator.set(currentId, currentId);\n            return accumulator;\n        }, new Map());\n\n        const oldHistory = this.history;\n        let deletedCount = oldHistory.length;\n\n        this.history = this.history.filter(x => !filterMap.has(x.id));\n        deletedCount -= this.history.length;\n\n        this.setState({ totalCount: Math.max(totalCount - deletedCount, 0) });\n\n        if (!this.history.length) {\n            setMediaViewerContent(null);\n            return;\n        }\n\n        if (filterMap.has(currentMessageId)) {\n            this.moveToNextMedia(oldHistory, filterMap);\n        }\n    };\n\n    onUpdateNewMessage = update => {\n        const { chatId } = this.props;\n        const { currentMessageId, totalCount } = this.state;\n\n        const { message } = update;\n        if (!message) return;\n        if (!isMediaContent(message.content)) return;\n\n        if (message.chat_id !== chatId) return;\n        if (!this.firstSliceLoaded) return;\n\n        this.history = [message].concat(this.history);\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n\n        this.setState({\n            hasNextMedia: this.hasNextMedia(index),\n            hasPreviousMedia: this.hasPreviousMedia(index),\n            totalCount: totalCount + 1\n        });\n    };\n\n    getFilter = (chatId, messageId) => {\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { content } = message;\n        if (!content) return null;\n\n        switch (content['@type']) {\n            case 'messageChatChangePhoto': {\n                return {\n                    '@type': 'searchMessagesFilterChatPhoto'\n                };\n            }\n            case 'messagePhoto': {\n                return {\n                    '@type': 'searchMessagesFilterPhotoAndVideo'\n                };\n            }\n            case 'messageVideo': {\n                return {\n                    '@type': 'searchMessagesFilterPhotoAndVideo'\n                };\n            }\n            default: {\n                return null;\n            }\n        }\n    };\n\n    loadHistory = async () => {\n        const { chatId, messageId } = this.props;\n\n        const filter = this.getFilter(chatId, messageId);\n\n        let result = {\n            '@type': 'messages',\n            messages: [],\n            total_count: 0\n        };\n        if (filter) {\n            result = await TdLibController.send({\n                '@type': 'searchChatMessages',\n                chat_id: chatId,\n                query: '',\n                sender_user_id: 0,\n                from_message_id: messageId,\n                offset: -MEDIA_SLICE_LIMIT,\n                limit: 2 * MEDIA_SLICE_LIMIT,\n                filter: filter\n            });\n        }\n\n        filterDuplicateMessages(result, this.history);\n        MessageStore.setItems(result.messages);\n\n        this.history = result.messages;\n        this.firstSliceLoaded = result.messages.length === 0;\n\n        const { currentMessageId } = this.state;\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n\n        this.setState({\n            hasNextMedia: this.hasNextMedia(index),\n            hasPreviousMedia: this.hasPreviousMedia(index)\n        });\n\n        if (index === -1) {\n            this.history = [MessageStore.get(chatId, currentMessageId)];\n            preloadMediaViewerContent(0, this.history);\n        } else {\n            preloadMediaViewerContent(index, this.history);\n\n            const filter = this.getFilter(chatId, messageId);\n            if (!filter) return;\n\n            const maxCount = 1500;\n            let count = 0;\n            while (!this.firstSliceLoaded && count < maxCount) {\n                const result = await TdLibController.send({\n                    '@type': 'searchChatMessages',\n                    chat_id: chatId,\n                    query: '',\n                    sender_user_id: 0,\n                    from_message_id: this.history.length > 0 ? this.history[0].id : 0,\n                    offset: -99,\n                    limit: 99 + 1,\n                    filter: filter\n                });\n                count += result.messages.length;\n\n                filterDuplicateMessages(result, this.history);\n                MessageStore.setItems(result.messages);\n\n                this.history = result.messages.concat(this.history);\n                this.firstSliceLoaded = result.messages.length === 0;\n\n                const { currentMessageId } = this.state;\n                const index = this.history.findIndex(x => x.id === currentMessageId);\n\n                this.setState({\n                    hasNextMedia: this.hasNextMedia(index),\n                    hasPreviousMedia: this.hasPreviousMedia(index),\n                    firstSliceLoaded: this.firstSliceLoaded,\n                    totalCount: result.total_count\n                });\n            }\n        }\n    };\n\n    handleClose = () => {\n        setMediaViewerContent(null);\n\n        const { currentMessageId } = this.state;\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n        if (index !== -1) {\n            cancelPreloadMediaViewerContent(index, this.history);\n        }\n    };\n\n    handleSave = () => {\n        const { chatId } = this.props;\n        const { currentMessageId } = this.state;\n\n        const message = MessageStore.get(chatId, currentMessageId);\n        if (!message) return;\n\n        const { content } = message;\n        if (!content) return;\n\n        let media = null;\n        switch (content['@type']) {\n            case 'messageAnimation': {\n                const { animation } = content;\n\n                media = animation;\n                break;\n            }\n            case 'messageChatChangePhoto': {\n                const { photo } = content;\n\n                media = photo;\n                break;\n            }\n            case 'messageDocument': {\n                const { document } = content;\n\n                media = document;\n                break;\n            }\n            case 'messagePhoto': {\n                const { photo } = content;\n\n                media = photo;\n                break;\n            }\n            case 'messageText': {\n                const { web_page } = content;\n                if (!web_page) return;\n\n                const { animation, document, photo, video } = web_page;\n\n                if (animation) {\n                    media = animation;\n                    break;\n                }\n\n                if (document) {\n                    media = document;\n                    break;\n                }\n\n                if (photo) {\n                    media = photo;\n                    break;\n                }\n\n                if (video) {\n                    media = video;\n                    break;\n                }\n                break;\n            }\n            case 'messageVideo': {\n                const { video } = content;\n\n                media = video;\n                break;\n            }\n        }\n\n        saveMedia(media, message);\n    };\n\n    handleForward = () => {\n        const { chatId } = this.props;\n        const { currentMessageId } = this.state;\n\n        forwardMessages(chatId, [currentMessageId]);\n    };\n\n    handleDelete = () => {\n        this.handleDialogOpen();\n    };\n\n    hasPreviousMedia = index => {\n        if (index === -1) return false;\n\n        const nextIndex = index + 1;\n        return nextIndex < this.history.length;\n    };\n\n    handlePrevious = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { currentMessageId } = this.state;\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n        const nextIndex = index + 1;\n\n        return this.loadMedia(nextIndex, () => {\n            if (nextIndex === this.history.length - 1) {\n                this.loadPrevious();\n            }\n        });\n    };\n\n    loadPrevious = async () => {\n        const { chatId, messageId } = this.props;\n        const { currentMessageId } = this.state;\n\n        const filter = this.getFilter(chatId, messageId);\n\n        let result = {\n            '@type': 'messages',\n            messages: [],\n            total_count: 0\n        };\n        if (filter) {\n            result = await TdLibController.send({\n                '@type': 'searchChatMessages',\n                chat_id: chatId,\n                query: '',\n                sender_user_id: 0,\n                from_message_id: currentMessageId,\n                offset: 0,\n                limit: MEDIA_SLICE_LIMIT,\n                filter: filter\n            });\n        }\n\n        filterDuplicateMessages(result, this.history);\n        MessageStore.setItems(result.messages);\n\n        this.history = this.history.concat(result.messages);\n\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n\n        this.setState({\n            hasNextMedia: this.hasNextMedia(index),\n            hasPreviousMedia: this.hasPreviousMedia(index),\n            totalCount: result.total_count\n        });\n    };\n\n    hasNextMedia = index => {\n        if (index === -1) return false;\n\n        const nextIndex = index - 1;\n        return nextIndex >= 0;\n    };\n\n    handleNext = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { currentMessageId } = this.state;\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n        const nextIndex = index - 1;\n\n        return this.loadMedia(nextIndex, () => {\n            if (nextIndex === 0) {\n                this.loadNext();\n            }\n        });\n    };\n\n    loadNext = async () => {\n        const { chatId, messageId } = this.props;\n        const { currentMessageId } = this.state;\n\n        const filter = this.getFilter(chatId, messageId);\n\n        let result = {\n            '@type': 'messages',\n            messages: [],\n            total_count: 0\n        };\n        if (filter) {\n            result = await TdLibController.send({\n                '@type': 'searchChatMessages',\n                chat_id: chatId,\n                query: '',\n                sender_user_id: 0,\n                from_message_id: currentMessageId,\n                offset: -MEDIA_SLICE_LIMIT,\n                limit: MEDIA_SLICE_LIMIT + 1,\n                filter: filter\n            });\n        }\n\n        filterDuplicateMessages(result, this.history);\n        MessageStore.setItems(result.messages);\n\n        this.firstSliceLoaded = result.messages.length === 0;\n        this.history = result.messages.concat(this.history);\n\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n\n        this.setState({\n            hasNextMedia: this.hasNextMedia(index),\n            hasPreviousMedia: this.hasPreviousMedia(index),\n            firstSliceLoaded: this.firstSliceLoaded,\n            totalCount: result.total_count\n        });\n    };\n\n    loadMedia = (index, callback) => {\n        if (index < 0) return false;\n        if (index >= this.history.length) return false;\n\n        this.setState(\n            {\n                currentMessageId: this.history[index].id,\n                hasNextMedia: this.hasNextMedia(index),\n                hasPreviousMedia: this.hasPreviousMedia(index)\n            },\n            callback\n        );\n\n        preloadMediaViewerContent(index, this.history);\n        return true;\n    };\n\n    moveToNextMedia = (oldHistory, filterMap) => {\n        const { currentMessageId } = this.state;\n\n        const index = oldHistory.findIndex(x => x.id === currentMessageId);\n        let nextId = 0;\n        for (let i = index - 1; i >= 0; i--) {\n            if (filterMap && !filterMap.has(oldHistory[i].id)) {\n                nextId = oldHistory[i].id;\n                break;\n            }\n        }\n        if (!nextId) {\n            for (let i = index + 1; i < oldHistory.length; i++) {\n                if (filterMap && !filterMap.has(oldHistory[i].id)) {\n                    nextId = oldHistory[i].id;\n                    break;\n                }\n            }\n        }\n\n        if (!nextId) return;\n\n        const nextIndex = this.history.findIndex(x => x.id === nextId);\n\n        return this.loadMedia(nextIndex, () => {\n            if (nextIndex === 0) {\n                this.loadNext();\n            } else if (nextIndex === this.history.length - 1) {\n                this.loadPrevious();\n            }\n        });\n    };\n\n    handleDialogOpen = () => {\n        this.setState({ deleteConfirmationOpened: true });\n    };\n\n    handleDialogClose = () => {\n        this.setState({ deleteConfirmationOpened: false });\n    };\n\n    handleDone = () => {\n        this.setState({ deleteConfirmationOpened: false });\n\n        const { chatId } = this.props;\n        const { currentMessageId, deleteForAll } = this.state;\n\n        const message = MessageStore.get(chatId, currentMessageId);\n        if (!message) return;\n\n        const { can_be_deleted_only_for_self, can_be_deleted_for_all_users } = message;\n        const canBeDeleted = can_be_deleted_only_for_self || can_be_deleted_for_all_users;\n        if (!canBeDeleted) return;\n\n        TdLibController.send({\n            '@type': 'deleteMessages',\n            chat_id: chatId,\n            message_ids: [currentMessageId],\n            revoke: can_be_deleted_for_all_users && deleteForAll\n        });\n    };\n\n    handleChangeDeleteForAll = event => {\n        this.setState({ deleteForAll: event.target.checked });\n    };\n\n    handleInvertColors = () => {\n        const { background } = this.state;\n\n        let nextBackground = 'media-viewer-default';\n        switch (background) {\n            case 'media-viewer-default': {\n                nextBackground = 'media-viewer-dark';\n                break;\n            }\n            case 'media-viewer-dark': {\n                nextBackground = 'media-viewer-light';\n                break;\n            }\n            case 'media-viewer-light': {\n                nextBackground = 'media-viewer-default';\n                break;\n            }\n        }\n\n        this.setState({\n            background: nextBackground\n        });\n    };\n\n    canBeForwarded = (chatId, messageId) => {\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return false;\n\n        const { can_be_forwarded, content } = message;\n        if (!content) return false;\n\n        switch (content['@type']) {\n            case 'messageChatChangePhoto': {\n                return true;\n            }\n            default: {\n                return can_be_forwarded;\n            }\n        }\n    };\n\n    handleWrapperMouseDown = event => {\n        this.mouseDownTarget = event.currentTarget;\n    }\n\n    handleWrapperClick = event => {\n        const { mouseDownTarget } = this;\n        this.mouseDownTarget = null;\n\n        if (event.currentTarget !== mouseDownTarget) return;\n\n        this.handleClose();\n    };\n\n    render() {\n        const { chatId, t } = this.props;\n        const {\n            background,\n            currentMessageId,\n            deleteConfirmationOpened,\n            deleteForAll,\n            firstSliceLoaded,\n            hasNextMedia,\n            hasPreviousMedia,\n            totalCount\n        } = this.state;\n\n        let index = -1;\n        if (totalCount && firstSliceLoaded) {\n            index = this.history.findIndex(x => x.id === currentMessageId);\n        }\n        const maxCount = Math.max(this.history.length, totalCount);\n\n        const message = MessageStore.get(chatId, currentMessageId);\n        const { can_be_deleted_for_all_users } = message;\n\n        const canBeDeleted = canMessageBeDeleted(chatId, currentMessageId);\n        const canBeForwarded = this.canBeForwarded(chatId, currentMessageId);\n\n        let deleteConfirmationContent = '';\n        if (isVideoMessage(chatId, currentMessageId)) {\n            deleteConfirmationContent = t('AreYouSureDeleteVideo');\n        } else if (isAnimationMessage(chatId, currentMessageId)) {\n            deleteConfirmationContent = t('AreYouSureDeleteGIF');\n        } else {\n            deleteConfirmationContent = t('AreYouSureDeletePhoto');\n        }\n        const deleteConfirmation = deleteConfirmationOpened ? (\n            <Dialog\n                manager={modalManager}\n                transitionDuration={0}\n                open={deleteConfirmationOpened}\n                onClose={this.handleDialogClose}\n                aria-labelledby='form-dialog-title'>\n                <DialogTitle id='form-dialog-title'>{t('Confirm')}</DialogTitle>\n                <DialogContent>\n                    <DialogContentText>{deleteConfirmationContent}</DialogContentText>\n                    {can_be_deleted_for_all_users && (\n                        <FormControlLabel\n                            label={t('DeleteForAll')}\n                            control={\n                                <Checkbox color='primary' value='deleteAll' onChange={this.handleChangeDeleteForAll} />\n                            }\n                            checked={deleteForAll}\n                        />\n                    )}\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={this.handleDialogClose} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={this.handleDone} color='primary'>\n                        {t('Ok')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        ) : null;\n\n        const [width, height, file, mimeType] = getMediaFile(chatId, currentMessageId, PHOTO_BIG_SIZE);\n\n        const fileId = file ? file.id : 0;\n        let title = t('AttachPhoto');\n        if (isEmbedMessage(chatId, currentMessageId)) {\n            title = '';\n        } else if (isVideoMessage(chatId, currentMessageId)) {\n            title = t('AttachVideo');\n        } else if (isAnimationMessage(chatId, currentMessageId)) {\n            title = t('AttachGif');\n        }\n\n        return (\n            <div className={classNames('media-viewer', background)}>\n                <div className='media-viewer-footer'>\n                    <MediaInfo chatId={chatId} messageId={currentMessageId} />\n                    <MediaViewerFooterText\n                        title={title}\n                        subtitle={maxCount && index >= 0 ? `${maxCount - index} of ${maxCount}` : null}\n                    />\n                    <MediaViewerDownloadButton title={t('Save')} fileId={fileId} disabled={isEmbedMessage(chatId, currentMessageId)} onClick={this.handleSave} />\n                    <MediaViewerFooterButton\n                        title={t('Forward')}\n                        disabled={!canBeForwarded}\n                        onClick={this.handleForward}>\n                        <ReplyIcon />\n                    </MediaViewerFooterButton>\n                    <MediaViewerFooterButton title={t('Delete')} disabled={!canBeDeleted} onClick={this.handleDelete}>\n                        <DeleteIcon />\n                    </MediaViewerFooterButton>\n                    <MediaViewerFooterButton title={t('Close')} onClick={this.handleClose}>\n                        <CloseIcon />\n                    </MediaViewerFooterButton>\n                </div>\n                <div className='media-viewer-wrapper' onMouseDown={this.handleWrapperMouseDown} onClick={this.handleWrapperClick}>\n                    <div className='media-viewer-left-column'>\n                        <MediaViewerButton disabled={!hasPreviousMedia} grow onClick={this.handlePrevious}>\n                            <NavigateBeforeIcon />\n                        </MediaViewerButton>\n                    </div>\n\n                    <div className='media-viewer-content-column'>\n                        <MediaViewerContent\n                            chatId={chatId}\n                            messageId={currentMessageId}\n                            size={PHOTO_BIG_SIZE}\n                            onClick={this.handlePrevious}\n                        />\n                    </div>\n\n                    <div className='media-viewer-right-column'>\n                        <MediaViewerButton disabled={!hasNextMedia} grow onClick={this.handleNext}>\n                            <NavigateBeforeIcon style={{ transform: 'rotate(180deg)' }} />\n                        </MediaViewerButton>\n                    </div>\n                </div>\n                <div className='media-viewer-footer'/>\n                {deleteConfirmation}\n            </div>\n        );\n    }\n}\n\nMediaViewer.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired\n};\n\nexport default withTranslation()(MediaViewer);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport FileProgress from './FileProgress';\nimport { getChatUserId } from '../../Utils/Chat';\nimport { PROFILE_PHOTO_BIG_SIZE } from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport './ProfileMediaViewer.css';\n\nclass ProfileMediaViewerContent extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId, photo } = this.props;\n\n        let { big: file } = photo;\n        file = FileStore.get(file.id) || file;\n\n        this.state = {\n            prevChatId: chatId,\n            prevPhoto: photo,\n            width: PROFILE_PHOTO_BIG_SIZE,\n            height: PROFILE_PHOTO_BIG_SIZE,\n            file: file\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { chatId, photo } = props;\n\n        if (chatId !== state.prevChatId || photo !== state.prevPhoto) {\n            return {\n                prevChatId: chatId,\n                prevPhoto: photo,\n                width: PROFILE_PHOTO_BIG_SIZE,\n                height: PROFILE_PHOTO_BIG_SIZE,\n                file: photo.big\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        FileStore.on('clientUpdateChatBlob', this.onClientUpdateChatBlob);\n        FileStore.on('clientUpdateUserBlob', this.onClientUpdateUserBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdateChatBlob', this.onClientUpdateChatBlob);\n        FileStore.off('clientUpdateUserBlob', this.onClientUpdateUserBlob);\n    }\n\n    onClientUpdateChatBlob = update => {\n        const { chatId, photo } = this.props;\n\n        if (chatId === update.chatId && photo.big.id === update.fileId) {\n            const file = FileStore.get(update.fileId) || this.state.file;\n            this.setState({\n                file\n            });\n        }\n    };\n\n    onClientUpdateUserBlob = update => {\n        const { chatId, photo } = this.props;\n        const userId = getChatUserId(chatId);\n\n        if (userId === update.userId && photo.big.id === update.fileId) {\n            const file = FileStore.get(update.fileId) || this.state.file;\n            this.setState({\n                file\n            });\n        }\n    };\n\n    handleContentClick = event => {\n        if (event) event.stopPropagation();\n\n        const { onClose } = this.props;\n\n        onClose && onClose(event);\n    };\n\n    handlePhotoClick = event => {\n        if (event) event.stopPropagation();\n\n        const { onPrevious } = this.props;\n\n        onPrevious && onPrevious(event);\n    };\n\n    render() {\n        const { file } = this.state;\n        if (!file) return null;\n\n        const blob = FileStore.getBlob(file.id) || file.blob;\n        const src = FileStore.getBlobUrl(blob);\n\n        return (\n            <div className='media-viewer-content' onClick={this.handleContentClick} >\n                <img className='media-viewer-content-image' src={src} alt='' onClick={this.handlePhotoClick}/>\n                <FileProgress file={file} />\n            </div>\n        );\n    }\n}\n\nProfileMediaViewerContent.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    photo: PropTypes.object.isRequired,\n\n    onClose: PropTypes.func,\n    onPrevious: PropTypes.func\n};\n\nexport default ProfileMediaViewerContent;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ChatTile from './ChatTile';\nimport MessageAuthor from '../Message/MessageAuthor';\nimport './MediaInfo.css';\n\nclass ProfileMediaInfo extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        const { chatId, date } = this.props;\n\n        return (\n            <div className='media-info'>\n                <div className='media-info-wrapper'>\n                    <ChatTile chatId={chatId} showSavedMessages={false} />\n                    <div className='media-info-content'>\n                        <div className='media-info-row'>\n                            <MessageAuthor chatId={chatId} />\n                        </div>\n                        {date && (\n                            <div className='media-info-row meta'>\n                                <span>{date}</span>\n                            </div>\n                        )}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nProfileMediaInfo.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    date: PropTypes.string\n};\n\nexport default ProfileMediaInfo;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport KeyboardManager, { KeyboardHandler } from '../Additional/KeyboardManager';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport NavigateBeforeIcon from '../../Assets/Icons/Left';\nimport ReplyIcon from '../../Assets/Icons/Share';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport MediaViewerDownloadButton from './MediaViewerDownloadButton';\nimport MediaViewerButton from './MediaViewerButton';\nimport MediaViewerFooterText from './MediaViewerFooterText';\nimport MediaViewerFooterButton from './MediaViewerFooterButton';\nimport ProfileMediaViewerContent from './ProfileMediaViewerContent';\nimport ProfileMediaInfo from '../Tile/ProfileMediaInfo';\nimport { forward, setProfileMediaViewerContent } from '../../Actions/Client';\nimport { getPhotoFromChat, getChatUserId, isPrivateChat, isMeChat } from '../../Utils/Chat';\nimport { getProfilePhotoDateHint, getProfilePhoto } from '../../Utils/User';\nimport { loadProfileMediaViewerContent, preloadProfileMediaViewerContent, saveOrDownload } from '../../Utils/File';\nimport { modalManager } from '../../Utils/Modal';\nimport { PROFILE_PHOTO_BIG_SIZE } from '../../Constants';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './ProfileMediaViewer.css';\n\nclass ProfileMediaViewer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.history = [];\n        this.keyboardHandler = new KeyboardHandler(this.handleKeyDown);\n\n        const { chatId, fileId } = this.props;\n\n        this.state = {\n            prevChatId: chatId,\n            prevFileId: fileId,\n            currentIndex: 0,\n            hasNextMedia: false,\n            hasPreviousMedia: false,\n            deleteConfirmationOpened: false\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId } = this.props;\n        const {\n            currentFileId,\n            hasPreviousMedia,\n            hasNextMedia,\n            firstSliceLoaded,\n            totalCount,\n            deleteConfirmationOpened\n        } = this.state;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.messageId !== messageId) {\n            return true;\n        }\n\n        if (nextState.currentFileId !== currentFileId) {\n            return true;\n        }\n\n        if (nextState.hasPrevousMedia !== hasPreviousMedia) {\n            return true;\n        }\n\n        if (nextState.hasNextMedia !== hasNextMedia) {\n            return true;\n        }\n\n        if (nextState.firstSliceLoaded !== firstSliceLoaded) {\n            return true;\n        }\n\n        if (nextState.totalCount !== totalCount) {\n            return true;\n        }\n\n        if (nextState.deleteConfirmationOpened !== deleteConfirmationOpened) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        const { chatId } = this.props;\n        const photo = getPhotoFromChat(chatId);\n        loadProfileMediaViewerContent(chatId, [photo]);\n\n        this.loadHistory(photo);\n\n        KeyboardManager.add(this.keyboardHandler);\n    }\n\n    componentWillUnmount() {\n        KeyboardManager.remove(this.keyboardHandler);\n    }\n\n    handleKeyDown = event => {\n        if (modalManager.modals.length > 0) {\n            return;\n        }\n\n        if (event.isComposing) {\n            return;\n        }\n\n        switch (event.key) {\n            case 'Escape': {\n                this.handleClose();\n                event.preventDefault();\n                event.stopPropagation();\n                return;\n            }\n            case 'ArrowLeft': {\n                this.handleNext();\n                event.stopPropagation();\n                event.preventDefault();\n                return;\n            }\n            case 'ArrowRight': {\n                this.handlePrevious();\n                event.stopPropagation();\n                event.preventDefault();\n                return;\n            }\n        }\n    };\n\n    loadHistory = async () => {\n        const { chatId } = this.props;\n\n        if (!isPrivateChat(chatId)) return;\n\n        const result = await TdLibController.send({\n            '@type': 'getUserProfilePhotos',\n            user_id: getChatUserId(chatId),\n            offset: 0,\n            limit: 100\n        });\n\n        this.history = result.photos;\n        this.firstSliceLoaded = result.photos.length === 0;\n\n        const index = 0;\n\n        this.setState({\n            currentIndex: index,\n            hasNextMedia: this.hasNextMedia(index),\n            hasPreviousMedia: this.hasPreviousMedia(index),\n            totalCount: result.total_count\n        });\n\n        preloadProfileMediaViewerContent(chatId, index, this.history);\n    };\n\n    handleClose = () => {\n        setProfileMediaViewerContent(null);\n    };\n\n    handleSave = () => {\n        const { chatId } = this.props;\n        const { currentIndex, totalCount } = this.state;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        let index = -1;\n        if (totalCount) {\n            index = currentIndex;\n        }\n\n        const photo =\n            index > 0 && index < this.history.length ? getProfilePhoto(this.history[index]) : getPhotoFromChat(chatId);\n        if (!photo) return;\n        if (!photo.big) return;\n\n        const file = FileStore.get(photo.big.id) || photo.big;\n        if (!file) return;\n\n        saveOrDownload(file, file.id + '.jpg', chat, () => FileStore.updateChatPhotoBlob(chatId, file.id));\n    };\n\n    handleForward = () => {\n        const { chatId } = this.props;\n        const { currentIndex, totalCount } = this.state;\n\n        let index = -1;\n        if (totalCount) {\n            index = currentIndex;\n        }\n\n        let inputFile = null;\n        let inputMessagePhoto = null;\n        const inHistory = this.history && index >= 0 && index < this.history.length;\n        if (inHistory) {\n            const photo = getProfilePhoto(this.history[index]);\n            if (!photo) return;\n\n            let { big: file } = photo;\n            if (!file) return;\n\n            inputFile = {\n                '@type': 'inputFileId',\n                id: file.id\n            };\n        } else {\n            const chatPhoto = getPhotoFromChat(chatId);\n            if (!chatPhoto) return;\n\n            const { big: file } = chatPhoto;\n            if (!file) return;\n\n            const blob = FileStore.getBlob(file.id);\n            if (!blob) return;\n\n            inputFile = {\n                '@type': 'inputFileBlob',\n                data: blob,\n                name: ''\n            };\n        }\n\n        if (!inputFile) return;\n\n        const inputMessageContent = {\n            '@type': 'inputMessagePhoto',\n            photo: inputFile,\n            thumbnail: null,\n            added_sticker_file_ids: [],\n            width: PROFILE_PHOTO_BIG_SIZE,\n            height: PROFILE_PHOTO_BIG_SIZE,\n            caption: {\n                '@type': 'formattedText',\n                text: '',\n                entities: null\n            },\n            ttl: 0\n        };\n\n        forward(inputMessageContent);\n    };\n\n    handleDelete = async () => {\n        const { chatId } = this.props;\n        const {\n            currentIndex,\n            totalCount,\n            hasNextMedia,\n            hasPreviousMedia\n        } = this.state;\n\n        let index = -1;\n        if (totalCount) {\n            index = currentIndex;\n        }\n\n        const photo = index > 0 && index < this.history.length ? getProfilePhoto(this.history[index]) : getPhotoFromChat(chatId);\n        if (!photo) return;\n\n        const { id } = photo;\n        if (!id) return;\n\n        await TdLibController.send({\n            '@type': 'deleteProfilePhoto',\n            profile_photo_id: id\n        });\n\n        this.history.splice(index, 1);\n        if (!this.history.length) {\n            this.handleClose();\n            return;\n        }\n\n        this.setState({\n            totalCount: totalCount - 1\n        });\n\n        if (hasNextMedia) {\n            const nextIndex = currentIndex - 1;\n\n            return this.loadMedia(nextIndex, { totalCount: totalCount - 1 }, () => {\n                if (nextIndex === 0) {\n                    this.loadNext();\n                }\n            });\n        }\n\n        if (hasPreviousMedia) {\n            const nextIndex = currentIndex;\n\n            return this.loadMedia(nextIndex, { totalCount: totalCount - 1 }, () => {\n                if (nextIndex === this.history.length - 1) {\n                    this.loadPrevious();\n                }\n            });\n        }\n    };\n\n    hasPreviousMedia = index => {\n        if (index === -1) return false;\n\n        const nextIndex = index + 1;\n        return nextIndex < this.history.length;\n    };\n\n    handlePrevious = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { currentIndex } = this.state;\n        const nextIndex = currentIndex + 1;\n\n        return this.loadMedia(nextIndex, { }, () => {\n            if (nextIndex === this.history.length - 1) {\n                this.loadPrevious();\n            }\n        });\n    };\n\n    loadPrevious = async () => {\n        return;\n    };\n\n    hasNextMedia = index => {\n        if (index === -1) return false;\n\n        const nextIndex = index - 1;\n        return nextIndex >= 0;\n    };\n\n    handleNext = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { currentIndex } = this.state;\n        const nextIndex = currentIndex - 1;\n\n        return this.loadMedia(nextIndex, { }, () => {\n            if (nextIndex === 0) {\n                this.loadNext();\n            }\n        });\n    };\n\n    loadNext = async () => {\n        return;\n    };\n\n    loadMedia = (index, obj, callback) => {\n        if (index < 0) return false;\n        if (index >= this.history.length) return false;\n\n        this.setState(\n            {\n                currentIndex: index,\n                ...obj,\n                hasNextMedia: this.hasNextMedia(index),\n                hasPreviousMedia: this.hasPreviousMedia(index)\n            },\n            callback\n        );\n\n        const { chatId } = this.props;\n\n        preloadProfileMediaViewerContent(chatId, index, this.history);\n        return true;\n    };\n\n    render() {\n        const { chatId, t } = this.props;\n        const {\n            currentIndex,\n            hasNextMedia,\n            hasPreviousMedia,\n            totalCount,\n        } = this.state;\n\n        let index = -1;\n        if (totalCount) {\n            index = currentIndex;\n        }\n\n        const inHistory = index >= 0 && index < this.history.length;\n        const profilePhoto = inHistory ? getProfilePhoto(this.history[index]) : null;\n        const profilePhotoBig = profilePhoto ? profilePhoto.big : null;\n        const profilePhotoBlob = profilePhotoBig ? profilePhotoBig.blob || FileStore.getBlob(profilePhotoBig.id) : null;\n        const photo = profilePhotoBlob ? profilePhoto : getPhotoFromChat(chatId);\n        const userProfilePhoto = inHistory ? this.history[index] : null;\n        const { big: file } = photo;\n        const isMe = isMeChat(chatId);\n\n        return (\n            <div className={classNames('media-viewer', 'media-viewer-default')}>\n                <div className='media-viewer-footer'>\n                    <ProfileMediaInfo chatId={chatId} date={getProfilePhotoDateHint(userProfilePhoto)} />\n                    <MediaViewerFooterText\n                        title={t('AttachPhoto')}\n                        subtitle={totalCount && index >= 0 ? `${index + 1} of ${totalCount}` : null}\n                    />\n                    <MediaViewerDownloadButton title={t('Save')} fileId={file.id} onClick={this.handleSave} />\n                    <MediaViewerDownloadButton title={t('Forward')} fileId={file.id} onClick={this.handleForward}>\n                        <ReplyIcon />\n                    </MediaViewerDownloadButton>\n                    {isMe && (\n                        <MediaViewerFooterButton title={t('Delete')} onClick={this.handleDelete}>\n                            <DeleteIcon />\n                        </MediaViewerFooterButton>\n                    )}\n                    <MediaViewerFooterButton title={t('Close')} onClick={this.handleClose}>\n                        <CloseIcon />\n                    </MediaViewerFooterButton>\n                </div>\n                <div className='media-viewer-wrapper' onClick={this.handlePrevious}>\n                    <div className='media-viewer-left-column'>\n                        <MediaViewerButton disabled={!hasNextMedia} grow onClick={this.handleNext}>\n                            <NavigateBeforeIcon />\n                        </MediaViewerButton>\n                    </div>\n\n                    <div className='media-viewer-content-column'>\n                        <ProfileMediaViewerContent chatId={chatId} photo={photo} onClose={this.handleClose} onPrevious={this.handlePrevious}/>\n                    </div>\n\n                    <div className='media-viewer-right-column'>\n                        <MediaViewerButton disabled={!hasPreviousMedia} grow onClick={this.handlePrevious}>\n                            <NavigateBeforeIcon style={{ transform: 'rotate(180deg)' }} />\n                        </MediaViewerButton>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nProfileMediaViewer.propTypes = {\n    chatId: PropTypes.number.isRequired\n};\n\nexport default withTranslation()(ProfileMediaViewer);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport ChatTile from '../Tile/ChatTile';\nimport { getChatShortTitle, isPrivateChat } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\n\nclass ClearHistoryDialog extends React.Component {\n    state = { };\n\n    static getDerivedStateFromProps(props, state) {\n        const { chatId } = props;\n        const { prevChatId } = state;\n\n        const chat = ChatStore.get(chatId);\n\n        const { can_be_deleted_for_all_users: canBeDeletedForAllUsers } = chat;\n\n        if (prevChatId !== chatId) {\n            return {\n                prevChatId: chatId,\n                canBeDeletedForAllUsers,\n                revoke: canBeDeletedForAllUsers\n            }\n        }\n\n        return null;\n    }\n\n    handleRevokeChange = () => {\n        const { revoke } = this.state;\n\n        this.setState({ revoke: !revoke });\n    };\n\n    render() {\n        const { chatId, onClose, t } = this.props;\n        const { canBeDeletedForAllUsers, revoke } = this.state;\n\n        return (\n            <Dialog\n                open={true}\n                transitionDuration={0}\n                onClose={() => onClose(false, revoke)}\n                aria-labelledby='delete-dialog-title'>\n                <DialogTitle id='delete-dialog-title'>{getChatShortTitle(chatId, false, t)}</DialogTitle>\n                <DialogContent>\n                    <div className='delete-dialog-content'>\n                        <ChatTile chatId={chatId} />\n                        <div>\n                            <DialogContentText id='delete-dialog-description'>\n                                Are you sure you want clear history?\n                            </DialogContentText>\n                            {\n                                canBeDeletedForAllUsers && (\n                                    <FormControlLabel\n                                        control={\n                                            <Checkbox checked={revoke} onChange={this.handleRevokeChange} color='primary' />\n                                        }\n                                        label={\n                                            isPrivateChat(chatId)\n                                                ? `Also delete for ${getChatShortTitle(chatId, false, t)}`\n                                                : 'Delete for all members'\n                                        }\n                                        style={{ marginLeft: 0 }}\n                                    />\n                                )\n                            }\n                        </div>\n                    </div>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={() => onClose(false, revoke)} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={() => onClose(true, revoke)} color='primary'>\n                        {t('Ok')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nClearHistoryDialog.propTypes = {\n    chatId: PropTypes.number,\n    onClose: PropTypes.func\n};\n\nexport default withTranslation()(ClearHistoryDialog);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport { getChatShortTitle, isChannelChat, isPrivateChat, isSupergroup } from '../../Utils/Chat';\nimport MessageStore from '../../Stores/MessageStore';\n\nclass DeleteMessagesDialog extends React.Component {\n    state = { };\n\n    static getDerivedStateFromProps(props, state) {\n        const { chatId, messageIds } = props;\n        const { prevChatId, prevMessageIds } = state;\n\n        let canBeDeletedForAllUsers = true;\n        for (let messageId of messageIds) {\n            const message = MessageStore.get(chatId, messageId);\n            if (!message) {\n                canBeDeletedForAllUsers = false;\n                break;\n            }\n            if (!message.can_be_deleted_for_all_users) {\n                canBeDeletedForAllUsers = false;\n                break;\n            }\n        }\n\n        if (prevChatId !== chatId && prevMessageIds !== messageIds) {\n            return {\n                prevChatId: chatId,\n                prevMessageIds: messageIds,\n                canBeDeletedForAllUsers,\n                revoke: canBeDeletedForAllUsers\n            }\n        }\n\n        return null;\n    }\n\n    handleRevokeChange = () => {\n        const { revoke } = this.state;\n\n        this.setState({ revoke: !revoke });\n    };\n\n    render() {\n        const { chatId, messageIds, onClose, t } = this.props;\n        const { canBeDeletedForAllUsers, revoke } = this.state;\n\n        const count = messageIds ? messageIds.length : 0;\n\n        return (\n            <Dialog\n                transitionDuration={0}\n                open={true}\n                onClose={() => onClose(false, revoke)}\n                aria-labelledby='delete-dialog-title'>\n                <DialogTitle id='delete-dialog-title'>{t('Confirm')}</DialogTitle>\n                <DialogContent>\n                    <DialogContentText>\n                        {count === 1\n                            ? 'Do you want to delete this message?'\n                            : `Do you want to delete ${count} messages?`}\n                    </DialogContentText>\n                    { isSupergroup(chatId) ? (\n                        <DialogContentText>\n                            { !isChannelChat(chatId) && (count === 1\n                                ? 'This will delete it for everyone in this chat'\n                                : 'This will delete them for everyone in this chat')\n                            }\n                        </DialogContentText>\n                    ) : (\n                        <>\n                            {\n                                canBeDeletedForAllUsers && (\n                                    <FormControlLabel\n                                        control={\n                                            <Checkbox checked={revoke} onChange={this.handleRevokeChange} color='primary' />\n                                        }\n                                        label={\n                                            isPrivateChat(chatId)\n                                                ? `Delete for ${getChatShortTitle(chatId, false, t)}`\n                                                : 'Delete for all'\n                                        }\n                                    />\n                                )}\n                        </>\n                    )}\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={() => onClose(false, revoke)} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={() => onClose(true, revoke)} color='primary'>\n                        {t('Ok')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nDeleteMessagesDialog.propTypes = {\n    chatId: PropTypes.number,\n    messageIds: PropTypes.array,\n    onClose: PropTypes.func\n};\n\nexport default withTranslation()(DeleteMessagesDialog);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport Button from '@material-ui/core/Button';\nimport ChatTile from '../Tile/ChatTile';\nimport { getChatShortTitle } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\n\nclass LeaveChatDialog extends React.Component {\n    getDeleteDialogText = (chatId, t) => {\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n        if (!chat.type) return null;\n\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup': {\n                return `Are you sure you want to leave group ${chat.title}?`;\n            }\n            case 'chatTypeSupergroup': {\n                const supergroup = SupergroupStore.get(chat.type.supergroup_id);\n                if (supergroup) {\n                    return supergroup.is_channel\n                        ? `Are you sure you want to leave channel ${chat.title}?`\n                        : `Are you sure you want to leave group ${chat.title}?`;\n                }\n\n                return null;\n            }\n            case 'chatTypePrivate':\n            case 'chatTypeSecret': {\n                return `Are you sure you want to delete chat with ${getChatShortTitle(chatId, false, t)}?`;\n            }\n        }\n\n        return null;\n    };\n\n    render() {\n        const { chatId, onClose, t } = this.props;\n\n        return (\n            <Dialog\n                open={true}\n                transitionDuration={0}\n                onClose={() => onClose(false)}\n                aria-labelledby='delete-dialog-title'>\n                <DialogTitle id='delete-dialog-title'>{getChatShortTitle(chatId, false, t)}</DialogTitle>\n                <DialogContent>\n                    <div className='delete-dialog-content'>\n                        <ChatTile chatId={chatId} />\n                        <DialogContentText id='delete-dialog-description'>\n                            {this.getDeleteDialogText(chatId, t)}\n                        </DialogContentText>\n                    </div>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={() => onClose(false)} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={() => onClose(true)} color='primary' autoFocus>\n                        {t('Ok')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nLeaveChatDialog.propTypes = {\n    chatId: PropTypes.number,\n    onClose: PropTypes.func\n};\n\nexport default withTranslation()(LeaveChatDialog);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Typography from '@material-ui/core/es/Typography/Typography';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport './NotificationTimer.css';\n\nclass NotificationTimer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            seconds: this.props.timeout / 1000,\n            value: 0\n        };\n    }\n\n    componentDidMount() {\n        this.startTime = new Date();\n        this.expire = this.startTime;\n        this.expire.setMilliseconds(this.expire.getMilliseconds() + this.props.timeout);\n        this.timerId = setInterval(this.handleTimer, 100);\n    }\n\n    handleTimer = () => {\n        const now = new Date();\n        const seconds = this.expire - now;\n        const value = 100 - (seconds / this.props.timeout) * 100;\n        // console.log(`NotificationTimer ms=${seconds} value=${value}`);\n        this.setState({\n            seconds: seconds > 0 ? seconds : 0,\n            value: value > 100 ? 100 : value\n        });\n\n        if (now >= this.expire) {\n            if (this.timerId) {\n                clearInterval(this.timerId);\n                this.timerId = null;\n\n                const { onTimeout } = this.props;\n                if (onTimeout) {\n                    onTimeout();\n                }\n            }\n        }\n    };\n\n    componentWillUnmount() {\n        if (this.timerId) {\n            clearInterval(this.timerId);\n            this.timerId = null;\n        }\n    }\n\n    render() {\n        const { value, seconds } = this.state;\n\n        return (\n            <div className='notification-timer'>\n                <div className='notification-timer-text'>\n                    <Typography color='inherit'>{(seconds / 1000).toFixed()}</Typography>\n                </div>\n                <div className='notification-timer-progress'>\n                    <CircularProgress size={32} value={100 - value} variant='static' />\n                </div>\n            </div>\n        );\n    }\n}\n\nNotificationTimer.propTypes = {\n    timeout: PropTypes.number.isRequired,\n    onTimeout: PropTypes.func\n};\n\nexport default NotificationTimer;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { compose } from '../Utils/HOC';\nimport { withSnackbar } from 'notistack';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport ClearHistoryDialog from './Popup/ClearHistoryDialog';\nimport DeleteMessagesDialog from './Popup/DeleteMessagesDialog';\nimport LeaveChatDialog from './Popup/LeaveChatDialog';\nimport NotificationTimer from './Additional/NotificationTimer';\nimport { isChatMember, isCreator } from '../Utils/Chat';\nimport { NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../Constants';\nimport AppStore from '../Stores/ApplicationStore';\nimport ChatStore from '../Stores/ChatStore';\nimport SupergroupStore from '../Stores/SupergroupStore';\nimport UserStore from '../Stores/UserStore';\nimport TdLibController from '../Controllers/TdLibController';\nimport MessageStore from '../Stores/MessageStore';\nimport { clearSelection } from '../Actions/Client';\n\nclass Actions extends React.PureComponent {\n    state = {\n        leaveChat: null,\n        clearHistory: null,\n        deleteMessages: null\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateRequestLeaveChat', this.onClientUpdateLeaveChat);\n        AppStore.on('clientUpdateRequestClearHistory', this.onClientUpdateClearHistory);\n        AppStore.on('clientUpdateDeleteMessages', this.onClientUpdateDeleteMessages);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateRequestLeaveChat', this.onClientUpdateLeaveChat);\n        AppStore.off('clientUpdateRequestClearHistory', this.onClientUpdateClearHistory);\n        AppStore.off('clientUpdateDeleteMessages', this.onClientUpdateDeleteMessages);\n    }\n\n    onClientUpdateDeleteMessages = update => {\n        const { chatId, messageIds } = update;\n\n        this.setState({\n            deleteMessages: {\n                chatId,\n                messageIds\n            }\n        });\n    };\n\n    onClientUpdateLeaveChat = update => {\n        const { chatId } = update;\n\n        this.setState({ leaveChat : { chatId } });\n    };\n\n    onClientUpdateClearHistory = update => {\n        const { chatId } = update;\n\n        this.setState({ clearHistory : { chatId } });\n    };\n\n    handleClearHistoryContinue = (result, revoke) => {\n        const { t } = this.props;\n\n        const { clearHistory } = this.state;\n        if (!clearHistory) return;\n\n        this.setState({ clearHistory: null });\n\n        if (!result) return;\n\n        const chatId = AppStore.getChatId();\n        const message = t('HistoryClearedUndo');\n        const request = {\n            '@type': 'deleteChatHistory',\n            chat_id: chatId,\n            remove_from_chat_list: false,\n            revoke\n        };\n\n        this.handleScheduledAction(chatId, 'clientUpdateClearHistory', message, [request]);\n    };\n\n    handleLeaveContinue = result => {\n        const { leaveChat } = this.state;\n        if (!leaveChat) return;\n\n        const { chatId } = leaveChat;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        this.setState({ leaveChat: null });\n\n        if (!result) return;\n\n        const message = this.getLeaveChatNotification(chatId);\n        const requests = [];\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup': {\n                if (isChatMember(chatId)) {\n                    requests.push({ '@type': 'leaveChat', chat_id: chatId });\n                }\n                requests.push({ '@type': 'deleteChatHistory', chat_id: chatId, remove_from_chat_list: true });\n            }\n            case 'chatTypeSupergroup': {\n                if (isCreator(chatId)) {\n                    requests.push({\n                        '@type': 'setChatMemberStatus',\n                        chat_id: chatId,\n                        user_id: UserStore.getMyId(),\n                        status: {\n                            '@type': 'chatMemberStatusCreator',\n                            is_member: false\n                        }\n                    });\n                } else if (isChatMember(chatId)) {\n                    requests.push({ '@type': 'leaveChat', chat_id: chatId });\n                }\n            }\n            case 'chatTypePrivate':\n            case 'chatTypeSecret': {\n                requests.push({ '@type': 'deleteChatHistory', chat_id: chatId, remove_from_chat_list: true });\n            }\n        }\n\n        this.handleScheduledAction(chatId, 'clientUpdateLeaveChat', message, requests);\n    };\n\n    handleDeleteMessagesContinue = (result, revoke) => {\n        const { deleteMessages } = this.state;\n        if (!deleteMessages) return;\n\n        const { chatId, messageIds } = deleteMessages;\n\n        clearSelection();\n        this.setState({ deleteMessages: null });\n\n        if (!result) return;\n\n        TdLibController.send({\n            '@type': 'deleteMessages',\n            chat_id: chatId,\n            message_ids: messageIds,\n            revoke\n        });\n    };\n\n    getLeaveChatNotification = chatId => {\n        const { t } = this.props;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return t('ChatDeletedUndo');\n        if (!chat.type) return t('ChatDeletedUndo');\n\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup': {\n                return t('ChatDeletedUndo');\n            }\n            case 'chatTypeSupergroup': {\n                const supergroup = SupergroupStore.get(chat.type.supergroup_id);\n                if (supergroup) {\n                    return supergroup.is_channel ? 'Left channel' : 'Left group';\n                }\n\n                return t('ChatDeletedUndo');\n            }\n            case 'chatTypePrivate':\n            case 'chatTypeSecret': {\n                return t('ChatDeletedUndo');\n            }\n        }\n\n        return t('ChatDeletedUndo');\n    };\n\n    handleScheduledAction = (chatId, clientUpdateType, message, requests) => {\n        const { t } = this.props;\n        if (!clientUpdateType) return;\n\n        const key = `${clientUpdateType} chatId=${chatId}`;\n        const action = async () => {\n            try {\n                for (let i = 0; i < requests.length; i++) {\n                    await TdLibController.send(requests[i]);\n                }\n            } finally {\n                TdLibController.clientUpdate({ '@type': clientUpdateType, chatId, inProgress: false });\n            }\n        };\n        const cancel = () => {\n            TdLibController.clientUpdate({ '@type': clientUpdateType, chatId, inProgress: false });\n        };\n\n        const { enqueueSnackbar, closeSnackbar } = this.props;\n\n        TdLibController.clientUpdate({ '@type': clientUpdateType, chatId, inProgress: true });\n        const snackKey = enqueueSnackbar(message, {\n            persist: true,\n            key,\n            preventDuplicate: true,\n            action: [\n                <IconButton\n                    key='progress'\n                    color='inherit'\n                    className='progress-button'>\n                    <NotificationTimer\n                        timeout={NOTIFICATION_AUTO_HIDE_DURATION_MS}\n                        onTimeout={() => {\n                            action();\n                            closeSnackbar(snackKey);\n                        }}/>\n                </IconButton>,\n                <Button\n                    key='undo'\n                    color='primary'\n                    size='small'\n                    onClick={() => {\n                        cancel();\n                        closeSnackbar(snackKey);\n                    }}>\n                    {t('Undo')}\n                </Button>\n            ]\n        });\n    };\n\n    render() {\n        const { leaveChat, clearHistory, deleteMessages } = this.state;\n        if (leaveChat) {\n            const { chatId } = leaveChat;\n\n            return (\n                <LeaveChatDialog\n                    chatId={chatId}\n                    onClose={this.handleLeaveContinue} />\n                );\n        } else if (clearHistory) {\n            const { chatId } = clearHistory;\n\n            return (\n                <ClearHistoryDialog\n                    chatId={chatId}\n                    onClose={this.handleClearHistoryContinue} />\n                );\n        } else if (deleteMessages) {\n            const { chatId, messageIds } = deleteMessages;\n\n            return (\n                <DeleteMessagesDialog\n                    chatId={chatId}\n                    messageIds={messageIds}\n                    onClose={this.handleDeleteMessagesContinue} />\n                );\n        }\n\n        return null;\n    }\n}\n\nconst enhance = compose(\n    withSnackbar,\n    withTranslation()\n);\n\nexport default enhance(Actions);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport { compose } from '../Utils/HOC';\nimport withLanguage from '../Language';\nimport withSnackbarNotifications from '../Notifications';\nimport PipPlayer from './Player/PipPlayer';\nimport ForwardDialog from './Popup/ForwardDialog';\nimport ChatInfo from './ColumnRight/ChatInfo';\nimport Dialogs from './ColumnLeft/Dialogs';\nimport DialogDetails from './ColumnMiddle/DialogDetails';\nimport InstantViewer from './InstantView/InstantViewer';\nimport MediaViewer from './Viewer/MediaViewer';\nimport ProfileMediaViewer from './Viewer/ProfileMediaViewer';\nimport { highlightMessage } from '../Actions/Client';\nimport AppStore from '../Stores/ApplicationStore';\nimport ChatStore from '../Stores/ChatStore';\nimport InstantViewStore from '../Stores/InstantViewStore';\nimport UserStore from '../Stores/UserStore';\nimport PlayerStore from '../Stores/PlayerStore';\nimport TdLibController from '../Controllers/TdLibController';\nimport '../TelegramApp.css';\nimport Actions from './Actions';\n\nclass MainPage extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.dialogDetailsRef = React.createRef();\n\n        const { isChatDetailsVisible, mediaViewerContent, profileMediaViewerContent, isSmallWidth } = AppStore;\n\n        this.state = {\n            isChatDetailsVisible,\n            mediaViewerContent,\n            profileMediaViewerContent,\n            isSmallWidth,\n            forwardInfo: null,\n            instantViewContent: null,\n            videoInfo: null\n        };\n    }\n\n    componentDidMount() {\n        UserStore.on('clientUpdateOpenUser', this.onClientUpdateOpenUser);\n        ChatStore.on('clientUpdateOpenChat', this.onClientUpdateOpenChat);\n\n        AppStore.on('clientUpdateChatDetailsVisibility', this.onClientUpdateChatDetailsVisibility);\n        AppStore.on('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n        AppStore.on('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n        AppStore.on('clientUpdateProfileMediaViewerContent', this.onClientUpdateProfileMediaViewerContent);\n        AppStore.on('clientUpdateForward', this.onClientUpdateForward);\n        InstantViewStore.on('clientUpdateInstantViewContent', this.onClientUpdateInstantViewContent);\n        PlayerStore.on('clientUpdatePictureInPicture', this.onClientUpdatePictureInPicture);\n    }\n\n    componentWillUnmount() {\n        UserStore.off('clientUpdateOpenUser', this.onClientUpdateOpenUser);\n        ChatStore.off('clientUpdateOpenChat', this.onClientUpdateOpenChat);\n\n        AppStore.off('clientUpdateChatDetailsVisibility', this.onClientUpdateChatDetailsVisibility);\n        AppStore.off('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n        AppStore.off('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n        AppStore.off('clientUpdateProfileMediaViewerContent', this.onClientUpdateProfileMediaViewerContent);\n        AppStore.off('clientUpdateForward', this.onClientUpdateForward);\n        InstantViewStore.off('clientUpdateInstantViewContent', this.onClientUpdateInstantViewContent);\n        PlayerStore.off('clientUpdatePictureInPicture', this.onClientUpdatePictureInPicture);\n    }\n\n    onClientUpdatePictureInPicture = update => {\n        const { videoInfo } = update;\n\n        this.setState({\n            videoInfo\n        });\n    };\n\n    onClientUpdatePageWidth = update => {\n        const { isSmallWidth } = update;\n\n        this.setState({ isSmallWidth });\n    };\n\n    onClientUpdateInstantViewContent = update => {\n        const { content } = update;\n\n        this.setState({\n            instantViewContent: content\n        });\n    };\n\n    onClientUpdateOpenChat = update => {\n        const { chatId, messageId, popup } = update;\n\n        this.handleSelectChat(chatId, messageId, popup);\n    };\n\n    onClientUpdateOpenUser = update => {\n        const { userId, popup } = update;\n\n        this.handleSelectUser(userId, popup);\n    };\n\n    onClientUpdateChatDetailsVisibility = update => {\n        const { isChatDetailsVisible } = AppStore;\n\n        this.setState({ isChatDetailsVisible });\n    };\n\n    onClientUpdateMediaViewerContent = update => {\n        const { mediaViewerContent } = AppStore;\n\n        this.setState({ mediaViewerContent });\n    };\n\n    onClientUpdateProfileMediaViewerContent = update => {\n        const { profileMediaViewerContent } = AppStore;\n\n        this.setState({ profileMediaViewerContent });\n    };\n\n    onClientUpdateForward = update => {\n        const { info } = update;\n\n        this.setState({ forwardInfo: info });\n    };\n\n    handleSelectChat = (chatId, messageId = null, popup = false) => {\n        const currentChatId = AppStore.getChatId();\n        const currentDialogChatId = AppStore.dialogChatId;\n        const currentMessageId = AppStore.getMessageId();\n\n        if (popup) {\n            if (currentDialogChatId !== chatId) {\n                TdLibController.clientUpdate({\n                    '@type': 'clientUpdateDialogChatId',\n                    chatId\n                });\n            }\n\n            return;\n        }\n\n        if (currentChatId === chatId && messageId && currentMessageId === messageId) {\n            this.dialogDetailsRef.current.scrollToMessage();\n            if (messageId) {\n                highlightMessage(chatId, messageId);\n            }\n        } else if (currentChatId === chatId && !messageId) {\n            this.dialogDetailsRef.current.scrollToStart();\n        } else {\n            TdLibController.setChatId(chatId, messageId);\n        }\n    };\n\n    handleSelectUser = async (userId, popup) => {\n        if (!userId) return;\n\n        const chat = await TdLibController.send({\n            '@type': 'createPrivateChat',\n            user_id: userId,\n            force: true\n        });\n\n        this.handleSelectChat(chat.id, null, popup);\n    };\n\n    render() {\n        const {\n            instantViewContent,\n            isChatDetailsVisible,\n            mediaViewerContent,\n            profileMediaViewerContent,\n            forwardInfo,\n            videoInfo,\n            isSmallWidth\n        } = this.state;\n\n        return (\n            <>\n                <div\n                    className={classNames('page', {\n                        'page-small': isSmallWidth,\n                        'page-third-column': isChatDetailsVisible\n                    })}>\n                    <Dialogs />\n                    <DialogDetails ref={this.dialogDetailsRef} />\n                    {isChatDetailsVisible && <ChatInfo />}\n                </div>\n                <Actions/>\n                {instantViewContent && <InstantViewer {...instantViewContent} />}\n                {mediaViewerContent && <MediaViewer {...mediaViewerContent} />}\n                {profileMediaViewerContent && <ProfileMediaViewer {...profileMediaViewerContent} />}\n                {forwardInfo && <ForwardDialog {...forwardInfo} />}\n                {videoInfo && <PipPlayer {...videoInfo}/>}\n            </>\n        );\n    }\n}\n\nMainPage.propTypes = {};\n\nconst enhance = compose(\n    withLanguage,\n    withSnackbarNotifications\n);\n\nexport default enhance(MainPage);\n"],"sourceRoot":""}